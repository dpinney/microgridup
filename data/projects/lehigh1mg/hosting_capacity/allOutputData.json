{
    "traditionalHCMap": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <!-- Load Leaflet from CDN -->\n    <link rel=\"stylesheet\" href=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.css\" integrity=\"sha256-kLaT2GOSpHechhsozzB+flnD+zUyjE2LlfWPgU04xyI=\" crossorigin=\"\"/>\n    <script src=\"https://unpkg.com/leaflet@1.9.3/dist/leaflet.js\" integrity=\"sha256-WBkoXOwTeyKclOHuWtc+i2uENFpDZ9YPdf5Hf+D7ewM=\" crossorigin=\"\"> </script> \n    <!-- Load the third-party Esri Leaflet plugin, which is used to get ESRI tiles -->\n    <script src=\"https://unpkg.com/esri-leaflet@3.0.10/dist/esri-leaflet.js\"></script>\n    <script src=\"https://unpkg.com/esri-leaflet-vector@4.0.1/dist/esri-leaflet-vector.js\"></script>\n    <!-- Load the third-party Mapbox GL Leaflet plugin, which is used to get Mapbox tiles -->\n    <link href='https://api.tiles.mapbox.com/mapbox-gl-js/v1.5.0/mapbox-gl.css' rel='stylesheet' />\n    <script src='https://api.tiles.mapbox.com/mapbox-gl-js/v1.5.0/mapbox-gl.js'></script>\n    <script src=\"https://unpkg.com/mapbox-gl-leaflet/leaflet-mapbox-gl.js\"></script>\n    <!-- jQuery -->\n    <script src=\"https://code.jquery.com/jquery-3.7.0.min.js\" integrity=\"sha256-2Pmvv0kuTBOenSvLm6bvfBSSHrUJ+3A7x6P5Ebd07/g=\" crossorigin=\"anonymous\"></script>\n    <script src=\"https://code.jquery.com/ui/1.13.2/jquery-ui.min.js\" integrity=\"sha256-lSjKY0/srUM9BE3dPm+c4fBo1dky2v27Gdjm2uoZaL0=\" crossorigin=\"anonymous\"></script>\n    <!-- Local --> \n    <style>\n/**********************************************/\n/* Default styling. BE CAREFUL WHEN CHANGING! */\n/**********************************************/\nbutton.js-button--dropdown {\n    align-items: center;\n    border: 0;\n    cursor: pointer;\n    display: flex;\n    padding: 0;\n    width: 100%;\n}\ndiv.js-div--dropdown {\n    /* Don't set height 100% because I need all three top-level dropdown divs to be up against each other */\n    /* Don't set max-height here because it makes FeatureEditModals cover stuff in the side bar */\n    /* This is done to make search results not have a weird horizontal bar pop up, but I can't set this here because it screws up the file menu */\n    /*overflow-x: hidden;*/\n}\ndiv.js-div--dropdown span {\n    font-size: var(--regularFontSize);\n}\ndiv.js-div--dropdownContent {\n    max-height: 0;\n    overflow: hidden;\n}\ndiv.js-div--dropdownContent.expanded {\n    max-height: 100%;\n    overflow: auto;\n}\nsvg.js-svg--dropdown {\n    transform: rotate(0deg);\n    transition: transform 0.25s ease;\n}\nsvg.js-svg--dropdown.rotated {\n    transform: rotate(90deg);\n    transition: transform 0.25s ease;\n}\n\n/********************/\n/* Side nav styling */\n/********************/\n\ndiv.js-div--dropdown.sideNav {\n    overflow-x: hidden;\n}\ndiv.js-div--dropdown.sideNav button.js-button--dropdown {\n    background-color: #FFFFFF;\n    border-top: 1px solid black;\n    justify-content: space-between;\n    padding: .5rem 0 .5rem 0;\n}\n/* This is the search results div */\ndiv.selected > div:nth-child(2) {\n    /* HACK: hardcoded height */\n    max-height: 69vh;\n    overflow: auto;\n}\ndiv.selected div.js-div--dropdown.sideNav.searchCategory > button.js-button--dropdown {\n    box-shadow: inset -1px 0px darkgray;\n}\ndiv.js-div--dropdown.sideNav span > div:first-child {\n    font-weight: bold;\n}\ndiv.js-div--dropdown.sideNav.searchCategory > button.js-button--dropdown > span {\n    padding: 0 0 0 var(--regularFontSize);\n    text-align: left;\n}\ndiv.js-div--dropdown.sideNav button.horizontalFlex span {\n    padding: 0;\n}\n\n/****************/\n/* Menu styling */\n/****************/\n\ndiv.js-div--dropdown.menu {\n    white-space: nowrap;\n    width: 85px;\n}\ndiv.js-div--dropdown.menu button.js-button--dropdown {\n    background-color: transparent;\n    color: white;\n    justify-content: end;\n}\ndiv.js-div--dropdown.menu button.js-button--dropdown.expanded {\n    background-color: #FFFFFF;\n    border-radius: 5px 5px 0px 0px;\n    color: black\n}\ndiv.js-div--dropdown.menu button.js-button--dropdown svg.js-svg--dropdown path {\n    fill: white;\n}\ndiv.js-div--dropdown.menu button.js-button--dropdown.expanded svg.js-svg--dropdown path {\n    fill: black;\n}\ndiv.js-div--dropdown.menu div.js-div--dropdownContent {\n    background-color: #FFFFFF;\n    border-radius: 5px 0px 5px 5px;\n    float: right;\n    overflow-x: visible;\n}\ndiv.js-div--dropdown.menu div.js-div--dropdownContent.expanded {\n    box-shadow: 0 10px 14px rgba(0,0,0,0.4)\n}\ndiv.js-div--dropdown.menu div.js-div--dropdownContent div {\n    font-size: var(--regularFontSize);\n    padding: 0 .25rem 0 .25rem;\n}\n</style>\n<style>\n.svg--icon-gray {\n    fill: gray;\n    fill-opacity: 80%;\n}\n.svg--icon-gray {\n    fill: gray;\n    fill-opacity: 80%;\n}\n.svg--icon-red {\n    fill: red;\n    fill-opacity: 80%;\n}\n.svg--icon-purple {\n    fill: purple;\n    fill-opacity: 80%;\n}\n.svg--icon-blue {\n    fill: blue;\n    fill-opacity: 80%;\n}\n</style>\n<style>\narticle.js-article--sideNavArticle {\n    /* Set position:relative; so that any absolutely positioned elements within the article don't go out of bounds*/\n    position: relative;\n    transition: margin-left var(--sideNavTransitionTime);\n}\narticle.js-article--sideNavArticle.compressed {\n    margin-left: var(--sideNavWidth);\n    transition: margin-left var(--sideNavTransitionTime);\n}\nnav.js-nav--sideNav {\n    background-color: #FFFFFF;\n    box-shadow: inset -1px 0px darkgray;\n    font-family: sans-serif;\n    height: 100%;\n    /*overflow-y: auto;*/\n    position: fixed;\n    transform: translate(calc(var(--sideNavWidth) * -1), 0px);\n    transition: transform var(--sideNavTransitionTime);\n    width: var(--sideNavWidth);\n    z-index: 2;\n}\nnav.js-nav--sideNav.open {\n    transform: translate(0px, 0px);\n}\ndiv.js-div--sideNavCover {\n    display: none;\n    z-index: 1;\n}\n@media screen and (max-width: 976px) {\n    div.js-div--sideNavCover.open {\n        background-color: rgba(189, 189, 189, 0.6);\n        display: initial;\n        height: 100%;\n        position: fixed;\n        width: 100%;\n    }\n}\n</style>\n<style>\n* {\n    box-sizing: border-box;\n    font-family: Helvetica, Arial, Sans-Serif;\n}\n:root {\n    --headerHeight: 50px;\n    --regularFontSize: 13px;\n    --regularFontPadding: .5rem;\n    --sideNavWidth: 485px;\n    --sideNavTransitionTime: 0.3s;\n    --tableRowMinHeight: 2rem;\n}\n\n/*******/\n/* IDs */\n/*******/\n\n#map {\n    height: calc(100vh - var(--headerHeight));\n    z-index: 0;\n}\n#menuInsert {\n    display: flex;\n    position: absolute;\n    right: 10px;\n    top: 5px;\n    z-index: 1;\n}\n\n/************/\n/* Elements */\n/************/\n\na {\n    text-decoration: none;\n    color: #00b11a;\n}\nbody {\n    height: 100vh;\n    margin: 0;\n}\nheader {\n    background: black;\n    display: flex;\n    height: var(--headerHeight);\n    /*justify-content: space-between;*/\n    /* If I don't make the header absolutely positioned, I can remove the margin from <main></main>*/\n    /*position: fixed;*/\n    /*top: 0;*/\n    width: 100%;\n    z-index: 1;\n}\nmain {\n    /* This isn't needed anymore, but keep it in case */\n    /*margin: var(--headerHeight) 0 0 0;*/\n    /* Is this needed ? */\n    height: calc(100% - var(--headerHeight));\n}\n\n/***********/\n/* Classes */\n/***********/\n\n.leaflet-popup-content {\n    width: 330px !important;\n    font-family: sans-serif;\n}\n.leaflet-custom-control-button {\n    background-color: #FFFFFF;\n    border: none;\n    border-radius: 4px;\n    color: black;\n    cursor: pointer;\n    padding: .25rem;\n}\n</style>\n<style>\nnav.js-nav--topNav {\n    background: black;\n    display: flex;\n    height: 100%;\n}\nnav.js-nav--topNav a {\n    text-decoration: none;\n}\nnav.js-nav--topNav button {\n    background-color: transparent;\n    border: 0;\n    /*cursor: pointer;*/\n    padding: 14px;\n    width: var(--headerHeight);\n}\n/*nav.js-nav--topNav button:hover {\n    background-color: gray;\n    transition: background-color 0.2s ease-out;\n}*/\nnav.js-nav--topNav div {\n    align-items: center;\n    display: flex;\n    /* This padding was added because David removed the hamburger menu */\n    padding: 0 0 0 10px;\n}\nnav.js-nav--topNav span {\n    color: white;\n    font-size: 26px;\n}\nnav.js-nav--topNav svg path {\n    fill: white;\n}\n</style>\n<style>\n/*******/\n/* IDs */\n/*******/\n\n#legendInsert {\n    bottom: 0px;\n    position: absolute;\n    right: 0px;\n}\n#modalInsert {\n    align-items: center;\n    background-color: rgba(0,0,0,0.4);\n    display: none;\n    /* The modalInsert div needs a height in order for inner divs to be able to use percentage values for max-height */\n    height: 100%; /* DO NOT CHANGE THIS */\n    justify-content: center;\n    position: absolute;\n    /*top: calc(var(--headerHeight));*/\n    top: 0;\n    width: 100%;\n    /* z-index is is needed to cover the sideNav */\n    z-index: 2;\n\n}\n#modalInsert.visible {\n    display: flex;\n}\n\n/******************/\n/* Shared classes */\n/******************/\n\n.absolute {\n    position: absolute;\n}\n.horizontalFlex {\n    display: flex;\n}\nbutton.horizontalFlex {\n    /* HACK: hard-code height for buttons in modals */\n    min-height: 28.8px;\n}\ndiv.horizontalFlex { \n    min-height: var(--tableRowMinHeight);\n}\n.verticalFlex {\n    display: flex;\n    flex-direction: column;\n}\n.centerMainAxisFlex {\n    justify-content: center;;\n}\n.centerCrossAxisFlex {\n    align-items: center;\n}\n.hoverable:hover {\n    background-color: seagreen;\n    color: white;\n}\n.halfWidth {\n    width: 50%;\n}\n.fullWidth {\n    width: 100%;\n}\n.indent1 {\n    padding: 0 0 0 var(--regularFontSize);\n    text-align: left;\n}\n.indent2 {\n    padding: 0 0 0 calc(2 * var(--regularFontSize)); \n    text-align: left;\n}\n\n/* TODO use media queries to set max-width based on screen size. Don't create additional classes. 50% max width is fine in 90% of cases */\n/**********************************************/\n/* Default styling. BE CAREFUL WHEN CHANGING! */\n/**********************************************/\n\ndiv.js-div--modal {\n    /* Material design says that the background color doesn't affect brand, so it should be plain white */\n    background: #FFFFFF;\n    /* Material design uses 4dp rounded corners. 5px looks close enough */\n    border-radius: 5px;\n    /* Only overflowing modals (e.g. the \"Load Feeder\" modal) need a height of 100%. Unfortunately, this height must be set to 100% so that\n    overflowing modals may constrain themselves. The majority of modals will need to set their height back \"initial\" */\n    height: 100%;\n    max-height: 75vh;\n    max-width: 75vw;\n    /* Don't add padding because it lets stuff scroll above a sticky thead */\n    /*padding: 1rem;*/\n    overflow: auto;\n    width: 100%;\n}\ndiv.js-div--modal.fitContent {\n    height: initial;\n    width: initial;\n}\ndiv.js-div--modal.outerModal {\n    padding: 1rem;\n}\ndiv.js-div--modal.collapsed {\n    max-height: 0;\n    overflow: hidden;\n    /*transition: max-height 10s ease;*/\n}\ndiv.js-div--modal.expanded {\n    /* This property and the \"expanded\" class exist to prevent the scrollbar from appearing while the div is expanding */\n    overflow: hidden;\n    /*transition: max-height .2s;*/\n}\ndiv.js-div--modal button {\n    background-color: mediumblue;\n    border: none;\n    border-radius: 5px;\n    color: white;\n    cursor: pointer;\n    max-width: 400px;\n    padding: .15rem;\n    z-index: 1;\n}\ndiv.js-div--modal button:hover {\n    background-color: blue;\n}\ndiv.js-div--modal button.delete {\n    background-color: crimson;\n}\ndiv.js-div--modal button.delete:hover {\n    background-color: red;\n}\ndiv.js-div--modal button.add {\n    background-color: seagreen;\n}\ndiv.js-div--modal button.add:hover {\n    background-color: mediumseagreen;\n}\ndiv.js-div--modal button:disabled {\n    background-color: gray;\n}\ndiv.js-div--modal input {\n    border: 1px solid black;\n    font-size: var(--regularFontSize);\n    margin: 0;\n    padding: .2rem;\n    width: 100%;\n}\ndiv.js-div--modal select {\n    background-color: #FFFFFF;\n    border: 1px solid black;\n    border-radius: 5px;\n    font-size: var(--regularFontSize);\n    padding: .2rem;\n    /* width cannot be 100% for all modals because of big modal like anonymization */\n}\ndiv.js-div--modal span {\n    font-size: var(--regularFontSize);\n}\ndiv.js-div--modal textarea {\n    font-size: var(--regularFontSize);\n    height: 100%;\n    height: calc(100% - 84px);\n    width: 100%;\n}\ndiv.js-div--modal table.table--modal span {\n    width: 100%;\n}\ndiv.div--modalBanner {\n    border-radius: 5px;\n    font-size: 24px;\n    padding: 1rem;\n    text-align: center;\n}\ndiv.div--modalBanner.caution {\n    background-color: hsla(50, 100%, 70%, 1);\n}\ndiv.div--modalBanner.hidden {\n    display: none;\n}\ndiv.div--modalTitle span {\n    /* This is 43px tall */\n    font-size: 26px;\n    font-weight: bold;\n    padding: var(--regularFontPadding);\n}\ndiv.div--modalTitle.caution {\n    background-color: hsla(50, 100%, 70%, 1);\n}\ndiv.div--modalElementContainer {\n    height: 100%;\n    /* HACK: I should know how to subtract 100% of the height to get an actual height instead of guessing. This should be 92% default because that\n    makes the \"Load Feeder\" modal take up most of the space without leaving a big white zone at the bottom. The problem is the title takes up space in\n    a modal element container, so I can't just use 100%. 92% is actually fine. Use custom CSS for one-offs like the attachments modal. 89% works too.\n    */\n    max-height: calc(100% - 43px);\n    width: 100%;\n}\ntable.table--modal {\n    border-collapse: collapse;\n    font-size: var(--regularFontSize);\n    position: relative;\n    table-layout: fixed;\n    text-align: left;\n    word-wrap: break-word;\n}\ntable.table--modal.centeredTable {\n    margin: auto;\n}\ntable.table--modal td div, table.table--modal th div {\n    display: flex;\n    align-items: center;\n    min-height: var(--tableRowMinHeight);\n}\ntable.table--modal td, table.table--modal th {\n    padding: 0;\n}\ntable.table--modal td:not(:first-child), table.table--modal th:not(:first-child) {\n    padding: 0 0 0 var(--regularFontPadding);\n}\ntable.table--modal thead {\n    background: white;\n    position: sticky;\n    top: 0;\n}\n/* Support for renderReadOnlyModal */\ndiv.leaflet-popup-content div.js-div--modal.featureEditModal {\n    border-radius: 0px;\n}\ntable.plainTable td, table.plainTable th {\n    border: 1px solid black;\n}\ndiv.js-div--modal.featureEditModal table.table--modal.plainTable td:nth-child(2) {\n    max-width: initial;\n    width: initial;\n}\ntable.table--modal.plainTable td, table.table--modal.plainTable th {\n    padding: .25rem;\n}\n\n/****************************/\n/* FeatureEditModal styling */\n/****************************/\n\ndiv.js-div--modal.featureEditModal {\n    max-height: 70vh;\n}\ndiv.js-div--modal.featureEditModal table.table--modal td:nth-child(2) {\n    max-width: 160px;\n    width: 160px;\n}\n\n/***********************/\n/* SearchModal styling */\n/***********************/\n\ndiv.js-div--modal.searchModal {\n    border-radius: 0;\n    box-shadow: inset -1px 0px darkgray;\n    max-height: 20vh;\n}\ndiv.js-div--modal.searchModal div.div--modalElementContainer {\n    height: initial;\n}\ndiv.js-div--modal.searchModal select {\n    width: 100%;\n}\ndiv.js-div--modal.searchModal table.table--modal td:first-child {\n    max-width: 32px;\n    width: 32px;\n}\ndiv.js-div--modal.searchModal table.table--modal td:nth-child(2) {\n    max-width: 50px;\n    width: 50px;\n}\ndiv.js-div--modal.searchModal table.table--modal td:nth-child(3) {\n    max-width: 160px;\n    width: 160px;\n}\ndiv.js-div--modal.searchModal table.table--modal td:nth-child(4) {\n    max-width: 75px;\n    width: 75px;\n}\n\n/*****************************/\n/* Load feeder modal styling */\n/*****************************/\n\ndiv.js-div--modal.loadFeederModal div.div--modalElementContainer div.js-div--modal {\n    flex: 1;\n}\ndiv.js-div--modal.loadFeederModal table.table--modal td div, div.js-div--modal.loadFeederModal table.table--modal th div {\n    display: block;\n    min-height: initial;\n}\ndiv.js-div--modal.loadFeederModal div.hoverable {\n    padding: var(--regularFontPadding);\n    word-break: break-word;\n}\ndiv.js-div--modal.loadFeederModal div.hoverable > div:first-child {\n    font-weight: bold;\n}\n\n/*****************************/\n/* Color modal styling */\n/*****************************/\n\ndiv.js-div--modal.colorModal table.table--modal button {\n    min-width: 145.2px;\n}\n</style>\n<style>\n/**********************************************/\n/* Default styling. BE CAREFUL WHEN CHANGING! */\n/**********************************************/\ndiv.div--topTab {\n    height: 100%;\n}\ndiv.div--topTabTabContainer {\n    /*background: hsla(360, 0%, 87%, 1);*/\n    /*box-shadow: inset -1px 0px darkgray;*/\n    /*display: flex;*/\n    /*height: 2rem;*/\n    text-align: center;\n}\ndiv.div--topTabTabContainer > div {\n    /*cursor: pointer;*/\n    display: none;\n    z-index: 0;\n}\ndiv.div--topTabTabContainer > div.selected {\n    display: block;\n    padding: 14px;\n    z-index: 1;\n}\ndiv.div--topTabTabContainer > div.selected > button {\n    background-color: transparent;\n    border: 0;\n    color: #757575;\n    cursor: pointer;\n    height: 24px;\n    position: absolute;\n    right: 0;\n    top: 0;\n    width: 24px;\n}\ndiv.div--topTabTabContainer > div.selected > span {\n    font-weight: bold;\n}\ndiv.div--topTabTabContainer > div.selected > span::before {\n    background: #FFFFFF; /* This is the color of the selected tab */\n}\ndiv.div--topTabTabContainer > div > span {\n    font-size: 26px;\n    /*margin: 0 10px 0 10px;*/\n    /*padding: 0 0 2px 0;*/\n    /*position: relative;*/\n}\ndiv.div--topTabTabContainer > div > span::before {\n    /* This is the color of unselected tabs */\n    /*background: hsla(360, 0%, 87%, 1);*/\n    /*border: 1px solid black;*/\n    /*border-bottom: none;*/\n\t/*border-radius: 10px 10px 0 0;*/\n    /*bottom: -4px;*/\n    /*content: '';*/\n    /*left: -10px;*/\n    /*position: absolute;*/\n    /*right: -10px;*/\n    /*top: -2px;*/\n    /* I don't want curves anymore */\n    /*transform: perspective(10px) rotateX(2deg);*/\n    /*transform-origin: bottom;*/\n    z-index: -1;\n}\ndiv.div--topTabContentContainer {\n    background: #FFFFFF; /* This is the background of the tab content */\n    box-shadow: inset -1px 0px darkgray;\n    height: 100%;\n    position: relative;\n    /*box-shadow: inset 0 1px 0 0 black;*/\n    /*box-shadow: 0 10px 10px -5px black;*/\n    /* Match Leaflet box shadow */\n    /*box-shadow: 0 3px 14px rgba(0,0,0,0.4);*/\n}\ndiv.div--topTabContentContainer > div {\n    display: none;\n}\ndiv.div--topTabContentContainer > div.selected {\n   display: block;\n   height: 100%;\n}\n\n/* Are there topTab styling variations? Not yet */\n</style>\n<style>\n.leaflet-cluster-anim .leaflet-marker-icon, .leaflet-cluster-anim .leaflet-marker-shadow {\n\t-webkit-transition: -webkit-transform 0.3s ease-out, opacity 0.3s ease-in;\n\t-moz-transition: -moz-transform 0.3s ease-out, opacity 0.3s ease-in;\n\t-o-transition: -o-transform 0.3s ease-out, opacity 0.3s ease-in;\n\ttransition: transform 0.3s ease-out, opacity 0.3s ease-in;\n}\n\n.leaflet-cluster-spider-leg {\n\t/* stroke-dashoffset (duration and function) should match with leaflet-marker-icon transform in order to track it exactly */\n\t-webkit-transition: -webkit-stroke-dashoffset 0.3s ease-out, -webkit-stroke-opacity 0.3s ease-in;\n\t-moz-transition: -moz-stroke-dashoffset 0.3s ease-out, -moz-stroke-opacity 0.3s ease-in;\n\t-o-transition: -o-stroke-dashoffset 0.3s ease-out, -o-stroke-opacity 0.3s ease-in;\n\ttransition: stroke-dashoffset 0.3s ease-out, stroke-opacity 0.3s ease-in;\n}\n\n</style>\n<style>\n.marker-cluster-small {\n\tbackground-color: rgba(181, 226, 140, 0.6);\n\t}\n.marker-cluster-small div {\n\tbackground-color: rgba(110, 204, 57, 0.6);\n\t}\n\n.marker-cluster-medium {\n\tbackground-color: rgba(241, 211, 87, 0.6);\n\t}\n.marker-cluster-medium div {\n\tbackground-color: rgba(240, 194, 12, 0.6);\n\t}\n\n.marker-cluster-large {\n\tbackground-color: rgba(253, 156, 115, 0.6);\n\t}\n.marker-cluster-large div {\n\tbackground-color: rgba(241, 128, 23, 0.6);\n\t}\n\n\t/* IE 6-8 fallback colors */\n.leaflet-oldie .marker-cluster-small {\n\tbackground-color: rgb(181, 226, 140);\n\t}\n.leaflet-oldie .marker-cluster-small div {\n\tbackground-color: rgb(110, 204, 57);\n\t}\n\n.leaflet-oldie .marker-cluster-medium {\n\tbackground-color: rgb(241, 211, 87);\n\t}\n.leaflet-oldie .marker-cluster-medium div {\n\tbackground-color: rgb(240, 194, 12);\n\t}\n\n.leaflet-oldie .marker-cluster-large {\n\tbackground-color: rgb(253, 156, 115);\n\t}\n.leaflet-oldie .marker-cluster-large div {\n\tbackground-color: rgb(241, 128, 23);\n}\n\n.marker-cluster {\n\tbackground-clip: padding-box;\n\tborder-radius: 20px;\n\t}\n.marker-cluster div {\n\twidth: 30px;\n\theight: 30px;\n\tmargin-left: 5px;\n\tmargin-top: 5px;\n\n\ttext-align: center;\n\tborder-radius: 15px;\n\tfont: 12px \"Helvetica Neue\", Arial, Helvetica, sans-serif;\n\t}\n.marker-cluster span {\n\tline-height: 30px;\n\t}\n</style>\n\n    <meta charset=\"utf-8\">\n    <title>OMF GeoJSON Editor</title>\n  </head>\n  <body>\n    <header>\n        <div id=\"menuInsert\"></div>\n    </header>\n    <main></main>\n    <script>\n        'use strict';\n        const gFeatureCollection = {\"type\": \"FeatureCollection\", \"features\": [{\"type\": \"Feature\", \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}, \"properties\": {\"treeKey\": \"omd\", \"links\": [], \"hiddenLinks\": [], \"nodes\": [], \"hiddenNodes\": [], \"layoutVars\": {\"theta\": \"0.8\", \"gravity\": \"0.01\", \"friction\": \"0.9\", \"linkStrength\": \"5\", \"linkDistance\": \"5\", \"charge\": \"-5\"}, \"attachments\": {\"coloringFiles\": {\"color_by.csv\": {\"csv\": \"bus,max_kw\\n684,1\\n692,1\\n645,1\\n611,1\\n646,1\\n634,1\\n652,1\\n675,1\\n670,1\\n\", \"colorOnLoadColumnIndex\": \"1\"}}}, \"syntax\": \"DSS\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"1\", \"treeProps\": {\"object\": \"!CMD\", \"name\": \"clear\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"2\", \"treeProps\": {\"object\": \"!CMD\", \"name\": \"set\", \"defaultbasefrequency\": \"60\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"3\", \"treeProps\": {\"object\": \"circuit\", \"name\": \"lehigh\", \"parent\": \"sourcebus\", \"basekv\": \"115\", \"pu\": \"1.0001\", \"phases\": \"3\", \"angle\": \"30\", \"mvasc3\": \"20000\", \"mvasc1\": \"21000\"}}, \"geometry\": {\"coordinates\": [-84.0713030607242, 30.2849503655725], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"4\", \"treeProps\": {\"object\": \"vsource\", \"name\": \"source\", \"parent\": \"sourcebus\", \"!CONNCODE\": \".1.2.3\", \"!CMD\": \"edit\", \"basekv\": \"115\", \"pu\": \"1.00\", \"r1\": \"0\", \"x1\": \"0.0001\", \"r0\": \"0\", \"x0\": \"0.0001\"}}, \"geometry\": {\"coordinates\": [-84.07129303116763, 30.28500946926673], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"5\", \"treeProps\": {\"object\": \"vsource\", \"name\": \"secondsource\", \"parent\": \"680\", \"basekv\": \"4.16\", \"pu\": \"1.00\", \"r1\": \"0\", \"x1\": \"0.0001\", \"r0\": \"0\", \"x0\": \"0.0001\", \"!CONNCODE\": \".1.2.3\"}}, \"geometry\": {\"coordinates\": [-84.0752956502259, 30.285045450988626], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"6\", \"treeProps\": {\"object\": \"transformer\", \"name\": \"sub\", \"from\": \"sourcebus\", \"to\": \"650\", \"phases\": \"3\", \"windings\": \"2\", \"xhl\": \"0.008\", \"conns\": \"[delta,wye]\", \"kvs\": \"[115,4.16]\", \"kvas\": \"[5000,5000]\", \"%rs\": \"[0.0005,0.0005]\", \"!FROCODE\": \".1.2.3\", \"!TOCODE\": \".1.2.3\"}}, \"geometry\": {\"coordinates\": [[-84.071493, 30.285013], [-84.071993, 30.285013]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"7\", \"treeProps\": {\"object\": \"transformer\", \"name\": \"reg1\", \"from\": \"650\", \"to\": \"rg60\", \"phases\": \"1\", \"bank\": \"reg1\", \"xhl\": \"0.01\", \"kvas\": \"[1666,1666]\", \"kvs\": \"[2.4,2.4]\", \"%loadloss\": \"0.01\", \"!FROCODE\": \".1\", \"!TOCODE\": \".1\"}}, \"geometry\": {\"coordinates\": [[-84.071993, 30.285013], [-84.072493, 30.285013]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"8\", \"treeProps\": {\"object\": \"regcontrol\", \"name\": \"reg1\", \"transformer\": \"reg1\", \"winding\": \"2\", \"vreg\": \"121\", \"band\": \"2\", \"ptratio\": \"20\", \"ctprim\": \"700\", \"r\": \"3\", \"x\": \"9\", \"geo_py_validation_status\": \"isolated\"}}, \"geometry\": {\"coordinates\": [-84.06511118260708, 30.290605636585973], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"9\", \"treeProps\": {\"object\": \"transformer\", \"name\": \"reg2\", \"from\": \"650\", \"to\": \"rg60\", \"phases\": \"1\", \"bank\": \"reg1\", \"xhl\": \"0.01\", \"kvas\": \"[1666,1666]\", \"kvs\": \"[2.4,2.4]\", \"%loadloss\": \"0.01\", \"!FROCODE\": \".2\", \"!TOCODE\": \".2\"}}, \"geometry\": {\"coordinates\": [[-84.071993, 30.285013], [-84.072493, 30.285013]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"10\", \"treeProps\": {\"object\": \"regcontrol\", \"name\": \"reg2\", \"transformer\": \"reg2\", \"winding\": \"2\", \"vreg\": \"121\", \"band\": \"2\", \"ptratio\": \"20\", \"ctprim\": \"700\", \"r\": \"3\", \"x\": \"9\", \"geo_py_validation_status\": \"isolated\"}}, \"geometry\": {\"coordinates\": [-84.06441361812965, 30.289397419451063], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"11\", \"treeProps\": {\"object\": \"transformer\", \"name\": \"reg3\", \"from\": \"650\", \"to\": \"rg60\", \"phases\": \"1\", \"bank\": \"reg1\", \"xhl\": \"0.01\", \"kvas\": \"[1666,1666]\", \"kvs\": \"[2.4,2.4]\", \"%loadloss\": \"0.01\", \"!FROCODE\": \".3\", \"!TOCODE\": \".3\"}}, \"geometry\": {\"coordinates\": [[-84.071993, 30.285013], [-84.072493, 30.285013]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"12\", \"treeProps\": {\"object\": \"regcontrol\", \"name\": \"reg3\", \"transformer\": \"reg3\", \"winding\": \"2\", \"vreg\": \"121\", \"band\": \"2\", \"ptratio\": \"20\", \"ctprim\": \"700\", \"r\": \"3\", \"x\": \"9\", \"geo_py_validation_status\": \"isolated\"}}, \"geometry\": {\"coordinates\": [-84.06389099328332, 30.28810387737373], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"13\", \"treeProps\": {\"object\": \"transformer\", \"name\": \"xfm1\", \"from\": \"633\", \"to\": \"634\", \"phases\": \"3\", \"windings\": \"2\", \"xhl\": \"2\", \"conns\": \"[wye,wye]\", \"kvs\": \"[4.16,0.480]\", \"kvas\": \"[500,500]\", \"%rs\": \"[0.55,0.55]\", \"xht\": \"1\", \"xlt\": \"1\", \"!FROCODE\": \".1.2.3\", \"!TOCODE\": \".1.2.3\"}}, \"geometry\": {\"coordinates\": [[-84.072993, 30.286513], [-84.072993, 30.287013]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"14\", \"treeProps\": {\"object\": \"linecode\", \"name\": \"mtx601\", \"nphases\": \"3\", \"basefreq\": \"60\", \"rmatrix\": \"[0.3465|0.1560,0.3375|0.1580,0.1535,0.3414]\", \"xmatrix\": \"[1.0179|0.5017,1.0478|0.4236,0.3849,1.0348]\", \"units\": \"mi\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"15\", \"treeProps\": {\"object\": \"linecode\", \"name\": \"mtx602\", \"nphases\": \"3\", \"basefreq\": \"60\", \"rmatrix\": \"[0.7526|0.1580,0.7475|0.1560,0.1535,0.7436]\", \"xmatrix\": \"[1.1814|0.4236,1.1983|0.5017,0.3849,1.2112]\", \"units\": \"mi\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"16\", \"treeProps\": {\"object\": \"linecode\", \"name\": \"mtx603\", \"nphases\": \"2\", \"basefreq\": \"60\", \"rmatrix\": \"[1.3238|0.2066,1.3294]\", \"xmatrix\": \"[1.3569|0.4591,1.3471]\", \"units\": \"mi\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"17\", \"treeProps\": {\"object\": \"linecode\", \"name\": \"mtx604\", \"nphases\": \"2\", \"basefreq\": \"60\", \"rmatrix\": \"[1.3238|0.2066,1.3294]\", \"xmatrix\": \"[1.3569|0.4591,1.3471]\", \"units\": \"mi\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"18\", \"treeProps\": {\"object\": \"linecode\", \"name\": \"mtx605\", \"nphases\": \"1\", \"basefreq\": \"60\", \"rmatrix\": \"[1.3292]\", \"xmatrix\": \"[1.3475]\", \"units\": \"mi\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"19\", \"treeProps\": {\"object\": \"linecode\", \"name\": \"mtx606\", \"nphases\": \"3\", \"units\": \"mi\", \"rmatrix\": \"[0.791721|0.318476,0.781649|0.28345,0.318476,0.791721]\", \"xmatrix\": \"[0.438352|0.0276838,0.396697|-0.0184204,0.0276838,0.438352]\", \"cmatrix\": \"[383.948|0,383.948|0,0,383.948]\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"20\", \"treeProps\": {\"object\": \"linecode\", \"name\": \"mtx607\", \"nphases\": \"1\", \"basefreq\": \"60\", \"rmatrix\": \"[1.3425]\", \"xmatrix\": \"[0.5124]\", \"cmatrix\": \"[236]\", \"units\": \"mi\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"21\", \"treeProps\": {\"object\": \"load\", \"name\": \"684_command_center\", \"parent\": \"684\", \"phases\": \"1\", \"conn\": \"wye\", \"model\": \"1\", \"kv\": \"2.4\", \"kw\": \"1155\", \"kvar\": \"660\", \"!CONNCODE\": \".3\"}}, \"geometry\": {\"coordinates\": [-84.07460629504702, 30.283848184247347], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"22\", \"treeProps\": {\"object\": \"load\", \"name\": \"634a_data_center\", \"parent\": \"634\", \"phases\": \"1\", \"conn\": \"wye\", \"model\": \"1\", \"kv\": \"0.277\", \"kw\": \"160\", \"kvar\": \"110\", \"!CONNCODE\": \".1\"}}, \"geometry\": {\"coordinates\": [-84.0731927978039, 30.28700400902908], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"23\", \"treeProps\": {\"object\": \"load\", \"name\": \"634b_radar\", \"parent\": \"634\", \"phases\": \"1\", \"conn\": \"wye\", \"model\": \"1\", \"kv\": \"0.277\", \"kw\": \"120\", \"kvar\": \"90\", \"!CONNCODE\": \".1\"}}, \"geometry\": {\"coordinates\": [-84.07318959098045, 30.286976230632213], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"24\", \"treeProps\": {\"object\": \"load\", \"name\": \"634c_atc_tower\", \"parent\": \"634\", \"phases\": \"1\", \"conn\": \"wye\", \"model\": \"1\", \"kv\": \"0.277\", \"kw\": \"120\", \"kvar\": \"90\", \"!CONNCODE\": \".1\"}}, \"geometry\": {\"coordinates\": [-84.07279666111775, 30.286974907437532], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"25\", \"treeProps\": {\"object\": \"load\", \"name\": \"645_hangar\", \"parent\": \"645\", \"phases\": \"1\", \"conn\": \"wye\", \"model\": \"1\", \"kv\": \"2.4\", \"kw\": \"170\", \"kvar\": \"125\", \"!CONNCODE\": \".2\"}}, \"geometry\": {\"coordinates\": [-84.0730376796201, 30.28420794545788], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"26\", \"treeProps\": {\"object\": \"load\", \"name\": \"646_office\", \"parent\": \"646\", \"phases\": \"1\", \"conn\": \"wye\", \"model\": \"2\", \"kv\": \"2.4\", \"kw\": \"230\", \"kvar\": \"132\", \"!CONNCODE\": \".2\"}}, \"geometry\": {\"coordinates\": [-84.07317286934911, 30.283100447225518], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"27\", \"treeProps\": {\"object\": \"load\", \"name\": \"692_warehouse2\", \"parent\": \"692\", \"phases\": \"3\", \"conn\": \"delta\", \"model\": \"5\", \"kv\": \"2.4\", \"kw\": \"170\", \"kvar\": \"151\", \"!CONNCODE\": \".1.2.3\"}}, \"geometry\": {\"coordinates\": [-84.0745070809809, 30.28571250369916], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"28\", \"treeProps\": {\"object\": \"load\", \"name\": \"675a_hospital\", \"parent\": \"675\", \"phases\": \"3\", \"conn\": \"wye\", \"model\": \"1\", \"kv\": \"2.4\", \"kw\": \"485\", \"kvar\": \"190\", \"!CONNCODE\": \".1.2.3\"}}, \"geometry\": {\"coordinates\": [-84.07432834863154, 30.286899466186263], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"29\", \"treeProps\": {\"object\": \"load\", \"name\": \"675b_residential1\", \"parent\": \"675\", \"phases\": \"3\", \"conn\": \"wye\", \"model\": \"1\", \"kv\": \"2.4\", \"kw\": \"68\", \"kvar\": \"60\", \"!CONNCODE\": \".1.2.3\"}}, \"geometry\": {\"coordinates\": [-84.07449025473944, 30.287212981157975], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"30\", \"treeProps\": {\"object\": \"load\", \"name\": \"675c_residential1\", \"parent\": \"675\", \"phases\": \"3\", \"conn\": \"wye\", \"model\": \"1\", \"kv\": \"2.4\", \"kw\": \"290\", \"kvar\": \"212\", \"!CONNCODE\": \".1.2.3\"}}, \"geometry\": {\"coordinates\": [-84.07467020718089, 30.286920276674763], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"31\", \"treeProps\": {\"object\": \"load\", \"name\": \"611_runway\", \"parent\": \"611\", \"phases\": \"1\", \"conn\": \"wye\", \"model\": \"5\", \"kv\": \"2.4\", \"kw\": \"170\", \"kvar\": \"80\", \"!CONNCODE\": \".3\"}}, \"geometry\": {\"coordinates\": [-84.0745468356986, 30.282820381938652], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"32\", \"treeProps\": {\"object\": \"load\", \"name\": \"652_residential\", \"parent\": \"652\", \"phases\": \"1\", \"conn\": \"wye\", \"model\": \"2\", \"kv\": \"2.4\", \"kw\": \"128\", \"kvar\": \"86\", \"!CONNCODE\": \".3\"}}, \"geometry\": {\"coordinates\": [-84.07551008599637, 30.28421226883532], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"33\", \"treeProps\": {\"object\": \"load\", \"name\": \"670a_residential2\", \"parent\": \"670\", \"phases\": \"1\", \"conn\": \"wye\", \"model\": \"1\", \"kv\": \"2.4\", \"kw\": \"17\", \"kvar\": \"10\", \"!CONNCODE\": \".1\"}}, \"geometry\": {\"coordinates\": [-84.07332506787898, 30.284904377706095], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"34\", \"treeProps\": {\"object\": \"load\", \"name\": \"670b_residential2\", \"parent\": \"670\", \"phases\": \"1\", \"conn\": \"wye\", \"model\": \"1\", \"kv\": \"2.4\", \"kw\": \"66\", \"kvar\": \"38\", \"!CONNCODE\": \".2\"}}, \"geometry\": {\"coordinates\": [-84.07341167983233, 30.285195721181946], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"35\", \"treeProps\": {\"object\": \"load\", \"name\": \"670c_residential2\", \"parent\": \"670\", \"phases\": \"1\", \"conn\": \"wye\", \"model\": \"1\", \"kv\": \"2.4\", \"kw\": \"117\", \"kvar\": \"68\", \"!CONNCODE\": \".3\"}}, \"geometry\": {\"coordinates\": [-84.07338780575581, 30.284842899526772], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"36\", \"treeProps\": {\"object\": \"generator\", \"name\": \"solar_634_existing\", \"parent\": \"634\", \"phases\": \"1\", \"kv\": \"0.277\", \"kw\": \"440\", \"pf\": \"1\", \"!CONNCODE\": \".1\"}}, \"geometry\": {\"coordinates\": [-84.07317830895862, 30.287088236891574], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"37\", \"treeProps\": {\"object\": \"storage\", \"name\": \"battery_634_existing\", \"parent\": \"634\", \"phases\": \"1\", \"kv\": \"0.277\", \"kwrated\": \"81\", \"kwhstored\": \"307\", \"kwhrated\": \"307\", \"dispmode\": \"follow\", \"%charge\": \"100\", \"%discharge\": \"100\", \"%effcharge\": \"96\", \"%effdischarge\": \"96\", \"%idlingkw\": \"1\", \"!CONNCODE\": \".1\"}}, \"geometry\": {\"coordinates\": [-84.07286044731129, 30.28716276576617], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"38\", \"treeProps\": {\"object\": \"generator\", \"name\": \"solar_675_existing\", \"parent\": \"675\", \"phases\": \"3\", \"kv\": \"2.4\", \"kw\": \"800\", \"pf\": \"1\", \"!CONNCODE\": \".1.2.3\"}}, \"geometry\": {\"coordinates\": [-84.07458963568335, 30.28683789561769], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"39\", \"treeProps\": {\"object\": \"generator\", \"name\": \"fossil_684_existing\", \"parent\": \"684\", \"phases\": \"1\", \"kw\": \"81\", \"pf\": \"1\", \"kv\": \"2.4\", \"xdp\": \"0.27\", \"xdpp\": \"0.2\", \"h\": \"2\", \"!CONNCODE\": \".3\"}}, \"geometry\": {\"coordinates\": [-84.07457469038198, 30.283830444031892], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"40\", \"treeProps\": {\"object\": \"storage\", \"name\": \"battery_684_existing\", \"parent\": \"684\", \"phases\": \"1\", \"kv\": \"2.4\", \"kwrated\": \"20\", \"kwhstored\": \"100\", \"kwhrated\": \"100\", \"dispmode\": \"follow\", \"%charge\": \"100\", \"%discharge\": \"100\", \"%effcharge\": \"96\", \"%effdischarge\": \"96\", \"%idlingkw\": \"1\", \"!CONNCODE\": \".3\"}}, \"geometry\": {\"coordinates\": [-84.07447330715043, 30.2838139718822], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"41\", \"treeProps\": {\"object\": \"generator\", \"name\": \"fossil_646_existing\", \"parent\": \"646\", \"phases\": \"1\", \"kw\": \"145\", \"pf\": \"1\", \"kv\": \"2.4\", \"xdp\": \"0.27\", \"xdpp\": \"0.2\", \"h\": \"2\", \"!CONNCODE\": \".2\"}}, \"geometry\": {\"coordinates\": [-84.07301690722625, 30.28281443402977], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"42\", \"treeProps\": {\"object\": \"capacitor\", \"name\": \"cap1\", \"parent\": \"675\", \"phases\": \"3\", \"kvar\": \"600\", \"kv\": \"2.4\"}}, \"geometry\": {\"coordinates\": [-84.07434191658861, 30.286881951143464], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"43\", \"treeProps\": {\"object\": \"capacitor\", \"name\": \"cap2\", \"parent\": \"611\", \"phases\": \"1\", \"kvar\": \"100\", \"kv\": \"2.4\", \"!CONNCODE\": \".3\"}}, \"geometry\": {\"coordinates\": [-84.07454032273189, 30.282818679236705], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"44\", \"treeProps\": {\"object\": \"line\", \"name\": \"670671\", \"from\": \"670\", \"to\": \"671\", \"!FROCODE\": \".1.2.3\", \"!TOCODE\": \".1.2.3\", \"phases\": \"3\", \"linecode\": \"mtx601\", \"length\": \"1333\", \"units\": \"ft\"}}, \"geometry\": {\"coordinates\": [[-84.073493, 30.285013], [-84.074493, 30.285013]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"45\", \"treeProps\": {\"object\": \"line\", \"name\": \"645646\", \"from\": \"645\", \"to\": \"646\", \"!FROCODE\": \".2\", \"!TOCODE\": \".2\", \"phases\": \"1\", \"linecode\": \"mtx603\", \"length\": \"300\", \"units\": \"ft\"}}, \"geometry\": {\"coordinates\": [[-84.072993, 30.284013], [-84.072993, 30.283013]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"46\", \"treeProps\": {\"object\": \"line\", \"name\": \"692675\", \"from\": \"692\", \"to\": \"675\", \"!FROCODE\": \".1.2.3\", \"!TOCODE\": \".1.2.3\", \"phases\": \"3\", \"linecode\": \"mtx606\", \"length\": \"500\", \"units\": \"ft\"}}, \"geometry\": {\"coordinates\": [[-84.074493, 30.285513], [-84.074493, 30.287013]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"47\", \"treeProps\": {\"object\": \"line\", \"name\": \"684611\", \"from\": \"684\", \"to\": \"611\", \"!FROCODE\": \".3\", \"!TOCODE\": \".3\", \"phases\": \"1\", \"linecode\": \"mtx605\", \"length\": \"300\", \"units\": \"ft\"}}, \"geometry\": {\"coordinates\": [[-84.074493, 30.284013], [-84.074493, 30.283013]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"48\", \"treeProps\": {\"object\": \"line\", \"name\": \"684652\", \"from\": \"684\", \"to\": \"652\", \"!FROCODE\": \".3\", \"!TOCODE\": \".3\", \"phases\": \"1\", \"linecode\": \"mtx607\", \"length\": \"800\", \"units\": \"ft\"}}, \"geometry\": {\"coordinates\": [[-84.074493, 30.284013], [-84.075493, 30.284013]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"49\", \"treeProps\": {\"object\": \"line\", \"name\": \"671692\", \"from\": \"671\", \"to\": \"692\", \"!FROCODE\": \".1.2.3\", \"!TOCODE\": \".1.2.3\", \"phases\": \"3\", \"switch\": \"y\", \"r1\": \"1e-4\", \"r0\": \"1e-4\", \"x1\": \"0.000\", \"x0\": \"0.000\", \"c1\": \"0.000\", \"c0\": \"0.000\"}}, \"geometry\": {\"coordinates\": [[-84.074493, 30.285013], [-84.074493, 30.285513]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"50\", \"treeProps\": {\"object\": \"line\", \"name\": \"632633\", \"from\": \"632\", \"to\": \"633\", \"!FROCODE\": \".1\", \"!TOCODE\": \".1\", \"phases\": \"1\", \"switch\": \"y\", \"linecode\": \"mtx602\", \"length\": \"500\", \"units\": \"ft\"}}, \"geometry\": {\"coordinates\": [[-84.072993, 30.285013], [-84.072993, 30.286513]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"51\", \"treeProps\": {\"object\": \"line\", \"name\": \"671684\", \"from\": \"671\", \"to\": \"684\", \"!FROCODE\": \".3\", \"!TOCODE\": \".3\", \"phases\": \"1\", \"switch\": \"y\", \"linecode\": \"mtx604\", \"length\": \"300\", \"units\": \"ft\"}}, \"geometry\": {\"coordinates\": [[-84.074493, 30.285013], [-84.074493, 30.284013]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"52\", \"treeProps\": {\"object\": \"line\", \"name\": \"632645\", \"from\": \"632\", \"to\": \"645\", \"!FROCODE\": \".2\", \"!TOCODE\": \".2\", \"phases\": \"1\", \"switch\": \"y\", \"linecode\": \"mtx603\", \"length\": \"500\", \"units\": \"ft\"}}, \"geometry\": {\"coordinates\": [[-84.072993, 30.285013], [-84.072993, 30.284013]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"53\", \"treeProps\": {\"object\": \"line\", \"name\": \"632670\", \"from\": \"632\", \"to\": \"670\", \"!FROCODE\": \".1.2.3\", \"!TOCODE\": \".1.2.3\", \"phases\": \"3\", \"switch\": \"y\", \"linecode\": \"mtx601\", \"length\": \"667\", \"units\": \"ft\"}}, \"geometry\": {\"coordinates\": [[-84.072993, 30.285013], [-84.073493, 30.285013]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"54\", \"treeProps\": {\"object\": \"line\", \"name\": \"650632\", \"from\": \"rg60\", \"to\": \"632\", \"!FROCODE\": \".1.2.3\", \"!TOCODE\": \".1.2.3\", \"phases\": \"3\", \"switch\": \"y\", \"linecode\": \"mtx601\", \"length\": \"2000\", \"units\": \"ft\"}}, \"geometry\": {\"coordinates\": [[-84.072493, 30.285013], [-84.072993, 30.285013]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"55\", \"treeProps\": {\"object\": \"line\", \"name\": \"671680\", \"from\": \"671\", \"to\": \"680\", \"!FROCODE\": \".1.2.3\", \"!TOCODE\": \".1.2.3\", \"phases\": \"3\", \"switch\": \"y\", \"linecode\": \"mtx601\", \"length\": \"1000\", \"units\": \"ft\"}}, \"geometry\": {\"coordinates\": [[-84.074493, 30.285013], [-84.075493, 30.285013]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"57\", \"treeProps\": {\"object\": \"!CMD\", \"name\": \"makebuslist\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"58\", \"treeProps\": {\"object\": \"bus\", \"name\": \"sourcebus\"}}, \"geometry\": {\"coordinates\": [-84.071493, 30.285013], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"59\", \"treeProps\": {\"object\": \"bus\", \"name\": \"650\"}}, \"geometry\": {\"coordinates\": [-84.071993, 30.285013], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"60\", \"treeProps\": {\"object\": \"bus\", \"name\": \"rg60\"}}, \"geometry\": {\"coordinates\": [-84.072493, 30.285013], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"61\", \"treeProps\": {\"object\": \"bus\", \"name\": \"646\"}}, \"geometry\": {\"coordinates\": [-84.072993, 30.283013], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"62\", \"treeProps\": {\"object\": \"bus\", \"name\": \"645\"}}, \"geometry\": {\"coordinates\": [-84.072993, 30.284013], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"63\", \"treeProps\": {\"object\": \"bus\", \"name\": \"632\"}}, \"geometry\": {\"coordinates\": [-84.072993, 30.285013], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"64\", \"treeProps\": {\"object\": \"bus\", \"name\": \"633\"}}, \"geometry\": {\"coordinates\": [-84.072993, 30.286513], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"65\", \"treeProps\": {\"object\": \"bus\", \"name\": \"634\"}}, \"geometry\": {\"coordinates\": [-84.072993, 30.287013], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"66\", \"treeProps\": {\"object\": \"bus\", \"name\": \"670\"}}, \"geometry\": {\"coordinates\": [-84.073493, 30.285013], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"67\", \"treeProps\": {\"object\": \"bus\", \"name\": \"611\"}}, \"geometry\": {\"coordinates\": [-84.074493, 30.283013], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"68\", \"treeProps\": {\"object\": \"bus\", \"name\": \"684\"}}, \"geometry\": {\"coordinates\": [-84.074493, 30.284013], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"69\", \"treeProps\": {\"object\": \"bus\", \"name\": \"671\"}}, \"geometry\": {\"coordinates\": [-84.074493, 30.285013], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"70\", \"treeProps\": {\"object\": \"bus\", \"name\": \"692\"}}, \"geometry\": {\"coordinates\": [-84.074493, 30.285513], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"71\", \"treeProps\": {\"object\": \"bus\", \"name\": \"675\"}}, \"geometry\": {\"coordinates\": [-84.074493, 30.287013], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"72\", \"treeProps\": {\"object\": \"bus\", \"name\": \"652\"}}, \"geometry\": {\"coordinates\": [-84.075493, 30.284013], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"73\", \"treeProps\": {\"object\": \"bus\", \"name\": \"680\"}}, \"geometry\": {\"coordinates\": [-84.075493, 30.285013], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"74\", \"treeProps\": {\"object\": \"!CMD\", \"name\": \"set\", \"voltagebases\": \"[115,4.16,0.48]\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"75\", \"treeProps\": {\"object\": \"!CMD\", \"name\": \"calcvoltagebases\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}]};\n        const gComponentsCollection = {\"type\": \"FeatureCollection\", \"features\": [{\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:1\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3742\", \"primary_voltage\": \"12500.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.00400 Ohm\", \"shunt_impedance\": \"339.610+335.709j\", \"reactance\": \"0.02000 Ohm\", \"powerA_rating\": \"25.0 kVA\", \"power_rating\": \"25.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:2\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_350CURR15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:3\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_37_5_23_9_13_8_kV_YY1_120\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120.0 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"impedance\": \"0.018+0.018j\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:4\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0395 ft\", \"conductor_resistance\": \"0.0141 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.175 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"700 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.165 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALTRXLPELCJ35\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:5\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3083\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00600 Ohm\", \"shunt_impedance\": \"339.610+287.181j\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"25.0 kVA\", \"power_rating\": \"25.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:6\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"50.0 kVA\", \"name\": \"R1_12_47_1_3129\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00300 Ohm\", \"shunt_impedance\": \"391.760+455.220j\", \"reactance\": \"0.00200 Ohm\", \"power_rating\": \"50.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:7\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"fuse\", \"name\": \"NULL\", \"phases\": \"ABCN\", \"from\": \"NULL\", \"to\": \"NULL\", \"status\": \"CLOSED\", \"current_limit\": \"50000\"}}, \"geometry\": {\"coordinates\": [[0, 0], [0, 0]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:8\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"25.0 kVA\", \"name\": \"R1_12_47_2_1454\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00600 Ohm\", \"shunt_impedance\": \"339.610+299.781j\", \"reactance\": \"0.00400 Ohm\", \"power_rating\": \"25.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:9\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0105 ft\", \"conductor_resistance\": \"0.1189 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.573 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.563 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0ALEPRCNJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:10\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1000CUTRXLPELCJ25\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:11\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_10000\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"100 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:12\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_75000_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"750 kVA\", \"power_rating\": \"750 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:13\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"1.485077Ohm/km\", \"name\": \"oh_6_WPCU\", \"geometric_mean_radius\": \"0.160274cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:14\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_650CUPI\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:15\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_167_23_9_13_8_kV_YY1\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120.0 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"167 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:16\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"2.430120Ohm/km\", \"name\": \"oh_6_WPAL\", \"geometric_mean_radius\": \"0.120142cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:17\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3095\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"308.320+393.061j\", \"reactance\": \"0.01 Ohm\", \"powerA_rating\": \"10.0 kVA\", \"power_rating\": \"10.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:18\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1442\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.01000 Ohm\", \"shunt_impedance\": \"318.750+375.529j\", \"reactance\": \"0.00667 Ohm\", \"powerB_rating\": \"15.0 kVA\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:19\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALHMWPECN15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:20\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_45_23_9_13_8_kV_YYT\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.018+0.018j\", \"power_rating\": \"45 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:21\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.295773Ohm/km\", \"name\": \"oh_4/0_AAC\", \"geometric_mean_radius\": \"0.314757cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:22\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_11250_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"112.5 kVA\", \"power_rating\": \"112.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:23\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALTRXLPECNJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:24\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0105 ft\", \"conductor_resistance\": \"0.1189 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.573 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.563 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0ALXLPEDWJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:25\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"switch\", \"name\": \"NULL\", \"phases\": \"ABCN\", \"from\": \"NULL\", \"to\": \"NULL\", \"status\": \"CLOSED\"}}, \"geometry\": {\"coordinates\": [[0, 0], [0, 0]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:26\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3113\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00300 Ohm\", \"shunt_impedance\": \"391.760+347.827j\", \"reactance\": \"0.00200 Ohm\", \"powerB_rating\": \"50.0 kVA\", \"power_rating\": \"50.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:27\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_500_23_9_13_8_kV_YYT_0240\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.0168+0.0504j\", \"power_rating\": \"500 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:28\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1439\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00600 Ohm\", \"shunt_impedance\": \"339.610+372.974j\", \"reactance\": \"0.00400 Ohm\", \"powerB_rating\": \"25.0 kVA\", \"power_rating\": \"25.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:29\", \"componentType\": \"gridlabd\", \"treeProps\": {\"glass_type\": \"1\", \"auxiliary_system_type\": \"ELECTRIC\", \"cooling_COP\": \"3.0\", \"hvac_breaker_rating\": \"1000\", \"cooling_system_type\": \"ELECTRIC\", \"total_thermal_mass_per_floor_area\": \"2.5\", \"auxiliary_strategy\": \"DEADBAND\", \"air_temperature\": \"68\", \"heating_COP\": \"2.0\", \"motor_efficiency\": \"AVERAGE\", \"heating_system_type\": \"HEAT_PUMP\", \"Rwall\": \"11.7\", \"glazing_treatment\": \"2\", \"Rdoors\": \"2.7\", \"glazing_layers\": \"2\", \"window_frame\": \"2\", \"parent\": \"null\", \"floor_area\": \"820\", \"object\": \"house\", \"number_of_stories\": \"1\", \"mass_temperature\": \"68\", \"name\": \"R1_Apartment_1960-1989\", \"Rfloor\": \"12.7\", \"airchange_per_hour\": \"0.25\", \"Rroof\": \"20.3\", \"ceiling_height\": \"8.0\", \"breaker_amps\": \"1000\", \"over_sizing_factor\": \"0.1\", \"motor_model\": \"BASIC\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:30\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750ALXLPE35\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:31\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_225_23_9_13_8_kV_YYT\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"225 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:32\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_10000_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"100 kVA\", \"power_rating\": \"100 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:33\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0105 ft\", \"conductor_resistance\": \"0.1189 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.573 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.563 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0ALWP7\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:34\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0177 ft\", \"conductor_resistance\": \"0.433488 ohm/kft\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"0.00 Ohm/mile\", \"neutral_gmr\": \"0.0485380344339232 ft\", \"outer_diameter\": \"1.32 in\", \"neutral_strands\": \"11.0\", \"neutral_resistance\": \"13.5696 ohm/kft\", \"rating.summer.continuous\": \"214.0 A\", \"neutral_diameter\": \"0.0641 in\", \"conductor_diameter\": \"0.528 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"Conc_4_0_AAC_2\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:35\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_7500_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"75 kVA\", \"power_rating\": \"75 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:36\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_300CUKER5\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:37\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"1.010163Ohm/km\", \"name\": \"oh_2_ACSR_TW\", \"geometric_mean_radius\": \"0.153545cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:38\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"evcharger_det\", \"parent\": \"XXX\", \"name\": \"YYY\", \"variation_mean\": \"300.0\", \"variation_std_dev\": \"100.0\", \"variation_trip_mean\": \"300.0\", \"variation_trip_std_dev\": \"100.0\", \"mileage_classification\": \"33.0\", \"work_charging_available\": \"false\", \"travel_distance\": \"15.0\", \"arrival_at_work\": \"900\", \"duration_at_work\": \"9 h\", \"arrival_at_home\": \"1800\", \"duration_at_home\": \"14 h\", \"mileage_efficiency\": \"3.846\", \"maximum_charge_rate\": \"1700\", \"charging_efficiency\": \"0.90\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:39\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3105\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00400 Ohm\", \"shunt_impedance\": \"365.685+345.241j\", \"reactance\": \"0.00267 Ohm\", \"powerB_rating\": \"37.5 kVA\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:40\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"15.0 kVA\", \"name\": \"R1_12_47_1_3739\", \"primary_voltage\": \"12500.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.00667 Ohm\", \"shunt_impedance\": \"318.750+321.595j\", \"reactance\": \"0.03333 Ohm\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:41\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"1.572690Ohm/km\", \"name\": \"oh_#4_ACSR_6/1\", \"geometric_mean_radius\": \"0.133096cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:42\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_100000_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"1000 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:43\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1726\", \"primary_voltage\": \"12470.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.00400 Ohm\", \"shunt_impedance\": \"339.610+381.628j\", \"reactance\": \"0.02000 Ohm\", \"powerA_rating\": \"25.0 kVA\", \"power_rating\": \"25.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:44\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0105 ft\", \"conductor_resistance\": \"0.1189 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.573 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.563 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0AL15KVUG\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:45\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_16700_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"167 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:46\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_15000_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"150 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:47\", \"componentType\": \"gridlabd\", \"treeProps\": {\"phases\": \"AS\", \"rated_power\": \"4.0 kW\", \"name\": \"solar_solpos\", \"parent\": \"pf_inv\", \"area\": \"29.6296 m^2\", \"orientation_azimuth\": \"180.0\", \"object\": \"solar\", \"efficiency\": \"0.135\", \"weather\": \"WA-Yakima\", \"SOLAR_TILT_MODEL\": \"SOLPOS\", \"SOLAR_POWER_MODEL\": \"FLATPLATE\", \"tilt_angle\": \"45.0\", \"orientation\": \"FIXED_AXIS\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:48\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"volt_var_control\", \"name\": \"volt_var_control\", \"substation_link\": \"Reg1\", \"max_vdrop\": \"50\", \"low_load_deadband\": \"30\", \"d_max\": \"0.8\", \"minimum_voltages\": \"1800\", \"control_method\": \"ACTIVE\", \"capacitor_list\": \"CAP1,CAP2\", \"regulator_list\": \"Reg1\", \"capacitor_delay\": \"60.0\", \"d_min\": \"0.1\", \"regulator_delay\": \"60.0\", \"desired_voltages\": \"2200\", \"maximum_voltages\": \"3500\", \"desired_pf\": \"0.99\", \"high_load_deadband\": \"30\", \"voltage_measurements\": \"652\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:49\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"5.0 kVA\", \"name\": \"R1_12_47_1_3125\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+300.666j\", \"reactance\": \"0.01 Ohm\", \"power_rating\": \"5.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:50\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"25.0 kVA\", \"name\": \"R1_12_47_2_1458\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00600 Ohm\", \"shunt_impedance\": \"339.610+284.766j\", \"reactance\": \"0.00400 Ohm\", \"power_rating\": \"25.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:51\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2_0CURR15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:52\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.190575Ohm/km\", \"name\": \"oh_4/0_CU\", \"geometric_mean_radius\": \"0.507238cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:53\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3099\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+273.252j\", \"reactance\": \"0.01 Ohm\", \"powerA_rating\": \"5.0 kVA\", \"power_rating\": \"5.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:54\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.587196Ohm/km\", \"name\": \"oh_2_CU\", \"geometric_mean_radius\": \"0.254762cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:55\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0395 ft\", \"conductor_resistance\": \"0.0141 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.175 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"725 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.165 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1000ALTRXLPEJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:56\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.062323Ohm/km\", \"name\": \"oh_600_CU\", \"geometric_mean_radius\": \"0.838200cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:57\", \"componentType\": \"gridlabd\", \"treeProps\": {\"glass_type\": \"1\", \"auxiliary_system_type\": \"ELECTRIC\", \"cooling_COP\": \"3.6\", \"hvac_breaker_rating\": \"1000\", \"cooling_system_type\": \"ELECTRIC\", \"total_thermal_mass_per_floor_area\": \"2.5\", \"auxiliary_strategy\": \"DEADBAND\", \"air_temperature\": \"68\", \"heating_COP\": \"3.0\", \"motor_efficiency\": \"AVERAGE\", \"heating_system_type\": \"HEAT_PUMP\", \"Rwall\": \"19.0\", \"glazing_treatment\": \"1\", \"Rdoors\": \"3\", \"glazing_layers\": \"2\", \"window_frame\": \"2\", \"parent\": \"null\", \"floor_area\": \"2209\", \"object\": \"house\", \"number_of_stories\": \"1\", \"mass_temperature\": \"68\", \"name\": \"R1_SingleFamilyHome_1970-1979\", \"Rfloor\": \"20.0\", \"airchange_per_hour\": \"0.5\", \"Rroof\": \"34.0\", \"ceiling_height\": \"8.0\", \"breaker_amps\": \"1000\", \"over_sizing_factor\": \"0.1\", \"motor_model\": \"BASIC\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:58\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_7500_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"75 kVA\", \"power_rating\": \"75 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:59\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_10_23_9_13_8_kV_YY1_120\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120.0 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"impedance\": \"0.018+0.018j\", \"power_rating\": \"10 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:60\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750ALXLPE15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:61\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"AG_750CUXLP\", \"conductor_resistance\": \"0.0947 ohm/kft\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"2.704 Ohm/mile\", \"neutral_gmr\": \"0 ft\", \"outer_diameter\": \"2.5 in\", \"neutral_strands\": \"0\", \"neutral_resistance\": \"0 ohm/kft\", \"neutral_diameter\": \"0 in\", \"conductor_diameter\": \"1.059 in\", \"shield_gmr\": \"0.07808 ft\", \"conductor_gmr\": \"0.0308 ft\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:62\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1419\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00300 Ohm\", \"shunt_impedance\": \"391.760+330.449j\", \"reactance\": \"0.00200 Ohm\", \"powerA_rating\": \"50.0 kVA\", \"power_rating\": \"50.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:63\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"tape_3_0\", \"conductor_resistance\": \"0.611 ohm/mile\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"3.8816 Ohm/mile\", \"neutral_gmr\": \"0.01404 ft\", \"outer_diameter\": \"1.16 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"0.382 ohm/mile\", \"neutral_diameter\": \"0.464 in\", \"conductor_diameter\": \"0.464 in\", \"shield_gmr\": \"0.0402 ft\", \"conductor_gmr\": \"0.014 ft\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:64\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_1000\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"10 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:65\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2ALHMWPECN15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:66\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2CURR15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:67\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_5000_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"50 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:68\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_4500\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"45 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:69\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"50.0 kVA\", \"name\": \"R1_12_47_2_1462\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00300 Ohm\", \"shunt_impedance\": \"391.760+346.529j\", \"reactance\": \"0.00200 Ohm\", \"power_rating\": \"50.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:70\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_22500_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"225 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:71\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_1500_23_9_13_8_kV_YYT_0277\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"277.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.006+0.018j\", \"power_rating\": \"1500 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:72\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"221 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALTRXLPECNJ35\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:73\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"405 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_350ALTRXLPELC15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:74\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_16700_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"167 kVA\", \"power_rating\": \"167 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:75\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.295773Ohm/km\", \"name\": \"oh_4/0_AAAC\", \"geometric_mean_radius\": \"0.480568cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:76\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_25_23_9_13_8_kV_YY1\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.018+0.018j\", \"power_rating\": \"25 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:77\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1435\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00600 Ohm\", \"shunt_impedance\": \"339.610+383.556j\", \"reactance\": \"0.00400 Ohm\", \"powerB_rating\": \"25.0 kVA\", \"power_rating\": \"25.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:78\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.646847Ohm/km\", \"name\": \"oh_1/0_ACSR\", \"geometric_mean_radius\": \"0.135890cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:79\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.679780Ohm/km\", \"name\": \"oh_101_ACSR\", \"geometric_mean_radius\": \"0.016256cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:80\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALTRXLPELCJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:81\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1423\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00240 Ohm\", \"shunt_impedance\": \"417.835+429.640j\", \"reactance\": \"0.00160 Ohm\", \"powerA_rating\": \"62.5 kVA\", \"power_rating\": \"62.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:82\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_350ALXLPEDWJ25\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:83\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.01142 ft\", \"conductor_resistance\": \"0.88704 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0489686771417213 ft\", \"outer_diameter\": \"1.27 in\", \"neutral_strands\": \"16.0\", \"neutral_resistance\": \"13.86528 ohm/kft\", \"rating.summer.continuous\": \"142.0 A\", \"neutral_diameter\": \"0.0641 in\", \"conductor_diameter\": \"0.362\", \"shield_gmr\": \"0.00 ft\", \"name\": \"R1_12_47_2_Conc_1_0_AAC\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:84\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"0.0 kVA\", \"name\": \"R1_12_47_1_3735\", \"primary_voltage\": \"12500.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"WYE_WYE\", \"resistance\": \"0.00400 Ohm\", \"shunt_impedance\": \"339.610+424.065j\", \"reactance\": \"0.02000 Ohm\", \"powerB_rating\": \"25.0 kVA\", \"powerA_rating\": \"0.0 kVA\", \"power_rating\": \"25.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:85\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_500CURR15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:86\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0175 ft\", \"conductor_resistance\": \"0.063 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.5618 in\", \"neutral_strands\": \"8\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.5518 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0CUB7SD\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:87\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.298879Ohm/km\", \"name\": \"oh_2/0_WPCU\", \"geometric_mean_radius\": \"0.381254cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:88\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3109\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"308.320+327.432j\", \"reactance\": \"0.01 Ohm\", \"powerB_rating\": \"10.0 kVA\", \"power_rating\": \"10.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:89\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_350ALTRXLPELCJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:90\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.530030Ohm/km\", \"name\": \"oh_2/0_WPAL\", \"geometric_mean_radius\": \"0.155448cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:91\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0175 ft\", \"conductor_resistance\": \"0.063 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.5618 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.5518 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0CUBS\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:92\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.074813Ohm/km\", \"name\": \"oh_1000_KCM_WPAL\", \"geometric_mean_radius\": \"1.314961cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:93\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3108\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00500 Ohm\", \"shunt_impedance\": \"350.040+345.213j\", \"reactance\": \"0.00333 Ohm\", \"powerB_rating\": \"30.0 kVA\", \"power_rating\": \"30.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:94\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0105 ft\", \"conductor_resistance\": \"0.1189 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.573 in\", \"neutral_strands\": \"8\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.563 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0ALTRXLPECNJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:95\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"tape_1_0\", \"conductor_resistance\": \"0.97 ohm/mile\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"4.2786 Ohm/mile\", \"neutral_gmr\": \"0.01113 ft\", \"outer_diameter\": \"1.06 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"0.607 ohm/mile\", \"neutral_diameter\": \"0.368 in\", \"conductor_diameter\": \"0.368 in\", \"shield_gmr\": \"0.0365 ft\", \"conductor_gmr\": \"0.0111 ft\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:96\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.114643Ohm/km\", \"name\": \"oh_350_CU\", \"geometric_mean_radius\": \"0.652780cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:97\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_22500\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"225 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:98\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"AG_UNK\", \"conductor_resistance\": \"0.0947 ohm/kft\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"0.0000 Ohm/mile\", \"neutral_gmr\": \"0.0033 ft\", \"outer_diameter\": \"1.4830 in\", \"neutral_strands\": \"25.0000\", \"neutral_resistance\": \"5.9026 ohm/kft\", \"neutral_diameter\": \"0.1019 in\", \"conductor_diameter\": \"0.9630 in\", \"shield_gmr\": \"0.0000 ft\", \"conductor_gmr\": \"0.0308 ft\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:99\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"0.0 kVA\", \"name\": \"R1_12_47_1_3734\", \"primary_voltage\": \"12500.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"WYE_WYE\", \"resistance\": \"0.00333 Ohm\", \"shunt_impedance\": \"350.040+352.463j\", \"reactance\": \"0.01667 Ohm\", \"powerB_rating\": \"30.0 kVA\", \"powerA_rating\": \"0.0 kVA\", \"power_rating\": \"30.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:100\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1422\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+278.442j\", \"reactance\": \"0.01 Ohm\", \"powerA_rating\": \"5 kVA\", \"power_rating\": \"5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:101\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2_0AL15KVCN\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:102\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_8CURR\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:103\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_650CUPIJ\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:104\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.065289Ohm/km\", \"name\": \"oh_1000_WPAL\", \"geometric_mean_radius\": \"1.314961cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:105\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1434\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00080 Ohm\", \"shunt_impedance\": \"678.585+661.660j\", \"reactance\": \"0.00053 Ohm\", \"powerA_rating\": \"187.5 kVA\", \"power_rating\": \"187.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:106\", \"componentType\": \"gridlabd\", \"treeProps\": {\"glass_type\": \"2\", \"auxiliary_system_type\": \"ELECTRIC\", \"cooling_COP\": \"3.2\", \"hvac_breaker_rating\": \"1000\", \"cooling_system_type\": \"ELECTRIC\", \"total_thermal_mass_per_floor_area\": \"2.5\", \"auxiliary_strategy\": \"DEADBAND\", \"air_temperature\": \"68\", \"heating_COP\": \"2.1\", \"motor_efficiency\": \"AVERAGE\", \"heating_system_type\": \"HEAT_PUMP\", \"Rwall\": \"14.3\", \"glazing_treatment\": \"3\", \"Rdoors\": \"6.3\", \"glazing_layers\": \"2\", \"window_frame\": \"4\", \"parent\": \"null\", \"floor_area\": \"820\", \"object\": \"house\", \"number_of_stories\": \"1\", \"mass_temperature\": \"68\", \"name\": \"R1_Apartment_1990-2005\", \"Rfloor\": \"12.7\", \"airchange_per_hour\": \"0.125\", \"Rroof\": \"28.7\", \"ceiling_height\": \"8.0\", \"breaker_amps\": \"1000\", \"over_sizing_factor\": \"0.1\", \"motor_model\": \"BASIC\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:107\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_10000_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"100 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:108\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"30.0 kVA\", \"name\": \"R1_12_47_2_1463\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00500 Ohm\", \"shunt_impedance\": \"350.040+346.288j\", \"reactance\": \"0.00333 Ohm\", \"power_rating\": \"30.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:109\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.186411Ohm/km\", \"name\": \"oh_336_ACSR_26/7\", \"geometric_mean_radius\": \"0.743712cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:110\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:111\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0395 ft\", \"conductor_resistance\": \"0.0141 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.175 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"700 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.165 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1000ALTRXLPELCJ25\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:112\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_650CUPILC3D15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:113\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.748877Ohm/km\", \"name\": \"oh_3_CU\", \"geometric_mean_radius\": \"0.227076cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:114\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1418\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00200 Ohm\", \"shunt_impedance\": \"443.910+463.922j\", \"reactance\": \"0.00133 Ohm\", \"powerA_rating\": \"75.0 kVA\", \"power_rating\": \"75.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:115\", \"componentType\": \"gridlabd\", \"treeProps\": {\"glass_type\": \"2\", \"auxiliary_system_type\": \"ELECTRIC\", \"cooling_COP\": \"4.0\", \"hvac_breaker_rating\": \"1000\", \"cooling_system_type\": \"ELECTRIC\", \"total_thermal_mass_per_floor_area\": \"2.5\", \"auxiliary_strategy\": \"DEADBAND\", \"air_temperature\": \"68\", \"heating_COP\": \"3.0\", \"motor_efficiency\": \"AVERAGE\", \"heating_system_type\": \"HEAT_PUMP\", \"Rwall\": \"28.0\", \"glazing_treatment\": \"2\", \"Rdoors\": \"11\", \"glazing_layers\": \"3\", \"window_frame\": \"4\", \"parent\": \"null\", \"floor_area\": \"2209\", \"object\": \"house\", \"number_of_stories\": \"1\", \"mass_temperature\": \"68\", \"name\": \"R1_SingleFamilyHome_1990-2005\", \"Rfloor\": \"30.0\", \"airchange_per_hour\": \"0.25\", \"Rroof\": \"48.0\", \"ceiling_height\": \"8.0\", \"breaker_amps\": \"1000\", \"over_sizing_factor\": \"0.1\", \"motor_model\": \"BASIC\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:116\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"AG_1_0CN15\", \"conductor_resistance\": \"0.6070 ohm/kft\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"0.0000 Ohm/mile\", \"neutral_gmr\": \"0.0021 ft\", \"outer_diameter\": \"0.8930 in\", \"neutral_strands\": \"15.0000\", \"neutral_resistance\": \"14.8722 ohm/kft\", \"neutral_diameter\": \"0.0641 in\", \"conductor_diameter\": \"0.3680 in\", \"shield_gmr\": \"0.0000 ft\", \"conductor_gmr\": \"0.0111 ft\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:117\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"1.522297Ohm/km\", \"name\": \"oh_4_DPX\", \"geometric_mean_radius\": \"0.213360cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:118\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_250CURR15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:119\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3098\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00300 Ohm\", \"shunt_impedance\": \"391.760+382.759j\", \"reactance\": \"0.00200 Ohm\", \"powerA_rating\": \"50.0 kVA\", \"power_rating\": \"50.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:120\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.592167Ohm/km\", \"name\": \"oh_1/0_ALQPX\", \"geometric_mean_radius\": \"0.347980cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:121\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.646910Ohm/km\", \"name\": \"oh_1/0_ACSR_6/1\", \"geometric_mean_radius\": \"0.137160cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:122\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_15000_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"150 kVA\", \"power_rating\": \"150 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:123\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0373 ft\", \"conductor_resistance\": \"0.0263 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.118 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"608 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.108 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750ALXLPEDWJ25\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:124\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.592167Ohm/km\", \"name\": \"oh_1/0_AAAC\", \"geometric_mean_radius\": \"0.347980cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:125\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"10.0 kVA\", \"name\": \"R1_12_47_1_3124\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"308.320+308.100j\", \"reactance\": \"0.01 Ohm\", \"power_rating\": \"10.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:126\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0371 ft\", \"conductor_resistance\": \"0.0222 ohm/kft\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"0.00 Ohm/mile\", \"neutral_gmr\": \"0.0732739718442675 ft\", \"outer_diameter\": \"1.87 in\", \"neutral_strands\": \"20.0\", \"neutral_resistance\": \"0.05 ohm/kft\", \"rating.summer.continuous\": \"775.0 A\", \"neutral_diameter\": \"0.102 in\", \"conductor_diameter\": \"1.15 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"R1_12_47_2_Tape_1000_AAC\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:127\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.349832Ohm/km\", \"name\": \"oh_4/0_ACSR\", \"geometric_mean_radius\": \"0.248158cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:128\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"15.0 kVA\", \"name\": \"R1_12_47_2_1459\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.01000 Ohm\", \"shunt_impedance\": \"318.750+390.343j\", \"reactance\": \"0.00667 Ohm\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:129\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.583989Ohm/km\", \"name\": \"oh_2_TPX\", \"geometric_mean_radius\": \"0.213360cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:130\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_500_23_9_13_8_kV_YYT_0277\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"277.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.006+0.018j\", \"power_rating\": \"500 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:131\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_15_23_9_13_8_kV_YY1\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.018+0.018j\", \"power_rating\": \"15 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:132\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.146954Ohm/km\", \"name\": \"oh_500_KCM_WPAL\", \"geometric_mean_radius\": \"0.989330cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:133\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.592167Ohm/km\", \"name\": \"oh_1/0_AAC\", \"geometric_mean_radius\": \"0.366596cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:134\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"62.5 kVA\", \"name\": \"R1_12_47_1_3738\", \"primary_voltage\": \"12500.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.00160 Ohm\", \"shunt_impedance\": \"417.835+414.316j\", \"reactance\": \"0.00800 Ohm\", \"power_rating\": \"62.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:135\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.081400Ohm/km\", \"name\": \"oh_795_AAC\", \"geometric_mean_radius\": \"0.999744cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:136\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_11250_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"112.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:137\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3104\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00500 Ohm\", \"shunt_impedance\": \"350.040+368.976j\", \"reactance\": \"0.00333 Ohm\", \"powerB_rating\": \"30.0 kVA\", \"power_rating\": \"30.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:138\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_75_23_9_13_8_kV_YY1_120\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120.0 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"75 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:139\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0373 ft\", \"conductor_resistance\": \"0.0263 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.118 in\", \"neutral_strands\": \"8\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.108 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750ALTRXLPELCJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:140\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_75_23_9_13_8_kV_YYT\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"75 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:141\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2_0CUPILC3\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:142\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_5000_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"50 kVA\", \"power_rating\": \"50 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:143\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1438\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+330.126j\", \"reactance\": \"0.01 Ohm\", \"powerB_rating\": \"5 kVA\", \"power_rating\": \"5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:144\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_75000_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"750 kVA\", \"power_rating\": \"750 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:145\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2_0CUB7SD\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:146\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"capacitor\", \"control\": \"VOLT\", \"phases\": \"ABCN\", \"name\": \"capacitor\", \"parent\": \"675\", \"capacitor_B\": \"0.10 mVAr\", \"capacitor_C\": \"0.10 mVAr\", \"capacitor_A\": \"0.10 mVAr\", \"time_delay\": \"300.0\", \"nominal_voltage\": \"2401.7771\", \"voltage_set_high\": \"2350.0\", \"voltage_set_low\": \"2340.0\", \"switchC\": \"CLOSED\", \"control_level\": \"INDIVIDUAL\", \"switchA\": \"CLOSED\", \"switchB\": \"CLOSED\", \"phases_connected\": \"ABCN\", \"dwell_time\": \"0.0\", \"pt_phase\": \"ABCN\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:147\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3112\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+292.361j\", \"reactance\": \"0.01 Ohm\", \"powerB_rating\": \"5.0 kVA\", \"power_rating\": \"5.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:148\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2ALPECN15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:149\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_300_23_9_13_8_kV_YYT\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"300 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:150\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2_0AL15KVUG\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:151\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2CUB7SD\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:152\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.603674Ohm/km\", \"name\": \"oh_1/0_3W_CS\", \"geometric_mean_radius\": \"0.347980cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:153\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3094\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00500 Ohm\", \"shunt_impedance\": \"350.040+362.548j\", \"reactance\": \"0.00333 Ohm\", \"powerA_rating\": \"30.0 kVA\", \"power_rating\": \"30.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:154\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1443\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00300 Ohm\", \"shunt_impedance\": \"391.760+389.189j\", \"reactance\": \"0.00200 Ohm\", \"powerB_rating\": \"50.0 kVA\", \"power_rating\": \"50.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:155\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_75000_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"750 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:156\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0105 ft\", \"conductor_resistance\": \"0.1189 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.573 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.563 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0CUPILCJD15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:157\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALEPRCNJ25\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:158\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_650CUPILCJD15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:159\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"37.5 kVA\", \"name\": \"R1_12_47_1_3128\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00400 Ohm\", \"shunt_impedance\": \"365.685+352.878j\", \"reactance\": \"0.00267 Ohm\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:160\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.933983Ohm/km\", \"name\": \"oh_#4_CU_1STR\", \"geometric_mean_radius\": \"0.202184cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:161\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0175 ft\", \"conductor_resistance\": \"0.063 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.5618 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.5518 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0CURR15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:162\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_1500_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"15 kVA\", \"power_rating\": \"15 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:163\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"50.0 kVA\", \"name\": \"R1_12_47_2_1455\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00300 Ohm\", \"shunt_impedance\": \"391.760+334.507j\", \"reactance\": \"0.00200 Ohm\", \"power_rating\": \"50.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:164\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3743\", \"primary_voltage\": \"12500.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.01 Ohm\", \"shunt_impedance\": \"308.320+310.435j\", \"reactance\": \"0.05 Ohm\", \"powerA_rating\": \"10.0 kVA\", \"power_rating\": \"10.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:165\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.298879Ohm/km\", \"name\": \"oh_2/0_CU\", \"geometric_mean_radius\": \"0.381254cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:166\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.03592 ft\", \"conductor_resistance\": \"0.057024 ohm/kft\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"0.00 Ohm/mile\", \"neutral_gmr\": \"0.0897563211395267 ft\", \"outer_diameter\": \"2.291 in\", \"neutral_strands\": \"20.0\", \"neutral_resistance\": \"3.44784 ohm/kft\", \"rating.summer.continuous\": \"662.0 A\", \"neutral_diameter\": \"0.1285 in\", \"conductor_diameter\": \"1.117 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"Conc_1000_CU_2\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:167\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_4500_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"45 kVA\", \"power_rating\": \"45 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:168\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_1000_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"10 kVA\", \"power_rating\": \"10 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:169\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.679780Ohm/km\", \"name\": \"oh_101_ACSR_12/7\", \"geometric_mean_radius\": \"0.016256cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:170\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"regulator\", \"name\": \"reg\", \"phases\": \"ABCN\", \"from\": \"XXXXX\", \"to\": \"YYYYY\", \"configuration\": \"ZZZZ\"}}, \"geometry\": {\"coordinates\": [[0, 0], [0, 0]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:171\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_100_23_9_13_8_kV_YY1_120\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120.0 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"100 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:172\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1720\", \"primary_voltage\": \"12470.000 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.00080 Ohm\", \"shunt_impedance\": \"548.210+493.302j\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"125.0 kVA\", \"power_rating\": \"125.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:173\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_150_23_9_13_8_kV_YYT_120\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120.0 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"150 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:174\", \"componentType\": \"gridlabd\", \"treeProps\": {\"glass_type\": \"1\", \"auxiliary_system_type\": \"ELECTRIC\", \"cooling_COP\": \"3.2\", \"hvac_breaker_rating\": \"1000\", \"cooling_system_type\": \"ELECTRIC\", \"total_thermal_mass_per_floor_area\": \"2.5\", \"auxiliary_strategy\": \"DEADBAND\", \"air_temperature\": \"68\", \"heating_COP\": \"2.6\", \"motor_efficiency\": \"AVERAGE\", \"heating_system_type\": \"HEAT_PUMP\", \"Rwall\": \"14.0\", \"glazing_treatment\": \"1\", \"Rdoors\": \"3\", \"glazing_layers\": \"2\", \"window_frame\": \"1\", \"parent\": \"null\", \"floor_area\": \"2209\", \"object\": \"house\", \"number_of_stories\": \"1\", \"mass_temperature\": \"68\", \"name\": \"R1_SingleFamilyHome_1950-1959\", \"Rfloor\": \"16.0\", \"airchange_per_hour\": \"0.5\", \"Rroof\": \"19.0\", \"ceiling_height\": \"8.0\", \"breaker_amps\": \"1000\", \"over_sizing_factor\": \"0.1\", \"motor_model\": \"BASIC\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:175\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_300_23_9_13_8_kV_YYT_0277\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"277.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"300 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:176\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_75_23_9_13_8_kV_YY1\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"75 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:177\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"AG_750CUEPR_4RUNS\", \"conductor_resistance\": \"0.0947 ohm/kft\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"0.0000 Ohm/mile\", \"neutral_gmr\": \"0.0033 ft\", \"outer_diameter\": \"1.4830 in\", \"neutral_strands\": \"25.0000\", \"neutral_resistance\": \"5.9026 ohm/kft\", \"neutral_diameter\": \"0.1019 in\", \"conductor_diameter\": \"0.629 in\", \"shield_gmr\": \"0.0000 ft\", \"conductor_gmr\": \"0.0308 ft\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:178\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2CUPILCJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:179\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2CUKER35\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:180\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_1000_23_9_13_8_kV_YYT_0277\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"277.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.006+0.018j\", \"power_rating\": \"1000 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:181\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.470378Ohm/km\", \"name\": \"oh_1_CU\", \"geometric_mean_radius\": \"0.309626cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:182\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_650CUTRXLPEJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:183\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"15.0 kVA\", \"name\": \"R1_12_47_1_3123\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.01000 Ohm\", \"shunt_impedance\": \"318.750+294.199j\", \"reactance\": \"0.00667 Ohm\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:184\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3089\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+274.164j\", \"reactance\": \"0.01 Ohm\", \"powerA_rating\": \"5 kVA\", \"power_rating\": \"5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:185\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_16700_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"167 kVA\", \"power_rating\": \"167 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:186\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_30000_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"300 kVA\", \"power_rating\": \"300 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:187\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_50_23_9_13_8_kV_YYB\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"50 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:188\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0105 ft\", \"conductor_resistance\": \"0.1189 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.573 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.563 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0ALXLPEDWJ25\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:189\", \"componentType\": \"gridlabd\", \"treeProps\": {\"pf_reg_activate_lockout_time\": \"60s\", \"discharge_off_threshold\": \"7.5 kW\", \"phases\": \"AS\", \"four_quadrant_control_mode\": \"LOAD_FOLLOWING\", \"name\": \"load_following_inv_pf\", \"parent\": \"split_phase_meter\", \"discharge_lockout_time\": \"60s\", \"inverter_type\": \"FOUR_QUADRANT\", \"object\": \"inverter\", \"sense_object\": \"triptransformer\", \"max_charge_rate\": \"0.80 kW\", \"charge_off_threshold\": \"7.0 kW\", \"pf_reg_activate\": \"0.7\", \"rated_power\": \"3000.0\", \"pf_reg_deactivate\": \"0.9\", \"charge_lockout_time\": \"60s\", \"max_discharge_rate\": \"1.0 kW\", \"inverter_efficiency\": \"0.87\", \"discharge_on_threshold\": \"9.0 kW\", \"charge_on_threshold\": \"5.0 kW\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:190\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1448\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00400 Ohm\", \"shunt_impedance\": \"365.685+356.338j\", \"reactance\": \"0.00267 Ohm\", \"powerB_rating\": \"37.5 kVA\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:191\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0175 ft\", \"conductor_resistance\": \"0.063 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.5618 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.5518 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0CUEPRJD15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:192\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"62.5 kVA\", \"name\": \"R1_12_47_2_1464\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00240 Ohm\", \"shunt_impedance\": \"417.835+346.265j\", \"reactance\": \"0.00160 Ohm\", \"power_rating\": \"62.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:193\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"37.5 kVA\", \"name\": \"R1_12_47_1_3119\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00400 Ohm\", \"shunt_impedance\": \"365.685+295.469j\", \"reactance\": \"0.00267 Ohm\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:194\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.658790Ohm/km\", \"name\": \"oh_1/0_ACSR_AZUSA\", \"geometric_mean_radius\": \"0.135890cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:195\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"9\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:196\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_100_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"1 kVA\", \"power_rating\": \"1 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:197\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1433\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00500 Ohm\", \"shunt_impedance\": \"350.040+405.462j\", \"reactance\": \"0.00333 Ohm\", \"powerA_rating\": \"30.0 kVA\", \"power_rating\": \"30.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:198\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750CUPILCJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:199\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_400CUPILC3D15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:200\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.134216Ohm/km\", \"name\": \"oh_477_AAAC\", \"geometric_mean_radius\": \"0.762000cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:201\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_5000_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"50 kVA\", \"power_rating\": \"50 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:202\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1425\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+268.429j\", \"reactance\": \"0.01 Ohm\", \"powerA_rating\": \"5 kVA\", \"power_rating\": \"5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:203\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_650CU\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:204\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALEPRCN35\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:205\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"0.0 kVA\", \"name\": \"R1_12_47_1_3733\", \"primary_voltage\": \"12500.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"WYE_WYE\", \"resistance\": \"0.00667 Ohm\", \"shunt_impedance\": \"318.750+347.082j\", \"reactance\": \"0.03333 Ohm\", \"powerB_rating\": \"15.0 kVA\", \"powerA_rating\": \"0.0 kVA\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:206\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_394AAACB19\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:207\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"1.522297Ohm/km\", \"name\": \"oh_4_TPX\", \"geometric_mean_radius\": \"0.213360cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:208\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"221 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALHMWPECN25\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:209\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_7500\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"75 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:210\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3744\", \"primary_voltage\": \"12500.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.00400 Ohm\", \"shunt_impedance\": \"339.610+365.132j\", \"reactance\": \"0.02000 Ohm\", \"powerA_rating\": \"25.0 kVA\", \"power_rating\": \"25.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:211\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750CUKER15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:212\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3085\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00400 Ohm\", \"shunt_impedance\": \"365.685+397.393j\", \"reactance\": \"0.00267 Ohm\", \"powerA_rating\": \"37.5 kVA\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:213\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"5 kVA\", \"name\": \"R1_12_47_2_1452\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+302.457j\", \"reactance\": \"0.01 Ohm\", \"power_rating\": \"5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:214\", \"componentType\": \"gridlabd\", \"treeProps\": {\"phases\": \"ABCN\", \"name\": \"windturb1\", \"parent\": \"rect1\", \"Gen_status\": \"ONLINE\", \"Turbine_Model\": \"BERGEY_10kW\", \"object\": \"windturb_dg\", \"Gen_mode\": \"CONSTANTP\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:215\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3093\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00400 Ohm\", \"shunt_impedance\": \"365.685+334.443j\", \"reactance\": \"0.00267 Ohm\", \"powerA_rating\": \"37.5 kVA\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:216\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_350ALTRXLPELCJ25\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:217\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1444\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00200 Ohm\", \"shunt_impedance\": \"443.910+432.560j\", \"reactance\": \"0.00133 Ohm\", \"powerB_rating\": \"75.0 kVA\", \"power_rating\": \"75.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:218\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.188275Ohm/km\", \"name\": \"oh_4/0_WPCU\", \"geometric_mean_radius\": \"0.480060cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:219\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_500CUTRXLPECNJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:220\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.302821Ohm/km\", \"name\": \"oh_4/0_WPAL\", \"geometric_mean_radius\": \"0.480568cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:221\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2ALRC\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:222\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_350ALXLPEDWJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:223\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"2.386250Ohm/km\", \"name\": \"oh_8_CU\", \"geometric_mean_radius\": \"0.127000cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:224\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_400CUPILCJD15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:225\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.603674Ohm/km\", \"name\": \"oh_1/0_4WCS\", \"geometric_mean_radius\": \"0.347980cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:226\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"221 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALTRXLPELCJ25\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:227\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.603674Ohm/km\", \"name\": \"oh_1/0_4W_CS\", \"geometric_mean_radius\": \"0.347980cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:228\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"5 kVA\", \"name\": \"R1_12_47_1_3115\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+344.392j\", \"reactance\": \"0.01 Ohm\", \"power_rating\": \"5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:229\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0371 ft\", \"conductor_resistance\": \"0.0222 ohm/kft\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"0.00 Ohm/mile\", \"neutral_gmr\": \"0.0732739718442675 ft\", \"outer_diameter\": \"1.87 in\", \"neutral_strands\": \"20.0\", \"neutral_resistance\": \"0.05 ohm/kft\", \"rating.summer.continuous\": \"775.0 A\", \"neutral_diameter\": \"0.102\", \"conductor_diameter\": \"1.15 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"Tape_1000_AAC_1\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:230\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2ALTRXLPECNJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:231\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"15.0 kVA\", \"name\": \"R1_12_47_2_1716\", \"primary_voltage\": \"12470.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"WYE_WYE\", \"resistance\": \"0.00667 Ohm\", \"shunt_impedance\": \"318.750+304.091j\", \"reactance\": \"0.03333 Ohm\", \"powerB_rating\": \"0.0 kVA\", \"powerA_rating\": \"0.0 kVA\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:232\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1429\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00300 Ohm\", \"shunt_impedance\": \"391.760+437.312j\", \"reactance\": \"0.00200 Ohm\", \"powerA_rating\": \"50.0 kVA\", \"power_rating\": \"50.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:233\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2ALHMWPECN25\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:234\", \"componentType\": \"gridlabd\", \"treeProps\": {\"phases\": \"AS\", \"rated_power\": \"4.0 kW\", \"name\": \"solar_shading\", \"parent\": \"pf_inv\", \"area\": \"29.6296 m^2\", \"orientation_azimuth\": \"180.0\", \"object\": \"solar\", \"efficiency\": \"0.135\", \"weather\": \"WA-Yakima\", \"SOLAR_TILT_MODEL\": \"SOLPOS\", \"SOLAR_POWER_MODEL\": \"FLATPLATE\", \"tilt_angle\": \"45.0\", \"shading_factor\": \"0.8\", \"orientation\": \"FIXED_AXIS\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:235\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750CUTRXLPELCJ25\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:236\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2CUKER15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:237\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.114332Ohm/km\", \"name\": \"oh_1/0_QPX\", \"geometric_mean_radius\": \"0.347980cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:238\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"line_spacing\", \"name\": \"NULL\", \"distance_AN\": \"4.472136\", \"distance_CN\": \"4.472136\", \"distance_BC\": \"4.472136\", \"distance_AB\": \"4.472136\", \"distance_AC\": \"8.000000\", \"distance_BN\": \"4.000000\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:239\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3103\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00600 Ohm\", \"shunt_impedance\": \"339.610+312.651j\", \"reactance\": \"0.00400 Ohm\", \"powerB_rating\": \"25.0 kVA\", \"power_rating\": \"25.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:240\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2ALTRXLPECNJAC15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:241\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.188275Ohm/km\", \"name\": \"oh_336_ACSR\", \"geometric_mean_radius\": \"0.701040cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:242\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3102\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00600 Ohm\", \"shunt_impedance\": \"339.610+418.251j\", \"reactance\": \"0.00400 Ohm\", \"powerB_rating\": \"25.0 kVA\", \"power_rating\": \"25.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:243\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.381335Ohm/km\", \"name\": \"oh_1/0_WPCU\", \"geometric_mean_radius\": \"0.339598cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:244\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750CUTRXLPEJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:245\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.695867Ohm/km\", \"name\": \"oh_1/0_WPAL\", \"geometric_mean_radius\": \"0.135890cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:246\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"AG_1_0CN25\", \"conductor_resistance\": \"0.6070 ohm/kft\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"0.0000 Ohm/mile\", \"neutral_gmr\": \"0.0021 ft\", \"outer_diameter\": \"0.8380 in\", \"neutral_strands\": \"25.0000\", \"neutral_resistance\": \"14.8722 ohm/kft\", \"neutral_diameter\": \"0.0641 in\", \"conductor_diameter\": \"0.3680 in\", \"shield_gmr\": \"0.0000 ft\", \"conductor_gmr\": \"0.0111 ft\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:247\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1428\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.01000 Ohm\", \"shunt_impedance\": \"318.750+313.920j\", \"reactance\": \"0.00667 Ohm\", \"powerA_rating\": \"15.0 kVA\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:248\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"line_configuration\", \"name\": \"NULL\", \"spacing\": \"NULL\", \"conductor_A\": \"NULL\", \"conductor_C\": \"NULL\", \"conductor_B\": \"NULL\", \"conductor_N\": \"NULL\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:249\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.590800Ohm/km\", \"name\": \"oh_1/0_ARV_7STR\", \"geometric_mean_radius\": \"0.361696cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:250\", \"componentType\": \"gridlabd\", \"treeProps\": {\"rated_power\": \"25000\", \"phases\": \"ABC\", \"object\": \"inverter\", \"name\": \"simple_inverter\", \"parent\": \"three_phase_meter\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:251\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"recorder\", \"property\": \"measured_power,voltage_12.real,voltage_12.imag\", \"interval\": \"1\", \"limit\": \"0\", \"file\": \"meterRecorder_XXX.csv\", \"parent\": \"XXXX\", \"name\": \"meter_recorder\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:252\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"100.0 kVA\", \"name\": \"R1_12_47_2_1717\", \"primary_voltage\": \"12470.000 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"WYE_WYE\", \"resistance\": \"0.00033 Ohm\", \"shunt_impedance\": \"913.260+1012.897j\", \"reactance\": \"0.00167 Ohm\", \"powerB_rating\": \"100.0 kVA\", \"powerA_rating\": \"100.0 kVA\", \"power_rating\": \"300.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:253\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.159692Ohm/km\", \"name\": \"oh_250_CU\", \"geometric_mean_radius\": \"0.551688cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:254\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_10_23_9_13_8_kV_YYB\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.018+0.018j\", \"power_rating\": \"10 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:255\", \"componentType\": \"gridlabd\", \"treeProps\": {\"phases\": \"AS\", \"rated_power\": \"4.0 kW\", \"name\": \"solar_fixed\", \"parent\": \"pf_inv\", \"area\": \"29.6296 m^2\", \"orientation_azimuth\": \"25.0\", \"object\": \"solar\", \"efficiency\": \"0.135\", \"latitude_angle_fix\": \"true\", \"orientation\": \"FIXED_AXIS\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:256\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2_0ALHMWPECN15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:257\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.530030Ohm/km\", \"name\": \"oh_2/0_ACSR\", \"geometric_mean_radius\": \"0.155448cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:258\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"1.485077Ohm/km\", \"name\": \"oh_6_WPCU_SEC\", \"geometric_mean_radius\": \"0.160274cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:259\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_100000_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"1000 kVA\", \"power_rating\": \"1000 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:260\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.206726Ohm/km\", \"name\": \"oh_1/0_CU_TWISTED\", \"geometric_mean_radius\": \"0.474980cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:261\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.131731Ohm/km\", \"name\": \"oh_477_ACSR_26/7\", \"geometric_mean_radius\": \"0.883920cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:262\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_37_5_23_9_13_8_kV_YYB\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.018+0.018j\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:263\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0373 ft\", \"conductor_resistance\": \"0.0263 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.118 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.108 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750ALXLPEDWJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:264\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3114\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+305.231j\", \"reactance\": \"0.01 Ohm\", \"powerB_rating\": \"5 kVA\", \"power_rating\": \"5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:265\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.301837Ohm/km\", \"name\": \"oh_4/0_QPX\", \"geometric_mean_radius\": \"0.480568cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:266\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"1.572497Ohm/km\", \"name\": \"oh_UNK_UNK\", \"geometric_mean_radius\": \"0.133096cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:267\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_500CUKER15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:268\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"triplex_line\", \"name\": \"triplex_line\", \"phases\": \"ABS\", \"from\": \"NULL\", \"to\": \"NULL\", \"length\": \"20\", \"configuration\": \"NULL\"}}, \"geometry\": {\"coordinates\": [[0, 0], [0, 0]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:269\", \"componentType\": \"gridlabd\", \"treeProps\": {\"phases\": \"AS\", \"rated_power\": \"3000\", \"name\": \"pf_inv\", \"parent\": \"split_phase_meter\", \"inverter_type\": \"FOUR_QUADRANT\", \"power_factor\": \"0.95\", \"object\": \"inverter\", \"four_quadrant_control_mode\": \"CONSTANT_PF\", \"inverter_efficiency\": \"0.87\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:270\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.470378Ohm/km\", \"name\": \"oh_1_WPCU\", \"geometric_mean_radius\": \"0.309626cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:271\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_11250\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"112.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:272\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALEPRCNJ35\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:273\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_15_23_9_13_8_kV_YY1_120\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120.0 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"impedance\": \"0.018+0.018j\", \"power_rating\": \"15 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:274\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3092\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+322.313j\", \"reactance\": \"0.01 Ohm\", \"powerA_rating\": \"5.0 kVA\", \"power_rating\": \"5.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:275\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_100\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"1 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:276\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"AG_2CN15\", \"conductor_resistance\": \"0.9450 ohm/kft\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"0.0000 Ohm/mile\", \"neutral_gmr\": \"0.0021 ft\", \"outer_diameter\": \"0.7330 in\", \"neutral_strands\": \"15.0000\", \"neutral_resistance\": \"14.8722 ohm/kft\", \"neutral_diameter\": \"0.0641 in\", \"conductor_diameter\": \"0.2580 in\", \"shield_gmr\": \"0.0000 ft\", \"conductor_gmr\": \"0.0084 ft\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:277\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1445\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00300 Ohm\", \"shunt_impedance\": \"391.760+407.612j\", \"reactance\": \"0.00200 Ohm\", \"powerB_rating\": \"50.0 kVA\", \"power_rating\": \"50.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:278\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0395 ft\", \"conductor_resistance\": \"0.0141 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.175 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"725 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.165 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1000ALTRXLPELCJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:279\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0175 ft\", \"conductor_resistance\": \"0.063 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.5618 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.5518 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0CUB7\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:280\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3084\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00500 Ohm\", \"shunt_impedance\": \"350.040+295.721j\", \"reactance\": \"0.00333 Ohm\", \"powerA_rating\": \"30.0 kVA\", \"power_rating\": \"30.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:281\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"5 kVA\", \"name\": \"R1_12_47_2_1453\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+260.525j\", \"reactance\": \"0.01 Ohm\", \"power_rating\": \"5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:282\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_16700\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"167 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:283\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.188275Ohm/km\", \"name\": \"oh_336_AAC\", \"geometric_mean_radius\": \"0.671264cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:284\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.295773Ohm/km\", \"name\": \"oh_4/0_AAC_TW\", \"geometric_mean_radius\": \"0.314757cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:285\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.159692Ohm/km\", \"name\": \"oh_397_ACSR\", \"geometric_mean_radius\": \"0.731520cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:286\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2CUPILCD15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:287\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"37.5 kVA\", \"name\": \"R1_12_47_1_3732\", \"primary_voltage\": \"12500.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.00267 Ohm\", \"shunt_impedance\": \"365.685+372.824j\", \"reactance\": \"0.01333 Ohm\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:288\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1424\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"308.320+273.632j\", \"reactance\": \"0.01 Ohm\", \"powerA_rating\": \"10.0 kVA\", \"power_rating\": \"10.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:289\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_100_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"1 kVA\", \"power_rating\": \"1 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:290\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1432\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.01000 Ohm\", \"shunt_impedance\": \"318.750+285.385j\", \"reactance\": \"0.00667 Ohm\", \"powerA_rating\": \"15.0 kVA\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:291\", \"componentType\": \"gridlabd\", \"treeProps\": {\"state_of_charge\": \"0.5\", \"name\": \"batt_defined\", \"parent\": \"load_following_inv_pf\", \"round_trip_efficiency\": \"0.95\", \"object\": \"battery\", \"battery_type\": \"LI_ION\", \"generator_mode\": \"SUPPLY_DRIVEN\", \"battery_capacity\": \"20 kWh\", \"use_internal_battery_model\": \"true\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:292\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2_0ALXLPECN15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:293\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"62.5 kVA\", \"name\": \"R1_12_47_1_3118\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00240 Ohm\", \"shunt_impedance\": \"417.835+459.820j\", \"reactance\": \"0.00160 Ohm\", \"power_rating\": \"62.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:294\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"tape_250\", \"conductor_resistance\": \"0.41 ohm/mile\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"3.4863 Ohm/mile\", \"neutral_gmr\": \"0.01813 ft\", \"outer_diameter\": \"1.27 in\", \"neutral_strands\": \"19\", \"neutral_resistance\": \"0.257 ohm/mile\", \"neutral_diameter\": \"0.574 in\", \"conductor_diameter\": \"0.567 in\", \"shield_gmr\": \"0.0448 ft\", \"conductor_gmr\": \"0.0171 ft\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:295\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALEPRCNJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:296\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0175 ft\", \"conductor_resistance\": \"0.063 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.5618 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.5518 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_400CUB19\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:297\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0395 ft\", \"conductor_resistance\": \"0.0141 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.175 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"725 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.165 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1000AL15KVUG\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:298\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0373 ft\", \"conductor_resistance\": \"0.0263 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.118 in\", \"neutral_strands\": \"8\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"608 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.108 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750ALTRXLPELCJ25\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:299\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1449\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00075 Ohm\", \"shunt_impedance\": \"704.660+755.051j\", \"reactance\": \"0.00050 Ohm\", \"powerB_rating\": \"200.0 kVA\", \"power_rating\": \"200.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:300\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.240036Ohm/km\", \"name\": \"oh_3/0_CU\", \"geometric_mean_radius\": \"0.427990cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:301\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.134216Ohm/km\", \"name\": \"oh_477_ACSR\", \"geometric_mean_radius\": \"0.762000cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:302\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"30.0 kVA\", \"name\": \"R1_12_47_1_3122\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00500 Ohm\", \"shunt_impedance\": \"350.040+357.513j\", \"reactance\": \"0.00333 Ohm\", \"power_rating\": \"30.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:303\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3088\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.01000 Ohm\", \"shunt_impedance\": \"318.750+360.704j\", \"reactance\": \"0.00667 Ohm\", \"powerA_rating\": \"15.0 kVA\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:304\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALTRXPECNJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:305\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"2.460262Ohm/km\", \"name\": \"oh_6_ACSR\", \"geometric_mean_radius\": \"0.120142cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:306\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2CUPILCJD15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:307\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.092 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_400CUTRXLPEJ\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:308\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"batt_simple\", \"parent\": \"load_following_inv_pf\", \"object\": \"battery\", \"battery_type\": \"LI_ION\", \"generator_mode\": \"SUPPLY_DRIVEN\", \"rfb_size\": \"HOUSEHOLD\", \"use_internal_battery_model\": \"true\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:309\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1721\", \"primary_voltage\": \"12470.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.00267 Ohm\", \"shunt_impedance\": \"365.685+345.365j\", \"reactance\": \"0.01333 Ohm\", \"powerA_rating\": \"37.5 kVA\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:310\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2_0CUPILC3D15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:311\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_100000_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"1000 kVA\", \"power_rating\": \"1000 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:312\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3731\", \"primary_voltage\": \"12500.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.00200 Ohm\", \"shunt_impedance\": \"391.760+425.397j\", \"reactance\": \"0.01000 Ohm\", \"powerA_rating\": \"50.0 kVA\", \"power_rating\": \"50.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:313\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_400CURRUG\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:314\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.055302Ohm/km\", \"name\": \"oh_750_CU\", \"geometric_mean_radius\": \"0.971804cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:315\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1427\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00500 Ohm\", \"shunt_impedance\": \"350.040+272.033j\", \"reactance\": \"0.00333 Ohm\", \"powerA_rating\": \"30.0 kVA\", \"power_rating\": \"30.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:316\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.377172Ohm/km\", \"name\": \"oh_1/0_CU_7STR\", \"geometric_mean_radius\": \"0.340360cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:317\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1431\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00200 Ohm\", \"shunt_impedance\": \"443.910+433.525j\", \"reactance\": \"0.00133 Ohm\", \"powerA_rating\": \"75.0 kVA\", \"power_rating\": \"75.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:318\", \"componentType\": \"gridlabd\", \"treeProps\": {\"glass_type\": \"1\", \"auxiliary_system_type\": \"ELECTRIC\", \"cooling_COP\": \"2.8\", \"hvac_breaker_rating\": \"1000\", \"cooling_system_type\": \"ELECTRIC\", \"total_thermal_mass_per_floor_area\": \"2.5\", \"auxiliary_strategy\": \"DEADBAND\", \"air_temperature\": \"68\", \"heating_COP\": \"2.4\", \"motor_efficiency\": \"AVERAGE\", \"heating_system_type\": \"HEAT_PUMP\", \"Rwall\": \"10.0\", \"glazing_treatment\": \"1\", \"Rdoors\": \"3\", \"glazing_layers\": \"1\", \"window_frame\": \"1\", \"parent\": \"null\", \"floor_area\": \"2209\", \"object\": \"house\", \"number_of_stories\": \"1\", \"mass_temperature\": \"68\", \"name\": \"R1_SingleFamilyHome_Pre-1940\", \"Rfloor\": \"10.0\", \"airchange_per_hour\": \"0.75\", \"Rroof\": \"16.0\", \"ceiling_height\": \"8.0\", \"breaker_amps\": \"1000\", \"over_sizing_factor\": \"0.1\", \"motor_model\": \"BASIC\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:319\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_8CUPELC\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:320\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_500ALXLPE15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:321\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"50.0 kVA\", \"name\": \"R1_12_47_2_1718\", \"primary_voltage\": \"12470.000 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"WYE_WYE\", \"resistance\": \"0.00067 Ohm\", \"shunt_impedance\": \"600.360+590.521j\", \"reactance\": \"0.00333 Ohm\", \"powerB_rating\": \"50.0 kVA\", \"powerA_rating\": \"50.0 kVA\", \"power_rating\": \"150.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:322\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"221 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0TRXLPELCJ25\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:323\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.128002Ohm/km\", \"name\": \"oh_BUSS_2000_AMP\", \"geometric_mean_radius\": \"0.127000cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:324\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_50_23_9_13_8_kV_YY1_120\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120.0 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"50 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:325\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"221 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALTRXLPECNJAC35\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:326\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_100_23_9_13_8_kV_YY1\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"100 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:327\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0373 ft\", \"conductor_resistance\": \"0.0263 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.118 in\", \"neutral_strands\": \"9\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.108 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:328\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.530030Ohm/km\", \"name\": \"oh_2/0_ACSR_6/1\", \"geometric_mean_radius\": \"0.154940cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:329\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2ALTRXLPE15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:330\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0175 ft\", \"conductor_resistance\": \"0.063 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.5618 in\", \"neutral_strands\": \"8\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.5518 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0CURRUG\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:331\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"1.190490Ohm/km\", \"name\": \"oh_5_CU\", \"geometric_mean_radius\": \"0.179832cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:332\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"9\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2_0\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:333\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0373 ft\", \"conductor_resistance\": \"0.0263 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.118 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"608 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.108 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750ALTRXLPE15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:334\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"regulator_configuration\", \"name\": \"regulator_configuration\", \"Control\": \"MANUAL\", \"Type\": \"A\", \"raise_taps\": \"16\", \"band_center\": \"2401\", \"tap_pos_A\": \"1\", \"tap_pos_B\": \"1\", \"time_delay\": \"30.0\", \"connect_type\": \"1\", \"regulation\": \"0.10\", \"CT_phase\": \"ABC\", \"lower_taps\": \"16\", \"tap_pos_C\": \"1\", \"PT_phase\": \"ABC\", \"band_width\": \"50\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:335\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.470378Ohm/km\", \"name\": \"oh_3#1_CU\", \"geometric_mean_radius\": \"0.309626cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:336\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_650CUPILCJ3D15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:337\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"tape_2_0\", \"conductor_resistance\": \"0.769 ohm/mile\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"4.0486 Ohm/mile\", \"neutral_gmr\": \"0.01252 ft\", \"outer_diameter\": \"1.10 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"0.481 ohm/mile\", \"neutral_diameter\": \"0.414 in\", \"conductor_diameter\": \"0.414 in\", \"shield_gmr\": \"0.0385 ft\", \"conductor_gmr\": \"0.0125 ft\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:338\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"15.0 kVA\", \"name\": \"R1_12_47_1_3121\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.01000 Ohm\", \"shunt_impedance\": \"318.750+342.751j\", \"reactance\": \"0.00667 Ohm\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:339\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.932057Ohm/km\", \"name\": \"oh_4_WPCU\", \"geometric_mean_radius\": \"0.202184cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:340\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"1.528212Ohm/km\", \"name\": \"oh_4_WPAL\", \"geometric_mean_radius\": \"0.213360cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:341\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2CUPECN15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:342\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"triplex_node\", \"name\": \"triplex_node\", \"phases\": \"ABCN\", \"nominal_voltage\": \"120\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:343\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.159692Ohm/km\", \"name\": \"oh_397_ACSR_TW\", \"geometric_mean_radius\": \"0.731520cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:344\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2ALXLPECN35\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:345\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1722\", \"primary_voltage\": \"12470.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.00667 Ohm\", \"shunt_impedance\": \"318.750+275.669j\", \"reactance\": \"0.03333 Ohm\", \"powerB_rating\": \"15.0 kVA\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:346\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3101\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.01000 Ohm\", \"shunt_impedance\": \"318.750+334.621j\", \"reactance\": \"0.00667 Ohm\", \"powerB_rating\": \"15.0 kVA\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:347\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_50000_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"500 kVA\", \"power_rating\": \"500 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:348\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2ALXLPECN15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:349\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2_0CUPILCJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:350\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.294592Ohm/km\", \"name\": \"oh_4/0_ARV_7STR\", \"geometric_mean_radius\": \"0.513080cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:351\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0373 ft\", \"conductor_resistance\": \"0.0263 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.118 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"608 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.108 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750ALTRXLPEJ3AC15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:352\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"substation_transf__conf\", \"primary_voltage\": \"57735.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"13800.0 V\", \"connect_type\": \"DELTA_GWYE\", \"impedance\": \"0.051+0.1230j\", \"power_rating\": \"20000 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:353\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_1000_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"10 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:354\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_25_23_9_13_8_kV_YYB\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.018+0.018j\", \"power_rating\": \"25 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:355\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0105 ft\", \"conductor_resistance\": \"0.1189 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.573 in\", \"neutral_strands\": \"8\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.563 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_CUSTOMER_WIRE\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:356\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_500ALTRXLPEJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:357\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_4500_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"45 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:358\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0088 ft\", \"conductor_resistance\": \"1.38336 ohm/kft\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"0.00 Ohm/mile\", \"neutral_gmr\": \"0.0348162687755351 ft\", \"outer_diameter\": \"1.09 in\", \"neutral_strands\": \"6.0\", \"neutral_resistance\": \"13.5696 ohm/kft\", \"rating.summer.continuous\": \"112.0 A\", \"neutral_diameter\": \"0.0641 in\", \"conductor_diameter\": \"0.292 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"Conc_2_AL_1\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:359\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"25.0 kVA\", \"name\": \"R1_12_47_1_3117\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00600 Ohm\", \"shunt_impedance\": \"339.610+331.380j\", \"reactance\": \"0.00400 Ohm\", \"power_rating\": \"25.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:360\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.939016Ohm/km\", \"name\": \"oh_#2_ARV_7STR\", \"geometric_mean_radius\": \"0.287020cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:361\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_75000\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"750 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:362\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0395 ft\", \"conductor_resistance\": \"0.0141 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.175 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"700 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.165 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1000ALXLPEDWJ25\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:363\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_50000_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"500 kVA\", \"power_rating\": \"500 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:364\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2ALTRXPECN15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:365\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0ALTRXPECN15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:366\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1446\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+308.368j\", \"reactance\": \"0.01 Ohm\", \"powerB_rating\": \"5 kVA\", \"power_rating\": \"5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:367\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_Default_Neutral\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:368\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3091\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.01000 Ohm\", \"shunt_impedance\": \"318.750+332.068j\", \"reactance\": \"0.00667 Ohm\", \"powerA_rating\": \"15.0 kVA\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:369\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0373 ft\", \"conductor_resistance\": \"0.0263 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.118 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"608 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.108 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750CUTRXLPEJD35\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:370\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.100662Ohm/km\", \"name\": \"oh_400_CU\", \"geometric_mean_radius\": \"0.697738cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:371\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2CUPILC315\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:372\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1450\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00133 Ohm\", \"shunt_impedance\": \"522.135+576.886j\", \"reactance\": \"0.00089 Ohm\", \"powerB_rating\": \"112.5 kVA\", \"power_rating\": \"112.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:373\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3087\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00600 Ohm\", \"shunt_impedance\": \"339.610+326.493j\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"25.0 kVA\", \"power_rating\": \"25.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:374\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_500CUPILCD25\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:375\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line\", \"name\": \"overhead_line\", \"phases\": \"BCN\", \"from\": \"NULL\", \"to\": \"NULL\", \"length\": \"20\", \"configuration\": \"NULL\"}}, \"geometry\": {\"coordinates\": [[0, 0], [0, 0]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:376\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.301837Ohm/km\", \"name\": \"oh_4/0_TPX\", \"geometric_mean_radius\": \"0.480568cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:377\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.234319Ohm/km\", \"name\": \"oh_266_ACSR_26/7\", \"geometric_mean_radius\": \"0.661416cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:378\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2000CUPILCJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:379\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750CUXLPE15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:380\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_1500_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"15 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:381\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1451\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"308.320+313.794j\", \"reactance\": \"0.01 Ohm\", \"powerB_rating\": \"10.0 kVA\", \"power_rating\": \"10.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:382\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3086\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00240 Ohm\", \"shunt_impedance\": \"417.835+411.761j\", \"reactance\": \"0.00160 Ohm\", \"powerA_rating\": \"62.5 kVA\", \"power_rating\": \"62.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:383\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_15_23_9_13_8_kV_YYB\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.018+0.018j\", \"power_rating\": \"15 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:384\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2_0CUPILCD15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:385\", \"componentType\": \"gridlabd\", \"treeProps\": {\"phases\": \"ABCN\", \"name\": \"windturb2\", \"parent\": \"three_phase_meter\", \"Gen_status\": \"ONLINE\", \"Turbine_Model\": \"GE_25MW\", \"object\": \"windturb_dg\", \"Gen_mode\": \"CONSTANTP\", \"Gen_type\": \"SYNCHRONOUS\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:386\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1447\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00150 Ohm\", \"shunt_impedance\": \"496.060+536.117j\", \"reactance\": \"0.00100 Ohm\", \"powerB_rating\": \"100.0 kVA\", \"power_rating\": \"100.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:387\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3090\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+301.925j\", \"reactance\": \"0.01 Ohm\", \"powerA_rating\": \"5 kVA\", \"power_rating\": \"5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:388\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALXLPECN15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:389\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.021 ft\", \"conductor_resistance\": \"0.063 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.676 in\", \"neutral_strands\": \"8\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"461 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.666 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_397ACSR30X7\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:390\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_2000_23_9_13_8_kV_YYT_0277\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"277.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.0168+0.0504j\", \"power_rating\": \"2000 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:391\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4CUPECN15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:392\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.587196Ohm/km\", \"name\": \"oh_2_WPCU\", \"geometric_mean_radius\": \"0.254762cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:393\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"1.050198Ohm/km\", \"name\": \"oh_2_WPAL\", \"geometric_mean_radius\": \"0.127508cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:394\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"5 kVA\", \"name\": \"R1_12_47_1_3116\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+262.244j\", \"reactance\": \"0.01 Ohm\", \"power_rating\": \"5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:395\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.121789Ohm/km\", \"name\": \"oh_DEFAULT\", \"geometric_mean_radius\": \"0.883920cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:396\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_336AACHC19\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:397\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750CUXLPEJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:398\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.146954Ohm/km\", \"name\": \"oh_500_WPAL\", \"geometric_mean_radius\": \"0.989330cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:399\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_500CURRUG\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:400\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2ALPECNJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:401\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.114332Ohm/km\", \"name\": \"oh_1/0_TPX\", \"geometric_mean_radius\": \"0.347980cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:402\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"1000.0 kVA\", \"name\": \"GC_12_47_1\", \"primary_voltage\": \"12470.000 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"WYE_WYE\", \"resistance\": \"0.00003 Ohm\", \"shunt_impedance\": \"6545.460+6655.949j\", \"reactance\": \"0.00017 Ohm\", \"powerB_rating\": \"1000.0 kVA\", \"powerA_rating\": \"1000.0 kVA\", \"power_rating\": \"3000.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:403\", \"componentType\": \"gridlabd\", \"treeProps\": {\"phases\": \"AS\", \"object\": \"triplex_meter\", \"nominal_voltage\": \"240\", \"name\": \"split_phase_meter\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:404\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0395 ft\", \"conductor_resistance\": \"0.0141 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0 ft\", \"outer_diameter\": \"1.175 in\", \"neutral_strands\": \"0\", \"neutral_resistance\": \"0 ohm/kft\", \"rating.summer.continuous\": \"725 A\", \"neutral_diameter\": \"0 in\", \"conductor_diameter\": \"1.165 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1000ALTRXPELCJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:405\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2CURRUG\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:406\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3100\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+273.106j\", \"reactance\": \"0.01 Ohm\", \"powerB_rating\": \"5.0 kVA\", \"power_rating\": \"5.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:407\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.530030Ohm/km\", \"name\": \"oh_2/0_ACSR_TW\", \"geometric_mean_radius\": \"0.155448cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:408\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1000CUXLPEJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:409\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_150_23_9_13_8_kV_YYT\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"150 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:410\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.062992Ohm/km\", \"name\": \"oh_777_CU\", \"geometric_mean_radius\": \"0.987552cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:411\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1723\", \"primary_voltage\": \"12470.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.00200 Ohm\", \"shunt_impedance\": \"391.760+406.028j\", \"reactance\": \"0.01000 Ohm\", \"powerB_rating\": \"50.0 kVA\", \"power_rating\": \"50.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:412\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2_0CUPILCJ3D15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:413\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.134216Ohm/km\", \"name\": \"oh_477_AAC\", \"geometric_mean_radius\": \"0.519069cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:414\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2_0ALXLPE15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:415\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_6CUPILC10\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:416\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_30000\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"300 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:417\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_400CUPILCD15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:418\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"underground_line\", \"name\": \"NULL\", \"phases\": \"ABCN\", \"from\": \"NULL\", \"to\": \"NULL\", \"length\": \"100\", \"configuration\": \"NULL\"}}, \"geometry\": {\"coordinates\": [[0, 0], [0, 0]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:419\", \"componentType\": \"gridlabd\", \"treeProps\": {\"glass_type\": \"1\", \"auxiliary_system_type\": \"ELECTRIC\", \"cooling_COP\": \"3.0\", \"hvac_breaker_rating\": \"1000\", \"cooling_system_type\": \"ELECTRIC\", \"total_thermal_mass_per_floor_area\": \"2.5\", \"auxiliary_strategy\": \"DEADBAND\", \"air_temperature\": \"68\", \"heating_COP\": \"2.5\", \"motor_efficiency\": \"AVERAGE\", \"heating_system_type\": \"HEAT_PUMP\", \"Rwall\": \"11.0\", \"glazing_treatment\": \"1\", \"Rdoors\": \"3\", \"glazing_layers\": \"2\", \"window_frame\": \"1\", \"parent\": \"null\", \"floor_area\": \"2209\", \"object\": \"house\", \"number_of_stories\": \"1\", \"mass_temperature\": \"68\", \"name\": \"R1_SingleFamilyHome_1940-1949\", \"Rfloor\": \"12.0\", \"airchange_per_hour\": \"0.75\", \"Rroof\": \"19.0\", \"ceiling_height\": \"8.0\", \"breaker_amps\": \"1000\", \"over_sizing_factor\": \"0.1\", \"motor_model\": \"BASIC\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:420\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_100_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"1 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:421\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"25.0 kVA\", \"name\": \"R1_12_47_1_3120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00600 Ohm\", \"shunt_impedance\": \"339.610+360.851j\", \"reactance\": \"0.00400 Ohm\", \"power_rating\": \"25.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:422\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_5_23_9_13_8_kV_YY1\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120.0 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"impedance\": \"0.018+0.018j\", \"power_rating\": \"5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:423\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2_0CUB7\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:424\", \"componentType\": \"gridlabd\", \"treeProps\": {\"discharge_off_threshold\": \"7.5 kW\", \"phases\": \"AS\", \"four_quadrant_control_mode\": \"LOAD_FOLLOWING\", \"name\": \"load_following_inv\", \"parent\": \"split_phase_meter\", \"discharge_lockout_time\": \"60s\", \"inverter_type\": \"FOUR_QUADRANT\", \"object\": \"inverter\", \"sense_object\": \"triptransformer\", \"max_charge_rate\": \"0.80 kW\", \"charge_off_threshold\": \"7.0 kW\", \"rated_power\": \"3000.0\", \"charge_lockout_time\": \"60s\", \"max_discharge_rate\": \"1.0 kW\", \"inverter_efficiency\": \"0.87\", \"discharge_on_threshold\": \"9.0 kW\", \"charge_on_threshold\": \"5.0 kW\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:425\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_500CUKERD5\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:426\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"8\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_Unknown\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:427\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_2500\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"25 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:428\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.086371Ohm/km\", \"name\": \"oh_750_AAC\", \"geometric_mean_radius\": \"0.972640cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:429\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"8.463073Ohm/km\", \"name\": \"oh_14_CU\", \"geometric_mean_radius\": \"0.129885cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:430\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_400CUPILCJ3D15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:431\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALXLPECN35\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:432\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0373 ft\", \"conductor_resistance\": \"0.0263 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.118 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"608 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.108 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750ALTRXLPE3AC15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:433\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_30000_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"300 kVA\", \"power_rating\": \"300 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:434\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"triplex_load\", \"name\": \"S1808-19-003_A\", \"nominal_voltage\": \"120\", \"phases\": \"AS\", \"base_power_12\": \"3000\", \"impedance_fraction_12\": \"0.5\", \"impedance_pf_12\": \"0.9\", \"current_fraction_12\": \"0.0\", \"current_pf_12\": \"0.9\", \"power_fraction_12\": \"0.5\", \"power_pf_12\": \"0.9\", \"parent\": \"NULL\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:435\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1719\", \"primary_voltage\": \"12470.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.00200 Ohm\", \"shunt_impedance\": \"391.760+389.126j\", \"reactance\": \"0.01000 Ohm\", \"powerA_rating\": \"50.0 kVA\", \"power_rating\": \"50.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:436\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.599002Ohm/km\", \"name\": \"oh_#2_CU_7STR\", \"geometric_mean_radius\": \"0.269240cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:437\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_22500_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"225 kVA\", \"power_rating\": \"225 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:438\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.932057Ohm/km\", \"name\": \"oh_4_CU\", \"geometric_mean_radius\": \"0.202184cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:439\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1430\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00120 Ohm\", \"shunt_impedance\": \"548.210+538.236j\", \"reactance\": \"0.00080 Ohm\", \"powerA_rating\": \"125.0 kVA\", \"power_rating\": \"125.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:440\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.175853Ohm/km\", \"name\": \"oh_397_AAC_TREEWIRE\", \"geometric_mean_radius\": \"0.731520cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:441\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_100000\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"1000 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:442\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_22500_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"225 kVA\", \"power_rating\": \"225 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:443\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0395 ft\", \"conductor_resistance\": \"0.0141 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.175 in\", \"neutral_strands\": \"9\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"725 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.165 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1000\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:444\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1426\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00600 Ohm\", \"shunt_impedance\": \"339.610+288.130j\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"25.0 kVA\", \"power_rating\": \"25.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:445\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"transformer\", \"name\": \"transformer\", \"phases\": \"ABCN\", \"from\": \"NULL\", \"to\": \"NULL\", \"configuration\": \"NULL\"}}, \"geometry\": {\"coordinates\": [[0, 0], [0, 0]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:446\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"75.0 kVA\", \"name\": \"R1_12_47_1_3730\", \"primary_voltage\": \"12500.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.00133 Ohm\", \"shunt_impedance\": \"443.910+424.448j\", \"reactance\": \"0.00667 Ohm\", \"power_rating\": \"75.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:447\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2_0CUPILCD35\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:448\", \"componentType\": \"gridlabd\", \"treeProps\": {\"c_2\": \"-0.00003587\", \"phases\": \"AS\", \"rated_power\": \"3000\", \"name\": \"pf_inv_generic_multipoint\", \"parent\": \"split_phase_meter\", \"c_0\": \"-0.00001009\", \"use_multipoint_efficiency\": \"true\", \"inverter_type\": \"FOUR_QUADRANT\", \"power_factor\": \"0.95\", \"object\": \"inverter\", \"inverter_manufacturer\": \"NONE\", \"minimum_dc_power\": \"27.9\", \"maximum_dc_voltage\": \"277\", \"c_1\": \"-0.00001367\", \"maximum_dc_power\": \"3000\", \"c_3\": \"-0.00342100\", \"four_quadrant_control_mode\": \"CONSTANT_PF\", \"inverter_efficiency\": \"0.99\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:449\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_6CUPELC5\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:450\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3107\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00400 Ohm\", \"shunt_impedance\": \"365.685+385.602j\", \"reactance\": \"0.00267 Ohm\", \"powerB_rating\": \"37.5 kVA\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:451\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0105 ft\", \"conductor_resistance\": \"0.1189 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.573 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.563 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0AL15KVCNJ\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:452\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"AG_1000CUEPR\", \"conductor_resistance\": \"0.088 ohm/kft\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"0.0000 Ohm/mile\", \"neutral_gmr\": \"0.0037 ft\", \"outer_diameter\": \"1.6600 in\", \"neutral_strands\": \"26.0000\", \"neutral_resistance\": \"4.6758 ohm/kft\", \"neutral_diameter\": \"0.1144 in\", \"conductor_diameter\": \"1.117 in\", \"shield_gmr\": \"0.0000 ft\", \"conductor_gmr\": \"0.0393 ft\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:453\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_30000_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"300 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:454\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_2CUPILCJ3D15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:455\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"1.497318Ohm/km\", \"name\": \"oh_4_AAAC\", \"geometric_mean_radius\": \"0.213360cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:456\", \"componentType\": \"gridlabd\", \"treeProps\": {\"glass_type\": \"2\", \"auxiliary_system_type\": \"ELECTRIC\", \"cooling_COP\": \"3.5\", \"hvac_breaker_rating\": \"1000\", \"cooling_system_type\": \"ELECTRIC\", \"total_thermal_mass_per_floor_area\": \"2.5\", \"auxiliary_strategy\": \"DEADBAND\", \"air_temperature\": \"68\", \"heating_COP\": \"2.2\", \"motor_efficiency\": \"AVERAGE\", \"heating_system_type\": \"HEAT_PUMP\", \"Rwall\": \"11.7\", \"glazing_treatment\": \"1\", \"Rdoors\": \"3\", \"glazing_layers\": \"2\", \"window_frame\": \"2\", \"parent\": \"null\", \"floor_area\": \"1054\", \"object\": \"house\", \"number_of_stories\": \"1\", \"mass_temperature\": \"68\", \"name\": \"R1_MobileHome_1990-2005\", \"Rfloor\": \"18.1\", \"airchange_per_hour\": \"0.75\", \"Rroof\": \"24.1\", \"ceiling_height\": \"8.0\", \"breaker_amps\": \"1000\", \"over_sizing_factor\": \"0.1\", \"motor_model\": \"BASIC\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:457\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0105 ft\", \"conductor_resistance\": \"0.1189 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.573 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.563 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0ALTRXLPE15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:458\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"8\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_Default\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:459\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3111\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"308.320+342.457j\", \"reactance\": \"0.01 Ohm\", \"powerB_rating\": \"10.0 kVA\", \"power_rating\": \"10.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:460\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_75_23_9_13_8_kV_YYT_120\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120.0 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"75 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:461\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.159692Ohm/km\", \"name\": \"oh_397_ACSR_18/1\", \"geometric_mean_radius\": \"0.731520cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:462\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_25_23_9_13_8_kV_YY1_120\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120.0 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"impedance\": \"0.018+0.018j\", \"power_rating\": \"25 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:463\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_3750_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:464\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1417\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00400 Ohm\", \"shunt_impedance\": \"365.685+340.474j\", \"reactance\": \"0.00267 Ohm\", \"powerA_rating\": \"37.5 kVA\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:465\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.469197Ohm/km\", \"name\": \"oh_2/0_ARV_7STR\", \"geometric_mean_radius\": \"0.406400cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:466\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"8\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_750CUEPRJD15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:467\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.603674Ohm/km\", \"name\": \"oh_1/0_3WCS\", \"geometric_mean_radius\": \"0.347980cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:468\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1440\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"308.320+304.884j\", \"reactance\": \"0.01 Ohm\", \"powerB_rating\": \"10.0 kVA\", \"power_rating\": \"10.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:469\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3097\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"308.320+321.700j\", \"reactance\": \"0.01 Ohm\", \"powerA_rating\": \"10.0 kVA\", \"power_rating\": \"10.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:470\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_50_23_9_13_8_kV_YY1\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"50 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:471\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"15.0 kVA\", \"name\": \"R1_12_47_2_1456\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.01000 Ohm\", \"shunt_impedance\": \"318.750+279.088j\", \"reactance\": \"0.00667 Ohm\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:472\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_19FOUG\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:473\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0TRXLPELCJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:474\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_10000_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"100 kVA\", \"power_rating\": \"100 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:475\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"0.0 kVA\", \"name\": \"R1_12_47_1_3740\", \"primary_voltage\": \"12500.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"WYE_WYE\", \"resistance\": \"0.00667 Ohm\", \"shunt_impedance\": \"318.750+365.165j\", \"reactance\": \"0.03333 Ohm\", \"powerB_rating\": \"15.0 kVA\", \"powerA_rating\": \"0.0 kVA\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:476\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.301837Ohm/km\", \"name\": \"oh_4/0_ALQPX\", \"geometric_mean_radius\": \"0.480568cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:477\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.298880Ohm/km\", \"name\": \"oh_2/0_CU_7STR\", \"geometric_mean_radius\": \"0.381000cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:478\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_75_23_9_13_8_kV_YYB\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"75 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:479\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_50000\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"500 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:480\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"triplex_line_configuration\", \"name\": \"triplex_line_configuration\", \"diameter\": \"0.368\", \"conductor_1\": \"tlc\", \"conductor_2\": \"tlc\", \"conductor_N\": \"tlc\", \"insulation_thickness\": \"0.08\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:481\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0105 ft\", \"conductor_resistance\": \"0.1189 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.573 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.563 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0ALXLPECN15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:482\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3737\", \"primary_voltage\": \"12500.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.00267 Ohm\", \"shunt_impedance\": \"365.685+350.475j\", \"reactance\": \"0.01333 Ohm\", \"powerA_rating\": \"37.5 kVA\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:483\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.234257Ohm/km\", \"name\": \"oh_266_ACSR\", \"geometric_mean_radius\": \"0.661416cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:484\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.159692Ohm/km\", \"name\": \"oh_250_CU_12STR\", \"geometric_mean_radius\": \"0.579120cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:485\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0105 ft\", \"conductor_resistance\": \"0.1189 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.573 in\", \"neutral_strands\": \"9\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.563 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:486\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_30_23_9_13_8_kV_YYT\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.018+0.018j\", \"power_rating\": \"30 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:487\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1421\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00100 Ohm\", \"shunt_impedance\": \"600.360+543.819j\", \"reactance\": \"0.00067 Ohm\", \"powerA_rating\": \"150.0 kVA\", \"power_rating\": \"150.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:488\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0395 ft\", \"conductor_resistance\": \"0.0141 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.175 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"700 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.165 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1000ALXLPEDWJ15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:489\", \"componentType\": \"gridlabd\", \"treeProps\": {\"tank_volume\": \"50\", \"parent\": \"NULL\", \"tank_setpoint\": \"133\", \"object\": \"waterheater\", \"name\": \"waterheater\", \"thermostat_deadband\": \"4.3\", \"heating_element_capacity\": \"5\", \"demand\": \"water6*1\", \"temperature\": \"135\", \"tank_UA\": \"2.7\", \"location\": \"INSIDE\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:490\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1437\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00400 Ohm\", \"shunt_impedance\": \"365.685+356.066j\", \"reactance\": \"0.00267 Ohm\", \"powerB_rating\": \"37.5 kVA\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:491\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"triplex_line_conductor\", \"name\": \"triplex_line_conductor\", \"geometric_mean_radius\": \"0.01111\", \"resistance\": \"0.97\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:492\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALTRXLPELCJAC15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:493\", \"componentType\": \"gridlabd\", \"treeProps\": {\"glass_type\": \"1\", \"auxiliary_system_type\": \"ELECTRIC\", \"cooling_COP\": \"2.8\", \"hvac_breaker_rating\": \"1000\", \"cooling_system_type\": \"ELECTRIC\", \"total_thermal_mass_per_floor_area\": \"2.5\", \"auxiliary_strategy\": \"DEADBAND\", \"air_temperature\": \"68\", \"heating_COP\": \"1.9\", \"motor_efficiency\": \"AVERAGE\", \"heating_system_type\": \"HEAT_PUMP\", \"Rwall\": \"11.7\", \"glazing_treatment\": \"1\", \"Rdoors\": \"2.2\", \"glazing_layers\": \"1\", \"window_frame\": \"1\", \"parent\": \"null\", \"floor_area\": \"820\", \"object\": \"house\", \"number_of_stories\": \"1\", \"mass_temperature\": \"68\", \"name\": \"R1_Apartment_Pre-1960\", \"Rfloor\": \"9.4\", \"airchange_per_hour\": \"0.75\", \"Rroof\": \"13.4\", \"ceiling_height\": \"8.0\", \"breaker_amps\": \"1000\", \"over_sizing_factor\": \"0.1\", \"motor_model\": \"BASIC\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:494\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_500CUPILCD15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:495\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_3750_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"37.5 kVA\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:496\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"30.0 kVA\", \"name\": \"R1_12_47_2_1460\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00500 Ohm\", \"shunt_impedance\": \"350.040+375.918j\", \"reactance\": \"0.00333 Ohm\", \"power_rating\": \"30.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:497\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"tape_4_0\", \"conductor_resistance\": \"0.484 ohm/mile\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"3.6914 Ohm/mile\", \"neutral_gmr\": \"0.01579 ft\", \"outer_diameter\": \"1.21 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"0.303 ohm/mile\", \"neutral_diameter\": \"0.522 in\", \"conductor_diameter\": \"0.522 in\", \"shield_gmr\": \"0.0423 ft\", \"conductor_gmr\": \"0.0158 ft\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:498\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"load\", \"name\": \"load\", \"parent\": \"NULL\", \"phases\": \"ABCN\", \"voltage_A\": \"7200+0.0j\", \"voltage_B\": \"-3600-6235j\", \"voltage_C\": \"-3600+6235j\", \"constant_power_A\": \"69300+43000j\", \"constant_power_B\": \"69300+43000j\", \"constant_power_C\": \"69300+43000j\", \"nominal_voltage\": \"7200\", \"load_class\": \"R\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:499\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0077 ft\", \"conductor_resistance\": \"0.1765 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.457 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"245 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.447 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0CURR15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:500\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.080778Ohm/km\", \"name\": \"oh_500_CU\", \"geometric_mean_radius\": \"0.792734cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:501\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"1.010411Ohm/km\", \"name\": \"oh_#2_ACSR_6/1\", \"geometric_mean_radius\": \"0.127000cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:502\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"1.485083Ohm/km\", \"name\": \"oh_#6_CU_1STR\", \"geometric_mean_radius\": \"0.160274cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:503\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_4500_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"45 kVA\", \"power_rating\": \"45 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:504\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"5.0 kVA\", \"name\": \"R1_12_47_1_3131\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"297.890+273.681j\", \"reactance\": \"0.01 Ohm\", \"power_rating\": \"5.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:505\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"tape_500\", \"conductor_resistance\": \"0.206 ohm/mile\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"2.8963 Ohm/mile\", \"neutral_gmr\": \"0.026 ft\", \"outer_diameter\": \"1.49 in\", \"neutral_strands\": \"37\", \"neutral_resistance\": \"0.1303 ohm/mile\", \"neutral_diameter\": \"0.814 in\", \"conductor_diameter\": \"0.813 in\", \"shield_gmr\": \"0.0540 ft\", \"conductor_gmr\": \"0.026 ft\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:506\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.113090Ohm/km\", \"name\": \"oh_556_ACSR_26/7\", \"geometric_mean_radius\": \"0.954024cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:507\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_1500_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"15 kVA\", \"power_rating\": \"15 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:508\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_2500_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"25 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:509\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_5000\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"50 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:510\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"50.0 kVA\", \"name\": \"R1_12_47_1_3127\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00300 Ohm\", \"shunt_impedance\": \"391.760+417.754j\", \"reactance\": \"0.00200 Ohm\", \"power_rating\": \"50.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:511\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.349770Ohm/km\", \"name\": \"oh_4/0_ACSR_6/1\", \"geometric_mean_radius\": \"0.248920cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:512\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_150_23_9_13_8_kV_YY1\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120.0 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"150 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:513\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.396435Ohm/km\", \"name\": \"oh_3/0_ACSR\", \"geometric_mean_radius\": \"0.182880cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:514\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"1.010163Ohm/km\", \"name\": \"oh_2_ACSR\", \"geometric_mean_radius\": \"0.127508cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:515\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"1.485077Ohm/km\", \"name\": \"oh_6_CU\", \"geometric_mean_radius\": \"0.160274cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:516\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0325 ft\", \"conductor_resistance\": \"0.0183 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"1.102 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"630 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"1.092 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1000CUPILCJD15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:517\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"0.0 kVA\", \"name\": \"R1_12_47_2_1724\", \"primary_voltage\": \"12470.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"WYE_WYE\", \"resistance\": \"0.00333 Ohm\", \"shunt_impedance\": \"350.040+334.211j\", \"reactance\": \"0.01667 Ohm\", \"powerB_rating\": \"15.0 kVA\", \"powerA_rating\": \"15.0 kVA\", \"power_rating\": \"30.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:518\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_3750\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:519\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_500_23_9_13_8_kV_YYT\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.0168+0.0504j\", \"power_rating\": \"500 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:520\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"node\", \"name\": \"node\", \"phases\": \"ABCN\", \"nominal_voltage\": \"2401.7771\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:521\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_750_23_9_13_8_kV_YYT_0277\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"277.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.006+0.018j\", \"power_rating\": \"750 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:522\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1725\", \"primary_voltage\": \"12470.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.00667 Ohm\", \"shunt_impedance\": \"318.750+343.720j\", \"reactance\": \"0.03333 Ohm\", \"powerA_rating\": \"15.0 kVA\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:523\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_1500\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"15 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:524\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"2.460629Ohm/km\", \"name\": \"oh_6_AM\", \"geometric_mean_radius\": \"0.120142cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:525\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.646847Ohm/km\", \"name\": \"oh_1/0_ACSR_TW\", \"geometric_mean_radius\": \"0.204544cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:526\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"235 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALTRXLPECN15\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:527\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"AG_750CN15\", \"conductor_resistance\": \"0.0947 ohm/kft\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"0.0000 Ohm/mile\", \"neutral_gmr\": \"0.0033 ft\", \"outer_diameter\": \"1.4830 in\", \"neutral_strands\": \"25.0000\", \"neutral_resistance\": \"5.9026 ohm/kft\", \"neutral_diameter\": \"0.1019 in\", \"conductor_diameter\": \"0.963 in\", \"shield_gmr\": \"0.0000 ft\", \"conductor_gmr\": \"0.0308 ft\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:528\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"10.0 kVA\", \"name\": \"R1_12_47_1_3126\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"308.320+337.156j\", \"reactance\": \"0.01 Ohm\", \"power_rating\": \"10.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:529\", \"componentType\": \"gridlabd\", \"treeProps\": {\"phases\": \"A\", \"object\": \"meter\", \"nominal_voltage\": \"7200\", \"name\": \"single_phase_meter\", \"parent\": \"null\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:530\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"30.0 kVA\", \"name\": \"R1_12_47_1_3130\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00500 Ohm\", \"shunt_impedance\": \"350.040+348.261j\", \"reactance\": \"0.00333 Ohm\", \"power_rating\": \"30.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:531\", \"componentType\": \"gridlabd\", \"treeProps\": {\"Q1\": \"0.7\", \"phases\": \"ABC\", \"four_quadrant_control_mode\": \"VOLT_VAR\", \"name\": \"volt_var_inv\", \"parent\": \"three_phase_meter\", \"V1\": \"0.90\", \"generator_status\": \"ONLINE\", \"inverter_type\": \"FOUR_QUADRANT\", \"object\": \"inverter\", \"V3\": \"1.05\", \"generator_mode\": \"SUPPLY_DRIVEN\", \"V2\": \"0.95\", \"rated_power\": \"70 kVA\", \"V4\": \"1.10\", \"Q2\": \"0.0\", \"volt_var_control_lockout\": \"60s\", \"V_base\": \"7200\", \"inverter_efficiency\": \"0.95\", \"Q3\": \"0.0\", \"Q4\": \"-0.8\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:532\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_1_23_9_13_8_kV_YY1\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120.0 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"1 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:533\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0046 ft\", \"conductor_resistance\": \"0.332 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.326 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"165 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.316 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_6CURR\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:534\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.188275Ohm/km\", \"name\": \"oh_4/0_CU_7STR\", \"geometric_mean_radius\": \"0.480060cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:535\", \"componentType\": \"gridlabd\", \"treeProps\": {\"glass_type\": \"1\", \"auxiliary_system_type\": \"ELECTRIC\", \"cooling_COP\": \"3.4\", \"hvac_breaker_rating\": \"1000\", \"cooling_system_type\": \"ELECTRIC\", \"total_thermal_mass_per_floor_area\": \"2.5\", \"auxiliary_strategy\": \"DEADBAND\", \"air_temperature\": \"68\", \"heating_COP\": \"2.8\", \"motor_efficiency\": \"AVERAGE\", \"heating_system_type\": \"HEAT_PUMP\", \"Rwall\": \"17.0\", \"glazing_treatment\": \"1\", \"Rdoors\": \"3\", \"glazing_layers\": \"2\", \"window_frame\": \"2\", \"parent\": \"null\", \"floor_area\": \"2209\", \"object\": \"house\", \"number_of_stories\": \"1\", \"mass_temperature\": \"68\", \"name\": \"R1_SingleFamilyHome_1960-1969\", \"Rfloor\": \"19.0\", \"airchange_per_hour\": \"0.5\", \"Rroof\": \"30.0\", \"ceiling_height\": \"8.0\", \"breaker_amps\": \"1000\", \"over_sizing_factor\": \"0.1\", \"motor_model\": \"BASIC\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:536\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_2500_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"25 kVA\", \"power_rating\": \"25 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:537\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.944298Ohm/km\", \"name\": \"oh_2_AAAC\", \"geometric_mean_radius\": \"0.269240cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:538\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.01142 ft\", \"conductor_resistance\": \"0.88704 ohm/kft\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"0.00 Ohm/mile\", \"neutral_gmr\": \"0.0489686771417213 ft\", \"outer_diameter\": \"1.27 in\", \"neutral_strands\": \"16.0\", \"neutral_resistance\": \"13.86528 ohm/kft\", \"rating.summer.continuous\": \"142.0 A\", \"neutral_diameter\": \"0.0641\", \"conductor_diameter\": \"0.362 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"Conc_1_0_AAC_2\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:539\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"10.0 kVA\", \"name\": \"R1_12_47_2_1461\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.015 Ohm\", \"shunt_impedance\": \"308.320+244.570j\", \"reactance\": \"0.01 Ohm\", \"power_rating\": \"10.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:540\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_10_23_9_13_8_kV_YY1\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"240.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.018+0.018j\", \"power_rating\": \"10 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:541\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0215 ft\", \"conductor_resistance\": \"0.0605 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.689 in\", \"neutral_strands\": \"9\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"421 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_350\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:542\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.236121Ohm/km\", \"name\": \"oh_266_ARV_19STR\", \"geometric_mean_radius\": \"0.607314cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:543\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_7500_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"75 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:544\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1436\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.01000 Ohm\", \"shunt_impedance\": \"318.750+330.288j\", \"reactance\": \"0.00667 Ohm\", \"powerB_rating\": \"15.0 kVA\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:545\", \"componentType\": \"gridlabd\", \"treeProps\": {\"glass_type\": \"1\", \"auxiliary_system_type\": \"ELECTRIC\", \"cooling_COP\": \"2.8\", \"hvac_breaker_rating\": \"1000\", \"cooling_system_type\": \"ELECTRIC\", \"total_thermal_mass_per_floor_area\": \"2.5\", \"auxiliary_strategy\": \"DEADBAND\", \"air_temperature\": \"68\", \"heating_COP\": \"1.9\", \"motor_efficiency\": \"AVERAGE\", \"heating_system_type\": \"HEAT_PUMP\", \"Rwall\": \"9.2\", \"glazing_treatment\": \"1\", \"Rdoors\": \"2.2\", \"glazing_layers\": \"1\", \"window_frame\": \"1\", \"parent\": \"null\", \"floor_area\": \"1054\", \"object\": \"house\", \"number_of_stories\": \"1\", \"mass_temperature\": \"68\", \"name\": \"R1_MobileHome_1960-1989\", \"Rfloor\": \"11.7\", \"airchange_per_hour\": \"0.75\", \"Rroof\": \"13.4\", \"ceiling_height\": \"8.0\", \"breaker_amps\": \"1000\", \"over_sizing_factor\": \"0.1\", \"motor_model\": \"BASIC\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:546\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_50000_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"500 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:547\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_50_23_9_13_8_kV_YYB_120\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120.0 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"100 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:548\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"tape_350\", \"conductor_resistance\": \"0.294 ohm/mile\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"3.1908 Ohm/mile\", \"neutral_gmr\": \"0.0214 ft\", \"outer_diameter\": \"1.37 in\", \"neutral_strands\": \"19\", \"neutral_resistance\": \"0.1845 ohm/mile\", \"neutral_diameter\": \"0.679 in\", \"conductor_diameter\": \"0.679 in\", \"shield_gmr\": \"0.0490 ft\", \"conductor_gmr\": \"0.0214 ft\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:549\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_15000_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"150 kVA\", \"power_rating\": \"150 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:550\", \"componentType\": \"gridlabd\", \"treeProps\": {\"phases\": \"ABC\", \"object\": \"meter\", \"nominal_voltage\": \"7200\", \"name\": \"three_phase_meter\", \"parent\": \"null\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:551\", \"componentType\": \"gridlabd\", \"treeProps\": {\"phases\": \"ABCN\", \"name\": \"rect1\", \"parent\": \"simple_inverter\", \"object\": \"rectifier\", \"rectifier_type\": \"SIX_PULSE\", \"generator_mode\": \"SUPPLY_DRIVEN\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:552\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1420\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00600 Ohm\", \"shunt_impedance\": \"339.610+336.934j\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"25.0 kVA\", \"power_rating\": \"25.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:553\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"50.0 kVA\", \"name\": \"R1_12_47_1_3736\", \"primary_voltage\": \"12500.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"WYE_WYE\", \"resistance\": \"0.00067 Ohm\", \"shunt_impedance\": \"600.360+500.361j\", \"reactance\": \"0.00333 Ohm\", \"powerB_rating\": \"50.0 kVA\", \"powerA_rating\": \"50.0 kVA\", \"power_rating\": \"150.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:554\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0071 ft\", \"conductor_resistance\": \"0.2169 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.408 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"221 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.398 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_1_0ALXLPECN25\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:555\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_1000_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"10 kVA\", \"power_rating\": \"10 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:556\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_2500_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"25 kVA\", \"power_rating\": \"25 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:557\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0105 ft\", \"conductor_resistance\": \"0.1189 ohm/kft\", \"object\": \"underground_line_conductor\", \"neutral_gmr\": \"0.0132 ft\", \"outer_diameter\": \"0.573 in\", \"neutral_strands\": \"7\", \"neutral_resistance\": \"2.3057 ohm/kft\", \"rating.summer.continuous\": \"320 A\", \"neutral_diameter\": \"0.0254 in\", \"conductor_diameter\": \"0.563 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"DG_4_0ALRC\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:558\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.157828Ohm/km\", \"name\": \"oh_397_ACSR_26/7\", \"geometric_mean_radius\": \"0.807720cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:559\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_11250_A_120\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"112.5 kVA\", \"power_rating\": \"112.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:560\", \"componentType\": \"gridlabd\", \"treeProps\": {\"phases\": \"AS\", \"rated_power\": \"3000\", \"name\": \"pf_inv_manufacturer_multipoint\", \"parent\": \"split_phase_meter\", \"use_multipoint_efficiency\": \"true\", \"inverter_type\": \"FOUR_QUADRANT\", \"power_factor\": \"0.95\", \"object\": \"inverter\", \"inverter_manufacturer\": \"SMA\", \"four_quadrant_control_mode\": \"CONSTANT_PF\", \"inverter_efficiency\": \"0.87\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:561\", \"componentType\": \"gridlabd\", \"treeProps\": {\"state_of_charge\": \"0.5\", \"name\": \"batt_additional\", \"parent\": \"load_following_inv_pf\", \"round_trip_efficiency\": \"0.95\", \"object\": \"battery\", \"reserve_state_of_charge\": \"0.1\", \"battery_type\": \"LI_ION\", \"generator_mode\": \"SUPPLY_DRIVEN\", \"rated_power\": \"2 kW\", \"battery_capacity\": \"20 kWh\", \"use_internal_battery_model\": \"true\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:562\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"30.0 kVA\", \"name\": \"R1_12_47_1_3741\", \"primary_voltage\": \"12500.000 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"480 V\", \"connect_type\": \"SINGLE_PHASE\", \"resistance\": \"0.00333 Ohm\", \"shunt_impedance\": \"350.040+357.722j\", \"reactance\": \"0.01667 Ohm\", \"power_rating\": \"30.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:563\", \"componentType\": \"gridlabd\", \"treeProps\": {\"powerC_rating\": \"37.5 kVA\", \"name\": \"R1_12_47_2_1457\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00400 Ohm\", \"shunt_impedance\": \"365.685+360.013j\", \"reactance\": \"0.00267 Ohm\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:564\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.133595Ohm/km\", \"name\": \"oh_300_CU\", \"geometric_mean_radius\": \"0.614172cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:565\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_225_23_9_13_8_kV_YYT_120\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.009+0.018j\", \"power_rating\": \"225 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:566\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.042875Ohm/km\", \"name\": \"oh_1000_CU\", \"geometric_mean_radius\": \"1.121921cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:567\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.381335Ohm/km\", \"name\": \"oh_1/0_CU\", \"geometric_mean_radius\": \"0.339598cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:568\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_2_1441\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00500 Ohm\", \"shunt_impedance\": \"350.040+395.403j\", \"reactance\": \"0.00333 Ohm\", \"powerB_rating\": \"30.0 kVA\", \"power_rating\": \"30.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:569\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3096\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00300 Ohm\", \"shunt_impedance\": \"391.760+332.488j\", \"reactance\": \"0.00200 Ohm\", \"powerA_rating\": \"50.0 kVA\", \"power_rating\": \"50.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:570\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"1.572497Ohm/km\", \"name\": \"oh_4_ACSR\", \"geometric_mean_radius\": \"0.133096cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:571\", \"componentType\": \"gridlabd\", \"treeProps\": {\"phases\": \"AS\", \"name\": \"solar_simple\", \"parent\": \"pf_inv\", \"area\": \"323\", \"object\": \"solar\", \"panel_type\": \"SINGLE_CRYSTAL_SILICON\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:572\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"ZIPload\", \"name\": \"ZIPload\", \"parent\": \"NULL\", \"power_fraction\": \"0.013500\", \"current_fraction\": \"0.253400\", \"impedance_fraction\": \"0.733200\", \"base_power\": \"fan1*0.106899\", \"impedance_pf\": \"0.970000\", \"current_pf\": \"0.950000\", \"power_pf\": \"-1.000000\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:573\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3110\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.00300 Ohm\", \"shunt_impedance\": \"391.760+391.541j\", \"reactance\": \"0.00200 Ohm\", \"powerB_rating\": \"50.0 kVA\", \"power_rating\": \"50.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:574\", \"componentType\": \"gridlabd\", \"treeProps\": {\"pf_reg_activate_lockout_time\": \"60\", \"discharge_lockout_time\": \"1\", \"discharge_threshold\": \"4500 kW\", \"charge_lockout_time\": \"1\", \"max_discharge_rate\": \"300 kW\", \"rated_power\": \"150 kW\", \"charge_threshold\": \"4000 kW\", \"max_charge_rate\": \"300 kW\", \"pf_reg_deactivate\": \"0.95\", \"group_max_discharge_rate\": \"1200 kW\", \"four_quadrant_control_mode\": \"GROUP_LOAD_FOLLOWING\", \"group_rated_power\": \"1200 kW\", \"parent\": \"battery_meter_684\", \"generator_status\": \"ONLINE\", \"inverter_type\": \"FOUR_QUADRANT\", \"object\": \"inverter\", \"sense_object\": \"Node630\", \"pf_reg_activate\": \"0.9\", \"pf_reg\": \"INCLUDED\", \"name\": \"battery_inverter_684\", \"generator_mode\": \"CONSTANT_PQ\", \"group_max_charge_rate\": \"1200 kW\", \"inverter_efficiency\": \".95\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:575\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_nonTP_15000\", \"primary_voltage\": \"7200 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.011 Ohm\", \"connect_type\": \"WYE_WYE\", \"reactance\": \"0.02 Ohm\", \"power_rating\": \"150 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:576\", \"componentType\": \"gridlabd\", \"treeProps\": {\"object\": \"overhead_line_conductor\", \"resistance\": \"0.081027Ohm/km\", \"name\": \"oh_500_CU_19STR\", \"geometric_mean_radius\": \"0.779780cm\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:577\", \"componentType\": \"gridlabd\", \"treeProps\": {\"glass_type\": \"2\", \"auxiliary_system_type\": \"ELECTRIC\", \"cooling_COP\": \"3.8\", \"hvac_breaker_rating\": \"1000\", \"cooling_system_type\": \"ELECTRIC\", \"total_thermal_mass_per_floor_area\": \"2.5\", \"auxiliary_strategy\": \"DEADBAND\", \"air_temperature\": \"68\", \"heating_COP\": \"3.0\", \"motor_efficiency\": \"AVERAGE\", \"heating_system_type\": \"HEAT_PUMP\", \"Rwall\": \"22.0\", \"glazing_treatment\": \"1\", \"Rdoors\": \"5\", \"glazing_layers\": \"2\", \"window_frame\": \"2\", \"parent\": \"null\", \"floor_area\": \"2209\", \"object\": \"house\", \"number_of_stories\": \"1\", \"mass_temperature\": \"68\", \"name\": \"R1_SingleFamilyHome_1980-1989\", \"Rfloor\": \"22.0\", \"airchange_per_hour\": \"0.25\", \"Rroof\": \"36.0\", \"ceiling_height\": \"8.0\", \"breaker_amps\": \"1000\", \"over_sizing_factor\": \"0.1\", \"motor_model\": \"BASIC\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:578\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"transformer_configuration_3750_A\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"208 V\", \"resistance\": \"0.00600 Ohm\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"reactance\": \"0.00400 Ohm\", \"powerA_rating\": \"37.5 kVA\", \"power_rating\": \"37.5 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:579\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"substation_transf__conf_3\", \"primary_voltage\": \"57735.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"13800.0 V\", \"connect_type\": \"DELTA_GWYE\", \"impedance\": \"0.051+0.1209j\", \"power_rating\": \"20000 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:580\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"R1_12_47_1_3106\", \"primary_voltage\": \"7200 V\", \"install_type\": \"POLETOP\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"120 V\", \"connect_type\": \"SINGLE_PHASE_CENTER_TAPPED\", \"resistance\": \"0.01000 Ohm\", \"shunt_impedance\": \"318.750+381.753j\", \"reactance\": \"0.00667 Ohm\", \"powerB_rating\": \"15.0 kVA\", \"power_rating\": \"15.0 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:581\", \"componentType\": \"gridlabd\", \"treeProps\": {\"name\": \"DG_2500_23_9_13_8_kV_YYT_0277\", \"primary_voltage\": \"13800.0 V\", \"install_type\": \"PADMOUNT\", \"object\": \"transformer_configuration\", \"secondary_voltage\": \"277.0 V\", \"connect_type\": \"WYE_WYE\", \"impedance\": \"0.006+0.018j\", \"power_rating\": \"2500 kVA\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:582\", \"componentType\": \"gridlabd\", \"treeProps\": {\"conductor_gmr\": \"0.0371 ft\", \"conductor_resistance\": \"0.091872 ohm/kft\", \"object\": \"underground_line_conductor\", \"shield_resistance\": \"0.00 Ohm/mile\", \"neutral_gmr\": \"0.0842565914341201 ft\", \"outer_diameter\": \"2.15 in\", \"neutral_strands\": \"20.0\", \"neutral_resistance\": \"5.3856 ohm/kft\", \"rating.summer.continuous\": \"488.0 A\", \"neutral_diameter\": \"0.1019 in\", \"conductor_diameter\": \"1.152 in\", \"shield_gmr\": \"0.00 ft\", \"name\": \"Conc_1000_AAC_1\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:583\", \"componentType\": \"opendss\", \"treeProps\": {\"object\": \"!CMD\", \"name\": \"clear\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:584\", \"componentType\": \"opendss\", \"treeProps\": {\"object\": \"generator\", \"name\": \"NULL\", \"parent\": \"NULL\", \"phases\": \"3\", \"kv\": \"0.48\", \"pf\": \"1\", \"conn\": \"wye\", \"kw\": \"750\", \"kvar\": \"0\", \"xdp\": \"0.15\", \"h\": \"1.5\", \"d\": \"1.0\", \"!CONNCODE\": \".1.2.3\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:585\", \"componentType\": \"opendss\", \"treeProps\": {\"object\": \"line\", \"name\": \"NULL\", \"from\": \"NULL\", \"to\": \"NULL\", \"!FROCODE\": \".1.2.3\", \"!TOCODE\": \".1.2.3\", \"phases\": \"3\", \"length\": \"2967\", \"units\": \"ft\", \"linecode\": \"ug_3p_type1\"}}, \"geometry\": {\"coordinates\": [[0, 0], [0, 0]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:586\", \"componentType\": \"opendss\", \"treeProps\": {\"object\": \"bus\", \"name\": \"NULL\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:587\", \"componentType\": \"opendss\", \"treeProps\": {\"object\": \"relay\", \"name\": \"NULL\", \"monitoredobj\": \"line.cb_101\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:588\", \"componentType\": \"opendss\", \"treeProps\": {\"object\": \"capacitor\", \"name\": \"NULL\", \"parent\": \"NULL\", \"phases\": \"3\", \"kv\": \"13.80000\", \"kvar\": \"50.00000000\", \"enabled\": \"yes\", \"!CONNCODE\": \".1.2.3\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:589\", \"componentType\": \"opendss\", \"treeProps\": {\"object\": \"regcontrol\", \"name\": \"NULL\", \"parent\": \"NULL\", \"!CONNCODE\": \".1\", \"transformer\": \"sub_regulator_a\", \"winding\": \"2\", \"vreg\": \"123.00000\", \"r\": \"0.00000\", \"x\": \"0.00000\", \"band\": \"2\", \"ptratio\": \"66.395279\", \"vlimit\": \"129.00000\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:590\", \"componentType\": \"opendss\", \"treeProps\": {\"object\": \"loadshape\", \"name\": \"NULL\", \"mult\": \"(0,0,0,0,0,0,0,0.084654201,0.4084613,0.676864065,0.859273011,0.976124644,1,0.934483244,0.778657014,0.531155984,0.209112825,0,0,0,0,0,0,0)\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:591\", \"componentType\": \"opendss\", \"treeProps\": {\"object\": \"vsource.source\", \"name\": \"NULL\", \"bus1\": \"eq_source_bus.1.2.3\", \"phases\": \"3\", \"angle\": \"0.00000\", \"pu\": \"1.00000\", \"basekv\": \"69.00000\", \"r1\": \"4.54263687\", \"x1\": \"10.52743053\", \"r0\": \"7.36552668\", \"x0\": \"24.50463867\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:592\", \"componentType\": \"opendss\", \"treeProps\": {\"object\": \"linecode\", \"name\": \"NULL\", \"nphases\": \"3\", \"units\": \"mi\", \"rmatrix\": \"(0.615927|0.170927,0.615927|0.170927,0.170927,0.615927)\", \"xmatrix\": \"(1.209389|0.433188,1.209389|0.433188,0.433188,1.209389)\"}}, \"geometry\": {\"coordinates\": [null, null], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:593\", \"componentType\": \"opendss\", \"treeProps\": {\"object\": \"energymeter\", \"name\": \"NULL\", \"element\": \"transformer.sub_xfmr\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:594\", \"componentType\": \"opendss\", \"treeProps\": {\"object\": \"pvsystem\", \"name\": \"NULL\", \"parent\": \"NULL\", \"phases\": \"3\", \"kv\": \"13.8\", \"conn\": \"wye\", \"pmpp\": \"110\", \"kva\": \"100\", \"pf\": \"1\", \"balanced\": \"true\", \"limitcurrent\": \"true\", \"vminpu\": \"0.9090909\", \"daily\": \"pvscaling1\", \"!CONNCODE\": \".1.2.3\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:595\", \"componentType\": \"opendss\", \"treeProps\": {\"object\": \"transformer\", \"name\": \"NULL\", \"from\": \"NULL\", \"to\": \"NULL\", \"phases\": \"1\", \"bank\": \"reg1\", \"windings\": \"2\", \"xhl\": \"0.0100000\", \"conns\": \"[wye,wye]\", \"kvs\": \"[7.9677,7.9677]\", \"kvas\": \"[3500,3500]\", \"%rs\": \"[0.00100000,0.00100000\", \"numtaps\": \"32\", \"maxtap\": \"1.1000\", \"mintap\": \"0.9000]\"}}, \"geometry\": {\"coordinates\": [[0, 0], [0, 0]], \"type\": \"LineString\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:596\", \"componentType\": \"opendss\", \"treeProps\": {\"object\": \"load\", \"name\": \"NULL\", \"parent\": \"NULL\", \"phases\": \"3\", \"conn\": \"wye\", \"kv\": \"13.8\", \"kw\": \"15.290000000000001\", \"kvar\": \"3.832035216364534\", \"!CONNCODE\": \".1.2.3.0\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}, {\"type\": \"Feature\", \"properties\": {\"treeKey\": \"component:597\", \"componentType\": \"opendss\", \"treeProps\": {\"object\": \"storage\", \"name\": \"NULL\", \"parent\": \"NULL\", \"phases\": \"3\", \"kv\": \"13.8\", \"kwhstored\": \"200\", \"kwhrated\": \"200\", \"kva\": \"100\", \"kvar\": \"100\", \"%charge\": \"100\", \"%discharge\": \"100\", \"%effcharge\": \"100\", \"%effdischarge\": \"100\", \"%idlingkw\": \"1\", \"%r\": \"0\", \"%x\": \"50\", \"!CONNCODE\": \".1.2.3\"}}, \"geometry\": {\"coordinates\": [0, 0], \"type\": \"Point\"}}]};\n        const gThisOwner = \"null\";\n        const gThisModelName = \"null\";\n        const gThisFeederName = \"null\";\n        const gThisFeederNum = null;\n        const gPublicFeeders = null;\n        const gUserFeeders = null;\n        const gCurrentUser = \"null\";\n        const gShowFileMenu = false;\n        const gIsOnline = false;\n    </script>\n    <script>\n\"use strict\";\n\n// - Use voltDumpOlinBarre.csv, currDumpOlinBarre.csv and Olin Barre Fault.omd as examples\n\nclass ColorModal { // implements ModalInterface, ObserverInterface\n    #colorFiles;            // - Object of ColorFiles\n    #selectedColorFilename; // - The name of the file that contains the information for the currently applied coloring\n    #selectedColorMapIndex; // - The 0-based index of the column in the color file for the currently applied coloring\n    #controller;            // - ControllerInterface instance\n    #modal;                 // - Modal instance\n    #observables;           // - An array of ObservableInterface instances\n    #removed;               // - Whether this ColorModal instance has already been deleted\n\n    /**\n     * @param {Array} observables - an array of ObservableInterface instances\n     * @param {FeatureController} controller - a ControllerInterface instance\n     */\n    constructor(observables, controller) {\n        if (!(observables instanceof Array)) {\n            throw TypeError('\"observables\" argumnet must be an Array.');\n        }\n        if (!(controller instanceof FeatureController)) {\n            throw Error('\"controller\" argument must be instanceof FeatureController.');\n        }\n        this.#colorFiles = {};\n        this.#selectedColorFilename = null;\n        this.#selectedColorMapIndex = null;\n        this.#controller = controller;\n        this.#modal = null;\n        this.#observables = observables;\n        this.#observables.forEach(ob => ob.registerObserver(this));\n        this.#removed = false;\n        this.renderContent();\n        this.refreshContent();\n    }\n\n    // *******************************\n    // ** ObserverInterface methods **\n    // *******************************\n\n    /**\n     * - Remove this ObserverInterface instance (i.e. \"this\") from the ObservableInterface instance (i.e. \"observable\") that has been deleted, and\n     *   perform other actions as needed\n     * @param {Feature} observable - an ObservableInterface instance\n     * @returns {undefined}\n     */\n    handleDeletedObservable(observable) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature.');\n        }\n        if (!this.#removed) {\n            observable.removeObserver(this);\n            const index = this.#observables.indexOf(observable);\n            if (index > -1) {\n                this.#observables.splice(index, 1);\n            } else {\n                throw Error('The observable was not found in this.#observables.');\n            }\n            if (this.#observables.length === 0) {\n                this.remove();\n            } else {\n                this.refreshContent();\n            }\n        }\n    }\n\n    /**\n     *\n     */\n    handleNewObservable(observable) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        throw new UnsupportedOperationError();\n    }\n\n    /**\n     * - Update this ObserverInterface instance (i.e. \"this\") based on the coordinates of the ObservableInterface instance (i.e. \"observable\") that\n     *   have just changed and perform other actions as needed\n     * @param {Feature} observable - an ObservableInterface instance\n     * @param {Array} oldCoordinates - the old coordinates of the observable prior to the change in coordinates\n     * @returns {undefined}\n     */\n    handleUpdatedCoordinates(observable, oldCoordinates) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature.');\n        }\n        if (!(oldCoordinates instanceof Array)) {\n            throw TypeError('\"oldCoordinates\" argument must be an array.');\n        }\n        this.refreshContent();\n    }\n\n    /**\n     * - Update this ObserverInstance (i.e. \"this\") based on the property of the ObservableInterface instance (i.e. \"observable\") that has just\n     *   changed and perform other actions as needed\n     * @param {Feature} observable - an ObservableInterface instance\n     * @param {string} propertyKey - the property key of the property that has been created/changed/deleted in the observable\n     * @param {(string|Object)} oldPropertyValue - the previous value of the property that has been created/changed/deleted in the observable\n     * @param {string} namespace - the namespace of the property that has been created/changed/deleted in the observable\n     * @returns {undefined}\n     */\n    handleUpdatedProperty(observable, propertyKey, oldPropertyValue, namespace='treeProps') {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature.');\n        }\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be a string.');\n        }\n        if (typeof namespace !== 'string') {\n            throw TypeError('\"namespace\" argument must be a string.');\n        }\n        this.refreshContent();\n    }\n\n    // ****************************\n    // ** ModalInterface methods **\n    // ****************************\n\n    getDOMElement() {\n        return this.#modal.divElement;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isRemoved() {\n        return this.#removed;\n    }\n\n    /**\n     * @returns {undefined}\n     */\n    refreshContent() {\n        const fileListModal = new Modal();\n        fileListModal.addStyleClasses(['colorModal'], 'divElement');\n        if (Object.values(this.#colorFiles).length > 0) {\n            fileListModal.insertTHeadRow(['Filename', 'Color-by Column', 'Apply Column Color on Page Load' ]);\n            fileListModal.addStyleClasses(['centeredTable'], 'tableElement');\n        }\n        const attachments = this.#controller.observableGraph.getObservable('omd').getProperty('attachments', 'meta');\n        for (const colorFile of Object.values(this.#colorFiles)) {\n            const select = document.createElement('select');\n            for (const [idx, cm] of Object.entries(colorFile.getColorMaps())) {\n                const option = document.createElement('option');\n                option.text = `${cm.getColumnName()} (column ${idx})`;\n                option.value = idx;\n                select.add(option);\n            }\n            const checkbox = document.createElement('input');\n            checkbox.type = 'checkbox';\n            checkbox.name = 'colorOnLoadColumnIndex';\n            select.addEventListener('change', function() {\n                // - Get the checkbox and check or uncheck it depending on colorOnLoad\n                if (this.value === attachments.coloringFiles[colorFile.getFilename()].colorOnLoadColumnIndex) {\n                    checkbox.checked = true;\n                } else {\n                    checkbox.checked = false;\n                }\n            });\n            // - On load, set the select option to the equivalent colorOnLoad column, if there was one\n            if (attachments.coloringFiles[colorFile.getFilename()].hasOwnProperty('colorOnLoadColumnIndex')) {\n                for (const op of select.options) {\n                    if (op.value === attachments.coloringFiles[colorFile.getFilename()].colorOnLoadColumnIndex) {\n                        select.selectedIndex = op.index;\n                        checkbox.checked = true;\n                    }\n                }\n            }\n            checkbox.addEventListener('change', function() {\n                for (const [filename, obj] of Object.entries(attachments.coloringFiles)) {\n                    if (filename === colorFile.getFilename()) {\n                        if (this.checked) {\n                            obj.colorOnLoadColumnIndex = select.value;\n                        } else {\n                            delete obj.colorOnLoadColumnIndex;\n                        }\n                    } else {\n                        if (this.checked) {\n                            delete obj.colorOnLoadColumnIndex;\n                            for (const input of [...fileListModal.divElement.querySelectorAll('input[type=\"checkbox\"][name=\"colorOnLoadColumnIndex\"]')]) {\n                                if (input !== this) {\n                                    input.checked = false;\n                                }\n                            }\n                        }\n                    }\n                }\n            });\n            const colorButton = document.createElement('button');\n            colorButton.classList.add('horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex', 'fullWidth');\n            let span = document.createElement('span');\n            span.textContent = 'Color';\n            colorButton.appendChild(span);\n            colorButton.addEventListener('click', () => {\n                const colorMap = colorFile.getColorMaps()[select.value];\n                this.#applyColorMap(colorFile, colorMap);\n                this.#selectedColorFilename = colorFile.getFilename();\n                this.#selectedColorMapIndex = colorMap.getColumnIndex();\n            });\n            const removeButton = document.createElement('button');\n            removeButton.classList.add('horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex', 'fullWidth', 'delete');\n            span = document.createElement('span');\n            span.textContent = 'Remove';\n            removeButton.appendChild(span);\n            removeButton.addEventListener('click', () => {\n                if (attachments.hasOwnProperty('coloringFiles')) {\n                    const filename = colorFile.getFilename();\n                    delete attachments.coloringFiles[filename];\n                    delete this.#colorFiles[filename];\n                    this.refreshContent();\n                    if (Object.keys(attachments.coloringFiles).length === 0) {\n                        delete attachments.coloringFiles;\n                    }\n                    this.#selectedColorFilename = null;\n                    this.#selectedColorMapIndex = null;\n                }\n            });\n            fileListModal.insertTBodyRow([colorFile.getFilename(), select, checkbox, colorButton, removeButton])\n        }\n        const containerElement = this.#modal.divElement.getElementsByClassName('div--modalElementContainer')[0];\n        const oldModal = containerElement.getElementsByClassName('js-div--modal');\n        if (oldModal.length === 0) {\n            containerElement.prepend(fileListModal.divElement);\n        } else {\n            oldModal[0].replaceWith(fileListModal.divElement);\n        }\n    }\n\n    /**\n     * @returns {undefined}\n     */\n    remove() {\n        if (!this.#removed) {\n            this.#observables.forEach(ob => ob.removeObserver(this));\n            this.#observables = null;\n            this.#modal.divElement.remove();\n            this.#removed = true;\n        }\n    }\n\n    /**\n     * - Render the modal for the first time\n     * @returns {undefined}\n     */\n    renderContent() {\n        // - Build the modal\n        const modal = new Modal();\n        modal.addStyleClasses(['outerModal', 'fitContent'], 'divElement');\n        modal.setTitle('Color Circuit');\n        modal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'titleElement');\n        const colorInput = document.createElement('input');\n        colorInput.type = 'file';\n        colorInput.accept = '.csv';\n        colorInput.required = true;\n        colorInput.id = 'colorInput';\n        const that = this;\n        colorInput.addEventListener('change', async function() {\n            const file = this.files[0];\n            const results = await that.#parseCsv(file);\n            if (results.errors.length > 0) {\n                // - Papa Parse did parse the file, but there was some kind of small problem. Make the user fix it\n                that.#modal.showProgress(false, `There was an error \"${results.errors[0].message}\" when parsing the CSV file \"${file.name}\". Please double-check the CSV formatting.`, ['caution']);\n                return;\n            } else {\n                that.#modal.setBanner('', ['hidden']);\n            }\n            if (!attachments.hasOwnProperty('coloringFiles')) {\n                attachments.coloringFiles = {};\n            }\n            attachments.coloringFiles[file.name] = {\n                csv: Papa.unparse(results.data)\n                // - colorOnLoadColumnIndex should specify a column index if the interface should color on load by a column, otherwise it shouldn't\n                //   exist\n            }\n            that.#createColorFilesFromAttachments();\n            that.refreshContent();\n        });\n        const colorLabel = document.createElement('label');\n        colorLabel.htmlFor = 'colorInput';\n        colorLabel.innerHTML = 'Add a file containing bus names and electrical readings (.csv)';\n        modal.insertTBodyRow([colorLabel, colorInput]);\n        modal.addStyleClasses(['centeredTable'], 'tableElement');\n        const resetButton = document.createElement('button');\n        let span = document.createElement('span');\n        span.textContent = 'Reset Colors';\n        resetButton.appendChild(span);\n        resetButton.classList.add('horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex', 'fullWidth');\n        resetButton.addEventListener('click', () => this.#resetColors());\n        const submitDiv = document.createElement('div');\n        submitDiv.classList.add('horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex', 'halfWidth');\n        submitDiv.appendChild(resetButton);\n        modal.insertElement(submitDiv);\n        modal.addStyleClasses(['verticalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'containerElement');\n        if (this.#modal === null) {\n            this.#modal = modal;\n        }\n        if (document.body.contains(this.#modal.divElement)) {\n            this.#modal.divElement.replaceWith(modal.divElement);\n            this.#modal = modal;\n        }\n        // - Apply any colorOnLoad colorings\n        this.#createColorFilesFromAttachments();\n        const attachments = that.#controller.observableGraph.getObservable('omd').getProperty('attachments', 'meta');\n        if (attachments.hasOwnProperty('coloringFiles')) {\n            for (const [filename, obj] of Object.entries(attachments.coloringFiles)) {\n                if (obj.hasOwnProperty('colorOnLoadColumnIndex')) {\n                    const colorFile = this.#colorFiles[filename];\n                    const colorMap = colorFile.getColorMaps()[obj.colorOnLoadColumnIndex];\n                    // - This if-statement is just in case the colorOnLoadColumnIndex value is invalid for some reason\n                    if (colorMap instanceof ColorMap) {\n                        this.#applyColorMap(colorFile, colorMap);\n                        this.#selectedColorFilename = colorFile.getFilename();\n                        this.#selectedColorMapIndex = colorMap.getColumnIndex();\n                    }\n                }\n            }\n        }\n        // - Add map event listener to re-apply coloring after hide and show\n        LeafletLayer.map.on('overlayadd', (layerControlEvent) => {\n            if (this.#selectedColorFilename !== null && this.#selectedColorMapIndex !== null) {\n                const colorFile = this.#colorFiles[this.#selectedColorFilename];\n                const colorMap = this.#colorFiles[this.#selectedColorFilename].getColorMaps()[this.#selectedColorMapIndex];\n                this.#applyColorMap(colorFile, colorMap);\n            }\n        });\n    }\n\n    // ********************\n    // ** Public methods **\n    // ********************\n\n    // *********************\n    // ** Private methods **\n    // *********************\n\n    /**\n     * @param {ColorFile} colorFile\n     * @param {ColorMap} colorMap\n     * @returns {undefined}\n     */\n    #applyColorMap(colorFile, colorMap) {\n        if (!(colorFile instanceof ColorFile)) {\n            throw TypeError('\"colorFile\" must be instanceof ColorFile.');\n        }\n        if (!(colorMap instanceof ColorMap)) {\n            throw TypeError('\"colorMap\" must be instanceof ColorMap.');\n        }\n        const notFound = [];\n        // - Color everything gray to get rid of default colors\n        for (const ob of this.#controller.observableGraph.getObservables()) {\n            ob.getObservers().filter(ob => ob instanceof LeafletLayer).forEach(ll => {\n                // - Color nodes gray\n                if (Object.values(ll.getLayer()._layers)[0].hasOwnProperty('_icon')) {\n                    const svg = Object.values(ll.getLayer()._layers)[0]._icon.children[0];\n                    this.#colorSvg(svg, {_rgb: [128, 128, 128, 1]});\n                // - Color lines gray\n                } else {\n                    const options = Object.values(ll.getLayer()._layers)[0].options;\n                    if (options.color !== 'gray') {\n                        options.originalColor = options.color;\n                    }\n                    options.color = 'gray';\n                }\n            });\n        }\n        // - Force refresh the map so that the lines change color\n        LeafletLayer.map.setZoom(LeafletLayer.map.getZoom());\n        // - Actually apply colors from color map (only nodes supported right now, I don't have a CSV with lines to color)\n        for (const [name, obj] of Object.entries(colorMap.getColorMapping())) {\n            try {\n                const key = this.#controller.observableGraph.getKeyForComponent(name);\n                const observable = this.#controller.observableGraph.getObservable(key);\n                observable.getObservers().filter(ob => ob instanceof LeafletLayer).forEach(ll => {\n                    const svg = Object.values(ll.getLayer()._layers)[0]._icon.children[0];\n                    this.#colorSvg(svg, obj.color);\n                });\n            } catch (e) {\n                notFound.push(name);\n            }\n        }\n        console.log(`The following names in the CSV did not match any visible object in the circuit: ${notFound}`);\n        // - Display legend\n        colorMap.displayLegend(colorFile.getFilename());\n    }\n\n    /**\n     * @param {SVGElement} svg\n     * @param {Object} color - an object containing {_rgb: [<r>, <g>, <b>, <a>]}\n     * @returns {undefined}\n     */\n    #colorSvg(svg, color) {\n        if (!(svg instanceof SVGElement)) {\n            throw TypeError('\"svg\" argument must be instanceof SVGElement.');\n        }\n        if (typeof color !== 'object') {\n            throw TypeError('\"color\" argument must be typeof object.');\n        }\n        if (!color.hasOwnProperty('_rgb')) {\n            throw Error('\"color\" argument must have \"_rgb\" property.');\n        }\n        svg.style.fill = `rgba(${color._rgb[0]}, ${color._rgb[1]}, ${color._rgb[2]}, ${color._rgb[3]})`;\n    }\n\n    /**\n     * @param {File} file\n     * @returns {string}\n     */\n    #parseCsv(file) {\n        if (!(file instanceof File)) {\n            throw TypeError('\"file\" argument must be instanceof File.');\n        }\n        return new Promise(function(resolve, reject) {\n            Papa.parse(file, {\n                dynamicTyping: true,\n                complete: function(results, file) {\n                    resolve(results);\n                },\n                error: function(error, file) {\n                    reject(error.message);\n                }\n            });\n        });\n    }\n\n    /**\n     * - Iterate through the strings in the attachments and create a ColorFile instance for each string\n     * @returns {undefined}\n     */\n    #createColorFilesFromAttachments() {\n        const attachments = this.#controller.observableGraph.getObservable('omd').getProperty('attachments', 'meta');\n        if (attachments.hasOwnProperty('coloringFiles')) {\n            for (const [filename, obj] of Object.entries(attachments.coloringFiles)) {\n                // - Create a ColorFile as a container for one or more ColorMaps\n                const colorFile = new ColorFile(filename);\n                // - Fill the ColorFile with actual data\n                try {\n                    colorFile.createColorMaps(obj.csv);\n                    this.#modal.setBanner('', ['hidden']);\n                } catch (e) {\n                    // - Papa Parse did parse the file and didn't find any errors, but I still couldn't create a good ColorFile object, so tell the\n                    //   user to remove or fix the file\n                    this.#modal.showProgress(false, `The CSV \"${filename}\" was parsed, but there was an error \"${e.message}\" when converting the CSV values into colors. Please double-check the CSV content.`, ['caution']);\n                }\n                // - Save the colorFile so that refreshContent() can access it\n                this.#colorFiles[filename] = colorFile;\n            }\n        }\n    }\n\n    /**\n     * @returns {undefined}\n     */\n    #resetColors() {\n        this.#controller.observableGraph.getObservables().forEach(observable => {\n            observable.getObservers().filter(ob => ob instanceof LeafletLayer).forEach(ll => {\n                // - Un-color nodes\n                if (Object.values(ll.getLayer()._layers)[0].hasOwnProperty('_icon')) {\n                    const svg = Object.values(ll.getLayer()._layers)[0]._icon.children[0];\n                    svg.style.removeProperty('fill');\n                // - Un-color lines\n                } else {\n                    const options = Object.values(ll.getLayer()._layers)[0].options;\n                    if (options.hasOwnProperty('originalColor')) {\n                        options.color = options.originalColor;\n                    } else {\n                        options.color = 'gray';\n                    }\n                }\n            });\n        });\n        this.#selectedColorFilename = null;\n        this.#selectedColorMapIndex = null;\n        // - Force refresh the map so that the lines change color\n        LeafletLayer.map.setZoom(LeafletLayer.map.getZoom());\n    }\n}\n\nclass ColorFile {\n\n    #colorMaps;\n    #filename;\n\n    /**\n     * @param {string} filename - the filename of the CSV\n     */\n    constructor(filename) {\n        if (typeof filename !== 'string') {\n            throw TypeError('\"filename\" argument must be typeof string.');\n        }\n        this.#colorMaps = {};   // - While columns in a CSV can have duplicate headings, they must have unique indexes\n        this.#filename = filename;\n    }\n\n    /**\n     * @param {string} text - the text content of the CSV as a string\n     * @returns {undefined}\n     */\n    createColorMaps(text) {\n        if (typeof text !== 'string') {\n            throw TypeError('\"text\" argument must be typeof string.');\n        }\n        const results = Papa.parse(text, {dynamicTyping: true});\n        const headerRow = results.data[0];\n        // - i = 1 because the first column contains names, not numeric values\n        for (let i = 1; i < headerRow.length; i++) {\n            const cm = new ColorMap(headerRow[i].toString(), i);\n            this.#colorMaps[i] = cm;\n        }\n        for (let i = 1; i < results.data.length; i++) {\n            const row = results.data[i];\n            for (let j = 1; j < row.length; j++) {\n                this.#colorMaps[j].mapNameToValue(row[0].toString(), {color: null, float: row[j]});\n            }\n        }\n        Object.values(this.#colorMaps).forEach(cm => cm.generateColorsFromFloats());\n    }\n\n    /**\n     * @returns {Object}\n     */\n    getColorMaps() {\n        return this.#colorMaps;\n    }\n\n    /**\n     * @returns {string}\n     */\n    getFilename() {\n        return this.#filename;\n    }\n}\n\nclass ColorMap {\n\n    #columnName;\n    #columnIndex;\n    #nameToValue;\n    static viridisColors = ['#440154', '#482173', '#433e85', '#38588c', '#2d708e', '#25858e', '#1e9b8a', '#2ab07f', '#52c569', '#86d549', '#c2df23', '#fde725'];\n\n    /**\n     * @param {string} columnName\n     */\n    constructor(columnName, columnIndex) {\n        if (typeof columnName !== 'string') {\n            throw TypeError('\"columnName\" argument must be typeof string.');\n        }\n        if (typeof columnIndex !== 'number') {\n            throw TypeError('\"columnIndex\" argument must be typeof number.');\n        }\n        this.#columnName = columnName;\n        this.#nameToValue = {};\n        this.#columnIndex = columnIndex;\n    }\n\n    // ********************\n    // ** Public methods **\n    // ********************\n\n    /**\n     * @param {string} filename\n     * @returns {undefined}\n     */\n    displayLegend(filename) {\n        if (typeof filename !== 'string') {\n            throw TypeError('\"filename\" argument must be typeof string.');\n        }\n        const modal = new Modal();\n        modal.divElement.style.width = '300px';\n        // - Create titles\n        const fileColumnDiv = document.createElement('div');\n        fileColumnDiv.style.textAlign = 'center';\n        fileColumnDiv.style.wordBreak = 'break-word';\n        const filenameHeading = document.createElement('h2');\n        filenameHeading.style.width = '100%';\n        filenameHeading.textContent = filename;\n        fileColumnDiv.appendChild(filenameHeading);\n        const columnNameHeading = document.createElement('h3');\n        columnNameHeading.style.width = '100%';\n        columnNameHeading.textContent = this.#columnName;\n        fileColumnDiv.appendChild(columnNameHeading);\n        modal.setTitle(fileColumnDiv);\n        // - Create color gradient\n        const legendDiv = document.createElement('div');\n        legendDiv.classList.add('horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex');\n        const legendGradient = document.createElement('div');\n        legendGradient.style.height = '400px';\n        legendGradient.style.width = '50px';\n        legendGradient.style.background = `linear-gradient(0deg, ${ColorMap.viridisColors.join(',')})`;\n        legendDiv.appendChild(legendGradient);\n        const legendValues = document.createElement('div');\n        legendValues.style.height = '400px';\n        const floats = Object.values(this.#nameToValue).map(obj => obj.float);\n        const min = Math.min.apply(null, floats);\n        let span = document.createElement('span');\n        span.textContent = min.toFixed(3);\n        legendValues.appendChild(span);\n        const max = Math.max.apply(null, floats);\n        const step = (max - min) / 6;\n        for (let i = 1; i < 6; i++) {\n            const span = document.createElement('span');\n            span.textContent = `${ (min + (step * i)).toFixed(3)}`;\n            legendValues.prepend(span);\n        }\n        span = document.createElement('span');\n        span.textContent = max.toFixed(3);\n        legendValues.prepend(span);\n        legendValues.classList.add('verticalFlex');\n        legendValues.style.justifyContent = 'space-between';\n        legendValues.style.paddingLeft = '5px';\n        legendDiv.appendChild(legendValues);\n        modal.insertElement(legendDiv);\n        modal.addStyleClasses(['verticalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'containerElement');\n        // - Create button\n        const button = document.createElement('button');\n        button.classList.add('horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex', 'fullWidth');\n        button.addEventListener('click', function() {\n            document.getElementById('legendInsert').replaceChildren();\n        });\n        span = document.createElement('span');\n        span.textContent = 'Close';\n        button.appendChild(span);\n        const buttonDiv = document.createElement('div');\n        buttonDiv.classList.add('horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex', 'halfWidth');\n        buttonDiv.appendChild(button);\n        modal.insertElement(buttonDiv);\n        document.getElementById('legendInsert').replaceChildren(modal.divElement);\n        $(modal.divElement).draggable();\n    }\n\n    /**\n     * - After all names have been mapped to numeric values, iterate through the colorMap again and generate color objects\n     * @returns {undefined}\n     */\n    generateColorsFromFloats() {\n        const floats = Object.values(this.#nameToValue).map(obj => obj.float);\n        const min = Math.min.apply(null, floats);\n        const max = Math.max.apply(null, floats);\n        const func = chroma.scale(ColorMap.viridisColors).domain([min, max]);\n        Object.values(this.#nameToValue).forEach(obj => {\n            obj.color = func(obj.float);\n        });\n    }\n\n    getColorMapping() {\n        return this.#nameToValue;\n    }\n\n    getColumnName() {\n        return this.#columnName;\n    }\n\n    getColumnIndex() {\n        return this.#columnIndex;\n    }\n\n    /**\n     * @param {string} name - the name of an object to color (e.g. a node name)\n     * @param {string|Object} value - when iterating over a CSV for the first time, the only floats are known. Once a Chroma scale has been generated,\n     *      then colors are also mapped\n     * @returns {undefined}\n     */\n    mapNameToValue(name, value) {\n        if (typeof name !== 'string') {\n            throw TypeError('\"name\" argument must be typeof string.');\n        }\n        if (typeof value !== 'object') {\n            throw TypeError('\"value\" argument must be typeof object.');\n        }\n        if (!value.hasOwnProperty('color')) {\n            throw TypeError('\"value\" argument must have a \"color\" property.');\n        }\n        if (!value.hasOwnProperty('float')) {\n            throw TypeError('\"value\" argument must have a \"float\" property.');\n        }\n        if (this.#nameToValue[name] === undefined) {\n            this.#nameToValue[name] = {};\n        }\n        if (value.hasOwnProperty('color')) {\n            this.#nameToValue[name].color = value.color;\n        }\n        if (value.hasOwnProperty('float')) {\n            this.#nameToValue[name].float = value.float;\n        }\n    }\n\n    // *********************\n    // ** Private methods **\n    // *********************\n}\n</script>\n<script>\n\"use strict\";\n\nclass DropdownDiv {\n    divElement;         // - The divElement is the outermost div that contains the DropdownDiv's button (if any) and content\n    buttonElement;      // - The buttonElement is an optional button that can be clicked to expand and collapse the contentDivElement\n    contentDivElement;  // - The contentDivElement is the div that expands and collapses as needed \n    \n    /**\n     * @returns {undefined}\n     */\n    constructor() {\n        this.divElement = document.createElement('div');\n        this.divElement.classList.add('js-div--dropdown');\n        this.buttonElement = null;\n        this.contentDivElement = null;\n    }\n\n    // ********************\n    // ** Public methods **\n    // ********************\n\n    /**\n     * @returns {boolean}\n     */\n    isExpanded() {\n        return this.contentDivElement !== null && this.contentDivElement.classList.contains('expanded');\n    }\n\n   /**\n    * @param {Node} e - an element to append to the content div\n    * @param {string} [position='append'] - the location to insert the element row. Can be \"prepend\", \"beforeEnd\", or \"append\"\n    * @returns {undefined}\n    */\n    insertElement(e, position='append') {\n        if (!(e instanceof Node)) {\n            throw Error('\"e\" argument must be instanceof Node');\n        }\n        if (this.contentDivElement === null) {\n            this.#createContentDivElement();\n        }\n        if (position === 'prepend') {\n            this.contentDivElement.prepend(e);\n        } else if (position === 'beforeEnd') {\n            const lastNodeIndex = this.contentDivElement.children.length - 1;\n            const lastNode = this.contentDivElement.children.item(lastNodeIndex);\n            this.contentDivElement.insertBefore(e, lastNode) \n        } else if (position === 'append') {\n            this.contentDivElement.appendChild(e);\n        } else {\n            throw Error('Please specify a valid value for the \"position\" parameter: \"prepend\", \"beforeEnd\", or \"append\".')\n        }\n    }\n\n    /**\n     * @param {(string|Node)} button - the button to display\n     * @param {boolean} showArrow - whether to append an arrow SVG to the button that rotates in response to clicks\n     * @returns {undefined}\n     */\n    setButton(button, showArrow=false) {\n        let svgWasRotated = false;\n        if (this.buttonElement === null) {\n            this.buttonElement = document.createElement('button');\n            this.buttonElement.classList.add('js-button--dropdown');\n            this.divElement.prepend(this.buttonElement);\n            if (this.contentDivElement === null) {\n                this.#createContentDivElement();\n            }\n            this.buttonElement.addEventListener('click', this.#getContentDivDisplayFunction());\n        } else {\n            const svg = this.buttonElement.lastChild;\n            if (svg instanceof SVGElement) {\n                if (svg.classList.contains('rotated')) {\n                    svgWasRotated = true;\n                }\n            }\n        }\n        if (typeof button === 'string') {\n            const span = document.createElement('span'); \n            span.textContent = button;\n            this.buttonElement.replaceChildren(span);\n        } else if (button instanceof Node) {\n            this.buttonElement.replaceChildren(button);\n        } else {\n            throw TypeError('\"button\" argument must be a string or Node.');\n        }\n        if (showArrow) {\n            const svg = document.createElementNS('http://www.w3.org/2000/svg','svg'); \n            svg.classList.add('js-svg--dropdown');    \n            svg.setAttribute('width', '40px');\n            svg.setAttribute('height', '40px');\n            svg.setAttribute('viewBox', '0 0 10 10');\n            const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n            path.setAttribute('d', 'M4,2.5L6.5,5L4,7.5L3,6.5L4.5,5L3,3.5L4,2.5');\n            svg.appendChild(path);\n            if (svgWasRotated) {\n                svg.classList.add('rotated');\n            }\n            this.buttonElement.appendChild(svg);\n        }\n    }\n\n    /**\n     * - Return a function that is intended to be attached to any other element to control the display of the entire DropdownDiv\n     * @returns {function}\n     */\n    getDropdownDivShowHideFunction() {\n        const that = this;\n        return function() {\n            that.divElement.classList.toggle('expanded');\n        };\n    }\n\n    /**\n     * @param {Array} styles\n     * @param {string} elementName\n     * @returns {undefined}\n     */\n    addStyleClasses(styles, elementName) {\n        if (!(styles instanceof Array)) {\n            throw Error('\"styles\" argument must be an array.');\n        }\n        if (typeof elementName !== 'string') {\n            throw Error('The \"elementName\" argument must be a string');\n        }\n        switch (elementName) {\n            case 'divElement':\n                if (this.divElement !== null) {\n                    this.divElement.classList.add(...styles);\n                }\n                break;\n            case 'buttonElement':\n                if (this.buttonElement !== null) {\n                    this.buttonElement.classList.add(...styles);\n                }\n                break;\n            case 'contentDivElement':\n                if (this.contentDivElement !== null) {\n                    this.contentDivElement.classList.add(...styles);\n                }\n                break;\n            default:\n                throw Error('\"elementName\" argument must be \"divElement\", \"buttonElement\", or \"contentDivElement\".');\n        }\n    }\n\n    /**\n     * @param {Array} styles\n     * @param {string} elementName\n     * @returns {undefined}\n     */\n    removeStyleClasses(styles, elementName) {\n        if (!(styles instanceof Array)) {\n            throw Error('\"styles\" argument must be an array.');\n        }\n        if (typeof elementName !== 'string') {\n            throw Error('The \"elementName\" argument must be a string');\n        }\n        switch (elementName) {\n            case 'divElement':\n                if (this.divElement !== null) {\n                    this.divElement.classList.remove(...styles);\n                }\n                break;\n            case 'buttonElement':\n                if (this.buttonElement !== null) {\n                    this.buttonElement.classList.remove(...styles);\n                }\n                break;\n            case 'contentDivElement':\n                if (this.contentDivElement !== null) {\n                    this.contentDivElement.classList.remove(...styles);\n                }\n                break;\n            default:\n                throw Error('\"elementName\" argument must be \"divElement\", \"buttonElement\", or \"contentDivElement\".');\n        }\n    }\n\n    // *********************\n    // ** Private methods ** \n    // *********************\n\n    /**\n     * - Return a function that is intended to be attached to the button in the DropdownDiv to control the display of the content div of the\n     *   DropdownDiv\n     * @returns {function}\n     */\n    #getContentDivDisplayFunction() {\n        const that = this;\n        return function() {\n            // - I don't need to manage the content of this.contentDivElement because any additional event listeners added later should be managing\n            //   the creation and removal of content in response to clicks\n            that.contentDivElement.classList.toggle('expanded');\n            that.buttonElement.classList.toggle('expanded');\n            const svg = that.buttonElement.lastChild;\n            if (svg instanceof SVGElement) {\n                svg.classList.toggle('rotated');\n            }\n            if (!that.contentDivElement.classList.contains('expanded')) {\n                for (const innerDiv of that.contentDivElement.getElementsByClassName('js-div--dropdown')) {\n                    // - There is no button, just a content div\n                    if (innerDiv.children[0] instanceof HTMLDivElement) {\n                        // - I'm going to assume that if there is no button, then the creation of the content in the content div is being controlled\n                        //   somewhere else, so I shouldn't clear the content div or do anything to it except visually collapse it\n                        innerDiv.children[0].classList.remove('expanded');\n                    } else if (innerDiv.children[0] instanceof HTMLButtonElement) {\n                        // - If there is a button, then I should simulate a click on that button, but only if that button was open. If the button was\n                        //   closed, don't click on it. Clicking on the button should take care of the svg if it exists\n                        const contentDiv = innerDiv.children[1];\n                        if (contentDiv.classList.contains('expanded')) {\n                            innerDiv.children[0].click();\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    #createContentDivElement() {\n        this.contentDivElement = document.createElement('div');\n        this.contentDivElement.classList.add('js-div--dropdownContent');\n        this.divElement.appendChild(this.contentDivElement);\n    }\n}\n</script>\n<script>\n\"use strict\";\n\nclass Feature {\n    #feature;\n    #graph;\n    #observers;\n    #originalFeature;\n\n    /**\n     * @param {Object} feature - a standard GeoJSON feature\n     * @param {FeatureGraph} graph - an already-constructed graph that is used to optimize observable-observer notifications\n     * @returns {undefined}\n     */\n    constructor(feature) {\n        this.#feature = feature;\n        this.#graph = null\n        this.#observers = [];\n        this.#originalFeature = structuredClone(feature);\n    }\n    \n    // *********************************\n    // ** ObservableInterface methods **\n    // *********************************\n\n    /**\n     * - Delete the property with the matching namespace and property key in this ObservableInstance (i.e. \"this\") if it exists, otherwise throw a\n     *   ReferenceError\n     * @param {string} propertyKey - the property key of the property that is in the observable\n     * @param {string} [namespace='treeProps'] - the namespace of the property that is in the observable \n     *  - E.g. for Feature instances, this defaults to \"treeProps\" which corresponds to properties in the \"treeProps\" object\n     * @returns {undefined}\n     */\n    deleteProperty(propertyKey, namespace='treeProps') {\n        // - The function signature above is part of the ObservableInterface API. The implementation below is not\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be a string.');\n        }\n        if (typeof namespace !== 'string') {\n            throw TypeError('\"namespace\" argument must be a string.');\n        }\n        if (['treeProps', 'formProps', 'urlProps'].includes(namespace)) {\n            if (this.#feature.properties.hasOwnProperty(namespace)) {\n                if (this.#feature.properties[namespace].hasOwnProperty(propertyKey)) {\n                    const oldPropertyValue = this.getProperty(propertyKey, namespace);\n                    delete this.#feature.properties[namespace][propertyKey];\n                    this.updatePropertyOfObservers(propertyKey, oldPropertyValue, namespace);\n                } else {\n                    throw ReferenceError(`The property \"${propertyKey}\" could not be found in the namespace \"${namespace}\" in the Feature instance.`);\n                }\n            } else {\n                throw ReferenceError(`This feature does not have the namespace \"${namespace}\".`);\n            }\n        } else if (namespace === 'meta') {\n            if (this.#feature.properties.hasOwnProperty(propertyKey)) {\n                const oldPropertyValue = this.getProperty(propertyKey, namespace);\n                delete this.#feature.properties[propertyKey];\n                this.updatePropertyOfObservers(propertyKey, oldPropertyValue, namespace);\n            } else {\n                throw ReferenceError(`The property \"${propertyKey}\" could not be found in the namespace \"${namespace}\" in the Feature instance.`);\n            }\n        } else {\n            throw ReferenceError(`The namespace \"${namespace}\" does not exist in this Feature. Leave the \"namespace\" argument empty to use the \"treeProps\" namespace.`);\n        }\n    }\n\n    /**\n     * - Mark this ObservableInterface instance as being no longer observable to any observers (i.e. \"delete\" it)\n     *  - Make all of its observers ignore it\n     *  - Remove it from the ObservableGraph interface instance\n     * @returns {undefined}\n     */\n    deleteObservable() {\n        // - The function signature above is part of the ObservableInterface API. The implementation below is not\n        // - I need to clone the array because if I iterate over this.#observers while I'm removing elements from it, everything gets messed up\n        const observers = [...this.#observers];\n        observers.forEach(ob => {\n            ob.handleDeletedObservable(this);\n        });\n        if (this.#graph instanceof FeatureGraph) {\n            this.#graph.handleDeletedObservable(this);\n        }\n    }\n\n    /**\n     * @returns {Array} the coordinates of the ObservableInterface instance in [<lon>, <lat>] format\n     *  - E.g. [<lon>, <lat>] for points and [[<lon_1>, <lat_1>], [<lon_2>, <lat_2>]] for lines\n     */\n    getCoordinates() {\n        // - The function signature above is part of the ObservableInterface API. The implementation below is not\n        return this.#feature.geometry.coordinates;\n    }\n\n    getObservable() {\n        throw new UnsupportedOperationError();\n    }\n\n    /**\n     * @returns {Object} a copy of the underlying data of this ObservableInterface instance\n     *  - E.g. a vanilla JavaSCript GeoJSON feature object\n     */\n    getObservableExportData() {\n        const clone = structuredClone(this.#feature);\n        if (clone.properties.hasOwnProperty('treeProps')) {\n            if (clone.properties.treeProps.hasOwnProperty('object')) {\n                // - Recorders and players cannot have a \"name\" property when being saved, but they need to maintain that property in the interface\n                if (['recorder', 'player'].includes(clone.properties.treeProps.object)) {\n                    if (clone.properties.treeProps.hasOwnProperty('name')) {\n                        const nameComponents = clone.properties.treeProps.name.split(':');\n                        if (nameComponents.length === 3 && nameComponents[2] === 'addedName') {\n                            delete clone.properties.treeProps.name;\n                        }\n                    }\n                }\n                // - !CMD objects have their \"name\" property moved to the \"command\" property in the interface so that they have unique names. The\n                //   \"name\" property value must be set to the value of the \"command\" property on export\n                if (clone.properties.treeProps.object === '!CMD') {\n                    clone.properties.treeProps.name = clone.properties.treeProps.CMD_command;\n                    delete clone.properties.treeProps.CMD_command;\n                }\n                // - geo_py_validation_status should never be written back to any file\n                delete clone.properties.treeProps['geo_py_validation_status'];\n            }\n        }\n        return clone;\n    }\n\n    getObservables(func) {\n        throw new UnsupportedOperationError();\n    }\n\n    /**\n     * - Get the ObserverInterface instances that are observing this ObservableInterface instance\n     *  - This is needed to get the LeafletMap for the Zoom button in the TreeFeatureModal class\n     * @returns {Array}\n     */\n    getObservers() {\n        return this.#observers;\n    }\n\n    /**\n     * - Return the properties in the specified namespace in this ObservableInstance (i.e. \"this\") if it exists, otherwise throw a ReferenceError\n     * @param {string} namespace - the namespace of some properties in this observable\n     * @returns {Object}\n     */\n    getProperties(namespace) {\n        // - The function signature above is part of the ObservableInterface API. The implementation below is not\n        if (typeof namespace !== 'string') {\n            throw TypeError('\"namespace\" argument must be a string');\n        }\n        if (['treeProps', 'formProps', 'urlProps'].includes(namespace)) {\n            if (this.#feature.properties.hasOwnProperty(namespace)) {\n                // - I need to be consistent\n                return this.#feature.properties[namespace];\n            }\n            throw ReferenceError(`This feature does not have the namespace \"${namespace}\".`);\n        } else if (namespace === 'meta') {\n            // - I need to be consistent\n            return this.#feature.properties;\n        }\n        throw ReferenceError(`The namespace \"${namespace}\" does not exist in this Feature. Leave the \"namespace\" argument empty to get all properties.`);\n    }\n\n    /**\n     * - Return the property value of the property with the matching namespace and property key in this ObservableInstance (i.e. \"this\") if it exists,\n     *   otherwise throw a ReferenceError\n     * @param {string} propertyKey - the property key of the property that is in the observable\n     * @param {string} [namespace='treeProps'] - the namespace of the property that is in the observable \n     *  - E.g. for Feature instances, this defaults to \"treeProps\" which corresponds to properties in the \"treeProps\" object\n     * @returns {(string|Object)} propertyValue \n     */\n    getProperty(propertyKey, namespace='treeProps') {\n        // - The function signature above is part of the ObservableInterface API. The implementation below is not\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be a string.');\n        }\n        if (typeof namespace !== 'string') {\n            throw TypeError('\"namespace\" argument must be a string.');\n        }\n        if (['treeProps', 'formProps', 'urlProps'].includes(namespace)) {\n            if (this.#feature.properties.hasOwnProperty(namespace)) {\n                if (this.#feature.properties[namespace].hasOwnProperty(propertyKey)) {\n                    // - At this point, I don't want to return a structuredClone becuase I use this method everywhere\n                    return this.#feature.properties[namespace][propertyKey];\n                }\n                throw ReferenceError(`The property \"${propertyKey}\" could not be found in the namespace \"${namespace}\" in the Feature instance.\"`);\n            }\n            throw ReferenceError(`This feature does not have the namespace \"${namespace}\".`);\n        } else if (namespace === 'meta') {\n            if (this.#feature.properties.hasOwnProperty(propertyKey)) {\n                // - I need to be consistent\n                return this.#feature.properties[propertyKey];\n            }\n            throw ReferenceError(`The property \"${propertyKey}\" could not be found in the namespace \"${namespace}\" in the Feature instance.\"`);\n        }\n        throw ReferenceError(`The namespace \"${namespace}\" does not exist in this Feature. Leave the \"namespace\" argument empty to use the \"treeProps\" namespace.`);\n    }\n\n    /**\n     * @returns {boolean} whether this ObservableInterface instance has coordinates\n     */\n    hasCoordinates() {\n        // - The function signature above is part of the ObservableInterface API. The implementation below is not\n        if (this.#feature.geometry.type === 'Point') {\n            return !this.#feature.geometry.coordinates.some(c => typeof c !== 'number');\n        } else if (this.#feature.geometry.type === 'LineString') {\n            return !this.#feature.geometry.coordinates.flat().some(c => typeof c !== 'number');\n        } else if (this.#feature.geometry.type === 'Polygon') {\n            return !this.#feature.geometry.coordinates.flat(2).some(c => typeof c !== 'number');\n        } else if (this.#feature.geometry.type === 'MultiPoint') {\n            return !this.#feature.geometry.coordinates.flat().some(c => typeof c !== 'number');\n        } else if (this.#feature.geometry.type === 'MultiLineString') {\n            return !this.#feature.geometry.coordinates.flat(2).some(c => typeof c !== 'number');\n        } else if (this.#feature.geometry.type === 'MultiPolygon') {\n            return !this.#feature.geometry.coordinates.flat(3).some(c => typeof c !== 'number');\n        } else {\n            throw Error('The observable does not reference a valid GeoJSON feature (is it a configuration object or GeometryCollection?)');\n        }\n    }\n\n    /**\n     * @returns {boolean} whether this ObservableInterface instance has this.#graph set to some FeatureGraph\n     */\n    hasGraph() {\n        // - The function signature above is part of the ObservableInterface API. The implementation below is not\n        return (this.#graph instanceof FeatureGraph);\n    }\n\n    /**\n     * @param {string} propertyKey - the property key of the property that may or may not be in this observable's namespace \n     * @param {string} [namespace='treeProps'] - the namespace of the property key that may or may not be in this observable\n     * @returns {boolean}\n     */\n    hasProperty(propertyKey, namespace='treeProps') {\n        // - The function signature above is part of the ObservableInterface API. The implementation below is not\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be a string.');\n        }\n        if (typeof namespace !== 'string') {\n            throw TypeError('\"namespace\" argument must be a string.');\n        }\n        if (['treeProps', 'formProps', 'urlProps'].includes(namespace)) {\n            if (this.#feature.properties.hasOwnProperty(namespace)) {\n                return this.#feature.properties[namespace].hasOwnProperty(propertyKey);\n            }\n            return false;\n        } else if (namespace === 'meta') {\n            return this.#feature.properties.hasOwnProperty(propertyKey);\n        }\n        throw ReferenceError(`The namespace \"${namespace}\" does not exist in this Feature. Leave the \"namespace\" argument empty to use the \"treeProps\" namespace.`);\n    }\n\n    /**\n     * @returns {undefined}\n     */\n    notifyObserversOfNewObservable() {\n        throw new UnsupportedOperationError();\n    }\n\n    /**\n     * @param {Object} observer - an instance of ObserverInterface that wants to observer this ObservableInterface instance\n     *  - E.g. this feature is a node and a LeafletLayer instance wants to observe it\n     * @returns {undefined}\n     */\n    registerObserver(observer) {\n        // - The function signature above is part of the ObservableInterface API. The implementation below is not\n        if (observer instanceof Feature) {\n            throw new ObserverError();\n        }\n        this.#observers.push(observer);\n    }\n\n    /**\n     * @param {Object} observer - an instance of ObserverInterface that no longer should observe this ObservableInterface instance\n     *  - E.g. a TreeFeatureModal instance shouldn't observe this ObservableInterface instance anymore\n     * @returns {undefined}\n     */\n    removeObserver(observer) {\n        // - The function signature above is part of the ObservableInterface API. The implementation below is not\n        if (observer instanceof Feature) {\n            throw new ObserverError();\n        }\n        const index = this.#observers.indexOf(observer);\n        if (index > -1) {\n            this.#observers.splice(index, 1);\n        } else {\n            // - Unfortunately, <Leaflet layer>.remove() also removes the FeatureEditModal in the pop-up from this.#observers for some reason before\n            //   the FeatureEditModal is removed. I can't control the behavior of Leaflet, so I can't throw an error here\n            //console.log('The observer was not found in this.#observers');\n            //throw Error('The observer was not found in this.#observers');\n        }\n    }\n\n    /**\n     * @param {Array} coordinates - an array of coordinates for this ObservableInterface instance\n     *  - E.g. for Feature instances this should be in [<lon>, <lat>] format\n     * @returns {undefined}\n     */\n    setCoordinates(coordinates) {\n        // - The function signature above is part of the ObservableInterface API. The implementation below is not\n        if (!(coordinates instanceof Array)) {\n            throw TypeError('\"coordinates\" argument must be instanceof Array.');\n        }\n        // - Check that all coordinate values are valid numbers\n        const flatCoordinates = coordinates.flat(3);\n        for (let i = 0; i < flatCoordinates.length; i++) {\n            const coordinateType = typeof flatCoordinates[i];\n            if (!['string', 'number'].includes(coordinateType)) {\n                throw TypeError(`${flatCoordinates[i]} must be typeof number or string.`);\n            }\n            flatCoordinates[i] = +flatCoordinates[i];\n            if (isNaN(flatCoordinates[i])) {\n                throw TypeError(`${flatCoordinates[i]} must be a valid number.`);\n            }\n        }\n        if (this.isNode()) {\n            coordinates[0] = +coordinates[0];\n            coordinates[1] = +coordinates[1];\n            if (coordinates.length !== 2) {\n                throw Error('\"coordinates\" argument must be an array of two numbers for node features.');\n            }\n        } else if (this.isLine()) {\n            coordinates[0][0] = +coordinates[0][0];\n            coordinates[0][1] = +coordinates[0][1];\n            coordinates[1][0] = +coordinates[1][0];\n            coordinates[1][1] = +coordinates[1][1];\n            if (coordinates.length !== 2) {\n                throw Error('\"coordinates\" argument must be an array of two arrays of two numbers for line features.');\n            }\n        } else if (this.isPolygon()) {\n            for (let i = 0; i < coordinates.length; i++) {\n                let ary = coordinates[i];\n                for (const innerAry of ary) {\n                    innerAry[0] = +innerAry[0];\n                    innerAry[1] = +innerAry[1];\n                    if (innerAry.length !== 2) {\n                        throw Error('\"coordinates\" argument must be an array of one or two arrays, each containing at least two arrays of points for polygon features.');\n                    }\n                }\n            }\n        } else {\n            throw Error('MultiPoint, MultiLineString, MultiPolygon, and GeometryCollection are not yet supported by setCoordinates().');\n        }\n        const oldCoordinates = this.getCoordinates();\n        this.#feature.geometry.coordinates = coordinates;\n        this.updateCoordinatesOfObservers(oldCoordinates);\n    }\n\n    /**\n     * - Set the \"graph\" property of this Feature instance to optimize communication between Feature observables and Feature observers. All\n     *   non-component Feature instances are part of the same graph. I can use a graph because all Features have a unique ID, but the overall Observer\n     *   Pattern doesn't assume that Observables have unique IDs or that a graph exists at all\n     * - Calling this method essentially makes this Feature observable to all other features and makes it an observer of all other features\n     * - This method is only supposed to be invoked by an instance of the FeatureGraph class\n     * @param {FeatureGraph} graph - an instance of my FeatureGraph class that has already been built\n     * @returns {undefined}\n     */\n    setGraph(graph) {\n        if (!(graph instanceof FeatureGraph)) {\n            throw TypeError('\"graph\" argument must be an instanceof FeatureGraph.');\n        }\n        if (this.#graph instanceof FeatureGraph) {\n            throw Error(`The feature \"${this.getProperty('treeKey', 'meta')}\" is already in a FeatureGraph.`);\n        }\n        this.#graph = graph;\n    }\n\n    /**\n     * @param {string} propertyKey - the property key of the property that is being changed or created in this ObservableInterface instance\n     * @param {(string|Object)} propertyValue - the property value of the property that is being changed or created in this observable. I don't like\n     *  to store Objects, Arrays, etc. as property values, but it's required for certain observables like those that represent form objects\n     * @param {string} [namespace='treeProps'] - the namespace of the property key in this observable. Whether a new namespace is created if a\n     *  non-existent namespace is passed is implementation dependent. I throw a ReferenceError because I don't want new namespaces\n     * @returns {undefined}\n     */\n    setProperty(propertyKey, propertyValue, namespace='treeProps') {\n        // - The function signature above is part of the ObservableInterface API. The implementation below is not\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be a string.');\n        }\n        if (typeof namespace !== 'string') {\n            throw TypeError('\"namespace\" argument must be a string.');\n        }\n        if (['treeProps', 'formProps', 'urlProps'].includes(namespace)) {\n            if (this.#feature.properties.hasOwnProperty(namespace)) {\n                let oldPropertyValue = propertyValue;\n                if (this.hasProperty(propertyKey, namespace)) {\n                    oldPropertyValue = this.getProperty(propertyKey, namespace);\n                }\n                this.#feature.properties[namespace][propertyKey] = propertyValue;\n                this.updatePropertyOfObservers(propertyKey, oldPropertyValue, namespace);\n                return;\n            } \n            throw ReferenceError(`This feature does not have the namespace \"${namespace}\".`);\n        } else if (namespace === 'meta') {\n            let oldPropertyValue = propertyValue;            \n            if (this.hasProperty(propertyKey, namespace)) {\n                oldPropertyValue = this.getProperty(propertyKey, namespace);\n            }\n            this.#feature.properties[propertyKey] = propertyValue;\n            this.updatePropertyOfObservers(propertyKey, oldPropertyValue, namespace);\n            return;\n        }\n        throw ReferenceError(`The namespace \"${namespace}\" does not exist in this Feature. Leave the \"namespace\" argument empty to use the \"treeProps\" namespace.`);\n    }\n\n    /**\n     * - Don't pass arbitrary messages between Observables and Observers. If I want to do crazy things like use one node as a pivot point to rotate\n     *   all of the other nodes, all of the rotating nodes should have a \"pivot\" property in the meta namespace that matches this Observable or\n     *   something, and they should check that property when coordinates are updated and respond appropriately\n     * @param {Array} oldCoordinates - the previous coordinates of this ObservableInterface instance prior to the new, current coordinates\n     * @returns {undefined}\n     */\n    updateCoordinatesOfObservers(oldCoordinates) {\n        // - The function signature above is part of the ObservableInterface API. The implementation below is not\n        this.#observers.forEach(ob => ob.handleUpdatedCoordinates(this, oldCoordinates));\n        if (this.#graph instanceof FeatureGraph) {\n            this.#graph.handleUpdatedCoordinates(this, oldCoordinates);\n        }\n    }\n\n    /**\n     * - This should really be called \"notifyObserversOfChangedProperty\"\n     * @param {string} propertyKey - the property key of the property that is being created/changed/deleted in this ObservableInterface instance\n     * @param {(string|Object)} oldPropertyValue - the previous property value of the property that was created/changed/deleted in this observable. I\n     *  don't like to store Objects, Arrays, etc. as property values, but it's required for certain observables like those that represent form objects\n     * @param {string} [namespace='treeProps'] - the namespace of the property key in this observable. Whether a new namespace is created if a\n     *  non-existent namespace is passed is implementation dependent. I throw a ReferenceError because I don't want new namespaces\n     * @returns {undefined}\n     */\n    updatePropertyOfObservers(propertyKey, oldPropertyValue, namespace='treeProps') {\n        // - The function signature above is part of the ObservableInterface API. The implementation below is not\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be typeof string.');\n        }\n        if (typeof namespace !== 'string') {\n            throw TypeError('\"namespace\" argument must be typeof string.');\n        }\n        this.#observers.forEach(ob => ob.handleUpdatedProperty(this, propertyKey, oldPropertyValue, namespace));\n        if (this.#graph instanceof FeatureGraph) {\n            this.#graph.handleUpdatedProperty(this, propertyKey, oldPropertyValue, namespace);\n        }\n    }\n\n    // *******************************\n    // ** ObserverInterface methods **\n    // *******************************\n\n    /**\n     * - Remove this ObserverInterface instance (i.e. \"this\") from the ObservableInterface instance (i.e. \"observable\") that has been deleted, and\n     *   perform other actions as needed\n     * @param {Object} observable - an instance of ObservableInterface that this Observer is observing\n     * @returns {undefined}\n     */\n    handleDeletedObservable(observable) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        throw new UnsupportedOperationError();\n    }\n\n    handleNewObservable(observable) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        throw new UnsupportedOperationError();\n    }\n\n    /**\n     * - Update this ObserverInterface instance (i.e. \"this\") based on the coordinates of the ObservableInterface instance (i.e. \"observable\") that\n     *   have just changed and perform other actions as needed\n     *  - E.g. update the line observer's coordinates to match the node observable's coordinates if the line was connected to the node\n     * @param {Object} observable - an instance of ObservableInterface that this Observer is observing\n     * @param {Array} oldCoordinates - the old coordinates of the observable prior to the change in coordinates\n     * @returns {undefined}\n     */\n    handleUpdatedCoordinates(observable, oldCoordinates) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(oldCoordinates instanceof Array)) {\n            throw TypeError('\"oldCoordinates\" argument must be an array.');\n        }\n        const observableName = observable.getProperty('name');\n        const thisName = this.getProperty('name');\n        const thisKey = this.getProperty('treeKey', 'meta');\n        if (this.isLine()) {\n            const fromName = this.getProperty('from');\n            const toName = this.getProperty('to');\n            if (![fromName, toName].includes(observableName)) {\n                if (observable.isLine()) {\n                    // - This isn't an error. It means a child line is connected to this line and the child line was updated. Since parents observe\n                    //   children, this line gets a call to update even though it doesn't need to do anything\n                } else {\n                    throw Error(`The Feature instance \"${observableName}\" is not connected to the line Feature instance \"${thisName}.\"`);\n                }\n            }\n            const fromKey = this.#graph.getKey(fromName, thisKey);\n            const toKey = this.#graph.getKey(toName, thisKey);\n            const { sourceLat, sourceLon, targetLat, targetLon } = this.#graph.getLineLatLon(fromKey, toKey);\n            this.setCoordinates([[sourceLon, sourceLat], [targetLon, targetLat]]);\n        } else {\n            throw Error(`The Feature instance \"${observableName}\" tried to update the Feature instance \"${thisName}\", but there is no relationship between the features.`);\n        }\n    }\n\n    /**\n     * - Update this ObserverInstance (i.e. \"this\") based on the property of the ObservableInterface instance (i.e. \"observable\") that has just\n     *   changed and perform other actions as needed\n     *  - E.g. update this line's \"to\" and/or \"from\" property to match the \"name\" property of the node that was just changed\n     * @param {Object} observable - the observable that this observer is observing\n     * @param {string} propertyKey - the property key of the property that has been created/changed/deleted in the observable\n     * @param {(string|Object)} oldPropertyValue - the previous value of the property that has been created/changed/deleted in the observable\n     * @param {string} namespace - the namespace of the property that has been created/changed/deleted in the observable\n     * @returns {undefined}\n     */\n    handleUpdatedProperty(observable, propertyKey, oldPropertyValue, namespace='treeProps') {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be a string.');\n        }\n        if (typeof namespace !== 'string') {\n            throw TypeError('\"namespace\" argument must be a string.');\n        }\n        if (propertyKey === 'name') {\n            ['from', 'to', 'parent'].forEach(k => {\n                if (this.hasProperty(k) && this.getProperty(k) === oldPropertyValue) {\n                    this.setProperty(k, observable.getProperty('name'));\n                }\n            });\n        }\n    }\n\n    // ********************\n    // ** Public methods **\n    // ********************\n\n    /**\n     * @returns {boolean} whether this ObservableInterface instance (i.e. a node) is a child of another node or line\n     */\n    isChild() {\n        return this.hasProperty('parent');\n    }\n\n    /**\n     * @returns {boolean} whether this ObservableInterface instance is a component feature, which is a non-displayed ObservableInterface instance that\n     * is used to create displayed ObservableInterface instances. Non-configuration-object components DO have real coordinates.\n     */\n    isComponentFeature() {\n        return this.hasProperty('treeKey', 'meta') && this.getProperty('treeKey', 'meta').startsWith('component:');\n    }\n\n    /**\n     * @returns {boolean} whether this ObservableInterface instance is displayed in the map visualization\n     */\n    isConfigurationObject() {\n        return !this.hasCoordinates();\n    }\n\n    // - Deprecated because I should never be able to feed a GeometryCollection to the constructor anyway\n    //isGeometryCollection() {\n    //    return this.#feature.type === 'GeometryCollection' && !this.isConfigurationObject();\n    //}\n\n    /**\n     * @returns {boolean} whether this ObservableInterface instance is a line\n     */\n    isLine() {\n        return this.#feature.geometry.type === 'LineString' && !this.isConfigurationObject();\n    }\n\n    /**\n     * - Deprecated because I don't insert modal features into the FeatureGraph anymore, but don't delete\n     * @returns {boolean} whether this ObservableInterface instance is a modal feature, which is a non-displayed ObservableInterface instance that is\n     * used to create a modal.\n     */\n    //isModalFeature() {\n    //    return this.getProperty('treeKey', 'meta').startsWith('modal');\n    //}\n\n    isMultiLineString() {\n        return this.#feature.geometry.type === 'MultiLineString' && !this.isConfigurationObject();\n    }\n\n    isMultiPoint() {\n        return this.#feature.geometry.type === 'MultiPoint' && !this.isConfigurationObject();\n    }\n\n    isMultiPolygon() {\n        return this.#feature.geometry.type === 'MultiPolygon' && !this.isConfigurationObject();\n    }\n\n    /**\n     * @returns {boolean} whether this ObservableInterface instance is a node\n     */\n    isNode() {\n        return this.#feature.geometry.type === 'Point' && !this.isConfigurationObject();\n    }\n\n    /**\n     * @returns {boolean} whether this ObservableInterface instance is a parent-child line\n     */\n    isParentChildLine() {\n        return this.hasProperty('treeKey', 'meta') && this.getProperty('treeKey', 'meta').startsWith('parentChild:');\n    }\n\n    isPolygon() {\n        return this.#feature.geometry.type === 'Polygon' && !this.isConfigurationObject();\n    }\n\n    /**\n     * - Reset this Feature's coordinates and properties to how they were when the page was loaded\n     * @returns {undefined}\n     */\n    resetState() {\n        this.setCoordinates(structuredClone(this.#originalFeature.geometry.coordinates));\n        for (const [key, val] of Object.entries(this.#feature.properties)) {\n            if (!this.#originalFeature.properties.hasOwnProperty(key)) {\n                this.deleteProperty(key, 'meta');\n            } else {\n                this.setProperty(key, this.#originalFeature.properties[key], 'meta');\n            }\n            if (key === 'treeProps') {\n                for (const [tKey, tVal] of Object.entries(this.#feature.properties.treeProps)) {\n                    if (!this.#originalFeature.properties.treeProps.hasOwnProperty(tKey)) {\n                        this.deleteProperty(tKey);\n                    } else {\n                        this.setProperty(tKey, this.#originalFeature.properties.treeProps[tKey]);\n                    }\n                }\n            }\n            // - Modal features can't be edited by the user, so I don't need to deal with formProps or urlProps\n        }\n    }\n}\n\nclass UnsupportedOperationError extends Error {\n\n    constructor() {\n        super();\n        this.message = `An interface defines this method, but the method is not implemented in this class.`;\n        this.name = 'UnsupportedOperationError';\n    }\n}\n\nclass ObserverError extends Error {\n    \n    constructor() {\n        super();\n        this.message = `This type of ObserverInterface instance is not allowed to observe this ObservableInterface instance`;\n        this.name = 'ObserverError';\n    }\n}\n</script>\n<script>\n\"use strict\";\n\n/*\n * @returns {Modal}\n */\nfunction getLoadingModal() {\n    const modal = new Modal();\n    modal.showProgress(true, 'Loading Map...');\n    modal.addStyleClasses(['outerModal', 'fitContent'], 'divElement');\n    return modal;\n}\n\n/**\n * @param {Feature} - an ObservableInterface instance\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {Modal}\n */\nfunction _getAnonymizationModal(observable, controller) {\n    if (!(observable instanceof Feature)) {\n        throw TypeError('\"observable\" argument must be instanceof Feature.');\n    }\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    // - namesAndLabelsSelect\n    const namesAndLabelsSelect = document.createElement('select');\n    namesAndLabelsSelect.name = 'anonymizeNameOption';\n    let option = document.createElement('option');    \n    option.text = 'No Change';\n    option.value = 'noChange';\n    namesAndLabelsSelect.add(option);\n    option = document.createElement('option');\n    option.text = 'Pseudonymize';\n    option.value = 'pseudonymize';\n    namesAndLabelsSelect.add(option);\n    option = document.createElement('option');\n    option.text = 'Randomize';\n    option.value = 'randomize';\n    namesAndLabelsSelect.add(option);\n    const namesAndLabelsSelectDiv = _getHorizontalFlexDiv();\n    namesAndLabelsSelectDiv.classList.add('centerCrossAxisFlex');\n    namesAndLabelsSelectDiv.classList.add('indent1');\n    namesAndLabelsSelectDiv.appendChild(namesAndLabelsSelect);\n    const namesAndLabelsHeading = document.createElement('span');\n    namesAndLabelsHeading.textContent = 'Names and Labels';\n    const namesAndLabelsHeadingDiv = _getHorizontalFlexDiv();\n    namesAndLabelsHeadingDiv.classList.add('centerCrossAxisFlex');\n    namesAndLabelsHeadingDiv.appendChild(namesAndLabelsHeading);\n    // - locationsSelect\n    const locationsSelect = document.createElement('select');\n    locationsSelect.name = 'anonymizeLocationOption';\n    option = document.createElement('option');\n    option.text = 'No Change';\n    option.value = 'noChange';\n    locationsSelect.add(option);\n    option = document.createElement('option');\n    option.text = 'Randomize';\n    option.value = 'randomize';\n    locationsSelect.add(option);\n    option = document.createElement('option');\n    option.text = 'Force Layout';\n    option.value = 'forceLayout';\n    locationsSelect.add(option);\n    option = document.createElement('option');\n    option.text = 'Translate';\n    option.value = 'translation';\n    locationsSelect.add(option);\n    const locationsSelectDiv = _getHorizontalFlexDiv();\n    locationsSelectDiv.classList.add('centerCrossAxisFlex');\n    locationsSelectDiv.classList.add('indent1');\n    locationsSelectDiv.appendChild(locationsSelect);\n    const locationsHeading = document.createElement('span');\n    locationsHeading.textContent = 'Locations';\n    const locationsHeadingDiv = _getHorizontalFlexDiv();\n    locationsHeadingDiv.classList.add('centerCrossAxisFlex');\n    locationsHeadingDiv.appendChild(locationsHeading);\n    // - Locations inputs\n    //  - Coordinates input\n    const coordinatesInput = document.createElement('input');\n    coordinatesInput.name = 'new_center_coords';\n    coordinatesInput.placeholder = 'lat\u00b0, lon\u00b0';\n    coordinatesInput.pattern = '\\\\(?(-?\\\\d+(\\\\.\\\\d+)?),\\\\s*(-?\\\\d+(\\\\.\\\\d+)?)\\\\)?';\n    //  - Horizontal translation input\n    const horizontalTranslationInput = document.createElement('input');\n    horizontalTranslationInput.name = 'translateRight';\n    horizontalTranslationInput.placeholder = '(+/-)meters';\n    horizontalTranslationInput.pattern = '[-+]?\\\\d+';\n    //  - Vertical translation input\n    const verticalTranslationInput = document.createElement('input');\n    verticalTranslationInput.name = 'translateUp'\n    verticalTranslationInput.placeholder = '(+/-)meters';\n    verticalTranslationInput.pattern = '[-+]?\\\\d+';\n    //  - Rotation input\n    const rotationInput = document.createElement('input');\n    rotationInput.name = 'rotate';\n    rotationInput.placeholder = '(+/-)angle\u00b0';\n    rotationInput.pattern = '[-+]?\\\\d+(\\\\.\\\\d+)?'\n    //  - Scale input\n    const scaleInput = document.createElement('input');\n    scaleInput.name = 'scale';\n    scaleInput.value = '.01';\n    scaleInput.pattern = '(\\\\d+)?(\\\\.\\\\d+)?';\n    const scaleTipDiv = document.createElement('div');\n    const scaleTipSpan = document.createElement('span');\n    scaleTipSpan.textContent = 'Estimates: 0.001 = street-density, 0.01 = neighborhood-density, 0.1 = city-density, 1 = state-density';\n    scaleTipDiv.appendChild(scaleTipSpan);\n    // - Electrical properties\n    const electricalPropertiesHeading = document.createElement('span');\n    electricalPropertiesHeading.textContent = 'Electrical Properties';\n    const electricalPropertiesHeadingDiv = _getHorizontalFlexDiv();\n    electricalPropertiesHeadingDiv.appendChild(electricalPropertiesHeading);\n    electricalPropertiesHeadingDiv.classList.add('centerCrossAxisFlex');\n    // - conductorCheckbox\n    const conductorCheckbox = document.createElement('input');\n    conductorCheckbox.id = 'modifyLengthSize';\n    conductorCheckbox.type = 'checkbox';\n    conductorCheckbox.name = 'modifyLengthSize';\n    const conductorLabel = document.createElement('label');    \n    conductorLabel.htmlFor = 'modifyLengthSize';\n    conductorLabel.innerText = 'Modify Conductor Length and Cable Size';\n    // - smoothAMICheckbox\n    const smoothAMICheckbox = document.createElement('input');\n    smoothAMICheckbox.id = 'smoothLoadGen';\n    smoothAMICheckbox.type = 'checkbox';\n    smoothAMICheckbox.name = 'smoothLoadGen';\n    const smoothAMILabel = document.createElement('label');    \n    smoothAMILabel.htmlFor = 'smoothLoadGen';\n    smoothAMILabel.innerText = 'Smooth AMI Loadshapes';\n    // - shuffleLoadsCheckbox\n    const shuffleLoadsCheckbox = document.createElement('input');\n    shuffleLoadsCheckbox.id = 'shuffleLoadGen';\n    shuffleLoadsCheckbox.type = 'checkbox';\n    shuffleLoadsCheckbox.name = 'shuffleLoadGen';\n    const shuffleLoadsLabel = document.createElement('label');    \n    shuffleLoadsLabel.htmlFor = 'shuffleLoadGen';\n    shuffleLoadsLabel.innerText = ' Shuffle Loads and Generators';\n    const shuffleLoadsInput = document.createElement('input');\n    shuffleLoadsInput.name = 'shufflePerc';\n    shuffleLoadsInput.placeholder = '(1-100)'\n    shuffleLoadsInput.pattern = '(\\\\d+)?(\\\\.\\\\d+)?';\n    // - addNoiseCheckbox\n    const addNoiseCheckbox = document.createElement('input');\n    addNoiseCheckbox.id = 'addNoise';\n    addNoiseCheckbox.type = 'checkbox';\n    addNoiseCheckbox.name = 'addNoise';\n    const addNoiseLabel = document.createElement('label');    \n    addNoiseLabel.htmlFor = 'addNoise';\n    addNoiseLabel.innerText = 'Add Noise';\n    const addNoiseInput = document.createElement('input');\n    addNoiseInput.name = 'noisePerc';\n    addNoiseInput.placeholder = '(1-100)'\n    addNoiseInput.pattern = '(\\\\d+)?(\\\\.\\\\d+)?';\n    // - Submit button\n    const submitButton = _getSubmitButton();\n    const submitDiv = _getSubmitDiv(submitButton);\n    // - Event listeners\n    // - namesAndLabelsSelect\n    namesAndLabelsSelect.addEventListener('change', function() {\n        observable.setProperty(this.name, this.value, 'formProps');\n    });\n    // - locationsSelect\n    locationsSelect.addEventListener('change', function() {\n        observable.setProperty(this.name, this.value, 'formProps');\n        const translateModal = this.parentElement.nextElementSibling;\n        if (this.value === 'translation') {\n            translateModal.classList.remove('collapsed');\n            if (!translateModal.classList.contains('expanded')) {\n                translateModal.classList.add('expanded');\n            }\n        } else {\n            translateModal.classList.remove('expanded');\n            if (!translateModal.classList.contains('collapsed')) {\n                translateModal.classList.add('collapsed');\n            }\n        }\n        const scaleModal = this.parentElement.nextElementSibling.nextElementSibling;\n        if (this.value === 'forceLayout') {\n            scaleModal.classList.remove('collapsed');\n            if (!scaleModal.classList.contains('expanded')) {\n                scaleModal.classList.add('expanded');\n            }\n        } else {\n            scaleModal.classList.remove('expanded');\n            if (!scaleModal.classList.contains('collapsed')) {\n                scaleModal.classList.add('collapsed');\n            }\n        }\n    });\n    // - Locations inputs\n    coordinatesInput.addEventListener('change', function() {\n        const value = this.value.trim();\n        observable.setProperty(this.name, value, 'formProps');\n    });\n    horizontalTranslationInput.addEventListener('change', function() {\n        const value = this.value.trim();\n        observable.setProperty(this.name, value, 'formProps');\n    });\n    verticalTranslationInput.addEventListener('change', function() {\n        const value = this.value.trim();\n        observable.setProperty(this.name, value, 'formProps');\n    });\n    rotationInput.addEventListener('change', function() {\n        const value = this.value.trim();\n        observable.setProperty(this.name, value, 'formProps');\n    });\n    scaleInput.addEventListener('change', function() {\n        const value = this.value.trim();\n        observable.setProperty(this.name, value, 'formProps');\n    });\n    // - conductorCheckbox\n    conductorCheckbox.addEventListener('change', function() {\n        let value = '';\n        if (this.checked) {\n            value = 'modifyLengthSize';\n        }\n        observable.setProperty(this.name, value, 'formProps');\n    });\n    // - smoothAMICheckbox\n    smoothAMICheckbox.addEventListener('change', function() {\n        let value = '';\n        if (this.checked) {\n            value = 'smoothLoadGen';\n        }\n        observable.setProperty(this.name, value, 'formProps');\n    });\n    // - shuffleLoadsCheckbox\n    shuffleLoadsCheckbox.addEventListener('change', function() {\n        let value = '';\n        if (this.checked) {\n            value = 'shuffleLoadGen';\n        } else {\n            shuffleLoadsInput.setCustomValidity('');\n            shuffleLoadsInput.value = '';\n        }\n        observable.setProperty(this.name, value, 'formProps');\n        let parentElement = this.parentElement;\n        while (!parentElement.classList.contains('js-div--modal')) {\n            parentElement = parentElement.parentElement;\n        }\n        if (this.checked) {\n            parentElement.nextSibling.classList.remove('collapsed');\n            parentElement.nextSibling.classList.add('expanded');\n        } else {\n            if (!parentElement.nextSibling.classList.contains('collapsed')) {\n                parentElement.nextSibling.classList.add('collapsed');\n            }\n        }\n    });\n    shuffleLoadsInput.addEventListener('change', function() {\n        this.setCustomValidity('');\n        const value = +this.value.trim();\n        if (isNaN(value)) {\n            this.setCustomValidity('Please enter a valid integer or float.');\n            this.reportValidity();\n        } else if (value <= 0 || value > 100 || this.validity.patternMismatch) {\n            this.setCustomValidity('Please enter a valid integer or float greater than 0 and less than or equal to 100.');\n            this.reportValidity();\n        } else if (this.validity.valid) {\n            observable.setProperty(this.name, value, 'formProps');\n        }\n    });\n    // - addNoiseCheckbox\n    addNoiseCheckbox.addEventListener('change', function() {\n        let value = '';\n        if (this.checked) {\n            value = 'addNoise';\n        } else {\n            addNoiseInput.setCustomValidity('');\n            addNoiseInput.value = '';\n        }\n        observable.setProperty(this.name, value, 'formProps');\n        let parentElement = this.parentElement;\n        while (!parentElement.classList.contains('js-div--modal')) {\n            parentElement = parentElement.parentElement;\n        }\n        if (this.checked) {\n            parentElement.nextSibling.classList.remove('collapsed');\n            parentElement.nextSibling.classList.add('expanded');\n        } else {\n            if (!parentElement.nextSibling.classList.contains('collapsed')) {\n                parentElement.nextSibling.classList.add('collapsed');\n            }\n        }\n    });\n    addNoiseInput.addEventListener('change', function() {\n        this.setCustomValidity('');\n        const value = +this.value.trim();\n        if (isNaN(value)) {\n            this.setCustomValidity('Please enter a valid integer or float.');\n            this.reportValidity();\n        } else if (value <= 0 || value > 100 || this.validity.patternMismatch) {\n            this.setCustomValidity('Please enter a valid integer or float greater than 0 and less than or equal to 100.');\n            this.reportValidity();\n        } else if (this.validity.valid) {\n            observable.setProperty(this.name, value, 'formProps');\n        }\n    });\n    // - Modal\n    const mainModal = new Modal();\n    mainModal.addStyleClasses(['outerModal', 'fitContent'], 'divElement');\n    const modalInsert = document.getElementById('modalInsert');\n    submitButton.addEventListener('click', async function() {\n        if (coordinatesInput.checkValidity() && horizontalTranslationInput.checkValidity() && verticalTranslationInput.checkValidity() && rotationInput.checkValidity() && scaleInput.checkValidity() && shuffleLoadsInput.checkValidity() && addNoiseInput.checkValidity()) {\n            modalInsert.removeEventListener('click', hideModalInsert);\n            const saveFeature = _getSaveFeature();\n            saveFeature.setProperty('feederObjectJson', JSON.stringify(controller.observableGraph.getObservableExportData()), 'formProps');\n            const saveModal = _getSaveModal(controller);\n            modalInsert.replaceChildren(saveModal.divElement);\n            await controller.submitFeature(saveFeature, saveModal, null, false);\n            modalInsert.removeEventListener('click', hideModalInsert);\n            document.getElementById('modalInsert').classList.add('visible');\n            modalInsert.replaceChildren(mainModal.divElement);\n            mainModal.showProgress(true, 'Anonymization working...', ['caution']);\n            controller.submitFeature(observable, mainModal, submitButton);\n        } else {\n            coordinatesInput.reportValidity();\n            horizontalTranslationInput.reportValidity();\n            verticalTranslationInput.reportValidity();\n            rotationInput.reportValidity();\n            scaleInput.reportValidity();\n            shuffleLoadsInput.reportValidity();\n            addNoiseInput.reportValidity();\n        }\n    });\n    mainModal.setTitle('Anonymization');\n    mainModal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'titleElement');\n    mainModal.insertElement(namesAndLabelsHeadingDiv);\n    mainModal.insertElement(namesAndLabelsSelectDiv);\n    mainModal.insertElement(locationsHeadingDiv);\n    mainModal.insertElement(locationsSelectDiv);\n    const translateModal = new Modal();\n    translateModal.insertTBodyRow(['Shift center to', coordinatesInput, 'coordinates within the contiguous/non-contiguous USA']);\n    translateModal.insertTBodyRow(['Translate', horizontalTranslationInput, 'meters rightwards']);\n    translateModal.insertTBodyRow(['Translate', verticalTranslationInput, 'meters upwards']);\n    translateModal.insertTBodyRow(['Rotate', rotationInput, 'degrees counterclockwise']);\n    translateModal.addStyleClasses(['collapsed', 'indent2'], 'divElement');\n    mainModal.insertElement(translateModal.divElement);\n    const scaleModal = new Modal();\n    scaleModal.insertTBodyRow(['Force layout with following scale factor', scaleInput]);\n    scaleModal.insertElement(scaleTipDiv);\n    scaleModal.addStyleClasses(['collapsed', 'indent2'], 'divElement');\n    mainModal.insertElement(scaleModal.divElement);\n    const electricalPropertiesHeadingModal = new Modal();\n    electricalPropertiesHeadingModal.insertElement(electricalPropertiesHeadingDiv);\n    mainModal.insertElement(electricalPropertiesHeadingModal.divElement);\n    const electricalPropertiesModal = new Modal();\n    electricalPropertiesModal.insertTBodyRow([conductorCheckbox, conductorLabel]);\n    electricalPropertiesModal.insertTBodyRow([smoothAMICheckbox, smoothAMILabel]);\n    electricalPropertiesModal.insertTBodyRow([shuffleLoadsCheckbox, shuffleLoadsLabel]);\n    electricalPropertiesModal.addStyleClasses(['indent1'], 'divElement');\n    mainModal.insertElement(electricalPropertiesModal.divElement);\n    const shuffleLoadsInputModal = new Modal();\n    shuffleLoadsInputModal.insertTBodyRow(['Shuffle', shuffleLoadsInput, 'percent']);\n    shuffleLoadsInputModal.addStyleClasses(['collapsed', 'indent2'], 'divElement');\n    mainModal.insertElement(shuffleLoadsInputModal.divElement);\n    const addNoiseCheckboxModal = new Modal();\n    addNoiseCheckboxModal.insertTBodyRow([addNoiseCheckbox, addNoiseLabel])\n    addNoiseCheckboxModal.addStyleClasses(['indent1'], 'divElement');\n    mainModal.insertElement(addNoiseCheckboxModal.divElement);\n    const addNoiseInputModal = new Modal();\n    addNoiseInputModal.insertTBodyRow(['Add', addNoiseInput, 'percent noise']);\n    addNoiseInputModal.addStyleClasses(['collapsed', 'indent2'], 'divElement');\n    mainModal.insertElement(addNoiseInputModal.divElement);\n    const submitDivModal = new Modal();\n    submitDivModal.insertElement(submitDiv);\n    submitDivModal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'containerElement');\n    mainModal.insertElement(submitDivModal.divElement);\n    return mainModal;\n}\n\n/**\n * @param {FeatureController} controller - a FeatureController instance\n * @returns {HTMLDivElement}\n */\nfunction getAnonymizationDiv(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const feature = new Feature({\n        geometry: { 'coordinates': [null, null], 'type': 'Point' },\n        properties: {\n            treeKey: 'modal:anonymization',\n            urlProps: {\n                fileExistsUrl: {\n                    method: 'GET',\n                    url: `/uniqObjName/Feeder/${gThisOwner}/${gThisFeederName}/${gThisModelName}`\n                },\n                pollUrl: {\n                    method: 'GET',\n                    url: `/checkConversion/${gThisModelName}/${gThisOwner}`\n                },\n                submitUrl: {\n                    method: 'POST',\n                    url: `/anonymize/${gThisOwner}/${gThisFeederName}`\n                }\n            },\n            formProps: {\n                modelName: gThisModelName,\n                anonymizeNameOption: 'noChange',\n                anonymizeLocationOption: 'noChange',\n                new_center_coords: '',\n                translateRight: '',\n                translateUp: '',\n                rotate: '',\n                // - In Python, bool('') returns a False bool. FormData objects can only send strings\n                modifyLengthSize: '',       // 'modifyLengthSize',\n                smoothLoadGen: '',          // 'smoothLoadGen',\n                shuffleLoadGen: '',         // 'shuffleLoadGen',\n                shufflePerc: '',\n                addNoise: '',               // 'addNoise'\n                noisePerc: '',\n                scale: '.01' \n            },\n        },\n        type: 'Feature'\n    });\n    const modal = _getAnonymizationModal(feature, controller);\n    const modalInsert = document.getElementById('modalInsert');\n    const div = _getMenuDiv('Anonymization...');\n    div.addEventListener('click', function() {\n        modalInsert.replaceChildren(modal.divElement);\n        modalInsert.classList.add('visible');\n    });\n    return div;\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {Modal}\n */\nfunction _getSaveModal(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const modal = new Modal();\n    modal.showProgress(true, 'Saving...');\n    modal.addStyleClasses(['outerModal', 'fitContent'], 'divElement');\n    return modal;\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {HTMLDivElement}\n */\nfunction getSaveDiv(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const saveFeature = _getSaveFeature();\n    const modal = _getSaveModal(controller);\n    const div = _getMenuDiv('Save');\n    div.id = 'saveDiv';\n    const modalInsert = document.getElementById('modalInsert');\n    div.addEventListener('click', function() {\n        modalInsert.removeEventListener('click', hideModalInsert);\n        modalInsert.replaceChildren(modal.divElement);\n        modalInsert.classList.add('visible');\n        // - I only export features that were originally in the OMD (i.e. those features with numeric tree keys)\n        saveFeature.setProperty('feederObjectJson', JSON.stringify(controller.observableGraph.getObservableExportData()), 'formProps')\n        controller.submitFeature(saveFeature, modal, null, false); \n    });\n    return div;\n}\n\n/**\n * @returns {Feature}\n */\nfunction _getSaveFeature() {\n    return new Feature({\n        geometry: { 'coordinates': [null, null], 'type': 'Point' },\n        properties: {\n            treeKey: 'modal:save',\n            urlProps: {\n                submitUrl: {\n                    method: 'POST',\n                    url: `/saveFeeder/${gThisOwner}/${gThisModelName}/${gThisFeederName}/${gThisFeederNum}`\n                }\n            },\n            // - I need to read all of the data every time the save button is clicked, so set \"feederObjectJson\" in the event handler function\n            formProps: {},\n        },\n        type: 'Feature'\n    });\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {Modal}\n */\nfunction _getRawDataModal(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const modal = new Modal();\n    modal.showProgress(true, 'Opening a window with JSON in it that you can save as a .json file...');\n    modal.addStyleClasses(['outerModal', 'fitContent'], 'divElement');\n    return modal;\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {HTMLDivElement}\n */\nfunction getRawDataDiv(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const modal = _getRawDataModal(controller);\n    const div = _getMenuDiv('View raw data');\n    const modalInsert = document.getElementById('modalInsert');\n    div.addEventListener('click', function() {\n        modalInsert.replaceChildren(modal.divElement);\n        modalInsert.classList.add('visible');\n        const json = JSON.stringify(controller.observableGraph.getObservableExportData());\n        const win = window.open();\n        win.document.write(json);\n    });\n    return div;\n}\n\n/**\n * @param {Feature} observable\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {Modal}\n */\nfunction _getRenameModal(observable, controller) {\n    if (!(observable instanceof Feature)) {\n        throw TypeError('\"observable\" argument must be instanceof Feature.');\n    }\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    // - Input\n    const input = _getNameInput(observable, function(newName) {\n        const fileExistsUrl = {\n            method: 'GET',\n            url: `/uniqObjName/Feeder/${gThisOwner}/${newName}/${gThisModelName}`\n        }\n        observable.setProperty('fileExistsUrl', fileExistsUrl, 'urlProps');\n        const submitUrl = {\n            method: 'GET',\n            url: `/renameFeeder/${gThisOwner}/${gThisModelName}/${gThisFeederName}/${newName}/${gThisFeederNum}`\n        }\n        observable.setProperty('submitUrl', submitUrl, 'urlProps');\n    });\n    // - Submit div\n    const submitButton = _getSubmitButton();\n    const submitDiv = _getSubmitDiv(submitButton);\n    // - Modal\n    const renameModal = new Modal();\n    renameModal.addStyleClasses(['outerModal', 'fitContent'], 'divElement');\n    const modalInsert = document.getElementById('modalInsert');\n    submitButton.addEventListener('click', async function() {\n        if (input.checkValidity()) {\n            modalInsert.removeEventListener('click', hideModalInsert);\n            const saveFeature = _getSaveFeature();\n            saveFeature.setProperty('feederObjectJson', JSON.stringify(controller.observableGraph.getObservableExportData()), 'formProps')\n            const saveModal = _getSaveModal(controller);\n            modalInsert.replaceChildren(saveModal.divElement);\n            await controller.submitFeature(saveFeature, saveModal, null, false);\n            modalInsert.removeEventListener('click', hideModalInsert);\n            document.getElementById('modalInsert').classList.add('visible');\n            modalInsert.replaceChildren(renameModal.divElement);\n            renameModal.showProgress(true, 'Renaming feeder...', ['caution']);\n            controller.submitFeature(observable, renameModal, submitButton);\n        } else {\n            input.reportValidity();\n        }\n    });\n    renameModal.setTitle('Rename Feeder');\n    renameModal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'titleElement');\n    renameModal.insertTBodyRow(['New feeder name:', input]);\n    renameModal.addStyleClasses(['centeredTable'], 'tableElement');\n    renameModal.insertElement(submitDiv);\n    renameModal.addStyleClasses(['verticalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'containerElement');\n    return renameModal;\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {HTMLDivElement}\n */\nfunction getRenameDiv(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const feature = new Feature({\n        geometry: { 'coordinates': [null, null], 'type': 'Point' },\n        properties: {\n            treeKey: 'modal:rename',\n            urlProps: {\n                fileExistsUrl: {\n                    method: 'GET',\n                    url: `/uniqObjName/Feeder/${gThisOwner}/Default Name/${gThisModelName}`\n                },\n                submitUrl: {\n                    method: 'GET',\n                    url: `/renameFeeder/${gThisOwner}/${gThisModelName}/${gThisFeederName}/Default Name/${gThisFeederNum}`\n                }\n            }\n        },\n        type: 'Feature'\n    });\n    const modal = _getRenameModal(feature, controller);\n    const div = _getMenuDiv('Rename...');\n    const modalInsert = document.getElementById('modalInsert');\n    div.addEventListener('click', function() {\n        modalInsert.replaceChildren(modal.divElement);\n        modalInsert.classList.add('visible');\n    });\n    return div;\n}\n\n/**\n * @param {Feature} observable\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {Modal}\n */\nfunction _getLoadFeederModal(observable, controller) {\n    if (!(observable instanceof Feature)) {\n        throw TypeError('\"observable\" argument must be instanceof Feature.');\n    }\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    // - Create list of public feeders\n    let publicFeeders = [];\n    if (gPublicFeeders !== null) {\n        publicFeeders = [...gPublicFeeders];\n        publicFeeders.sort((a, b) => a.name.localeCompare(b.name, 'en', {numeric: true}));\n    }\n    const publicFeedersModal = new Modal();\n    const modalInsert = document.getElementById('modalInsert');\n    publicFeeders.map(obj => {\n        const outerDiv = document.createElement('div');\n        const nameDiv = document.createElement('div');\n        nameDiv.textContent = obj.name;\n        outerDiv.appendChild(nameDiv);\n        const modelDiv = document.createElement('div');\n        modelDiv.textContent = `from \"${obj.model}\"`;\n        outerDiv.appendChild(modelDiv);\n        outerDiv.addEventListener('click', function() {\n            modalInsert.removeEventListener('click', hideModalInsert);\n            observable.setProperty('fileExistsUrl', {\n                method: 'GET', \n                url: `/uniqObjName/Feeder/public/${obj.name}/${obj.model}`\n            }, 'urlProps');\n            observable.setProperty('submitUrl', {\n                method: 'POST',\n                url: `/loadFeeder/${obj.name}/${obj.model}/${gThisModelName}/${gThisFeederNum}/public/${gThisOwner}`,\n            }, 'urlProps');\n            controller.submitFeature(observable, publicFeedersModal); \n        });\n        outerDiv.classList.add('hoverable');\n        return outerDiv;\n    }).forEach(div => publicFeedersModal.insertTBodyRow([div]));\n    publicFeedersModal.setTitle('Public Feeders');\n    publicFeedersModal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'titleElement');\n    publicFeedersModal.addStyleClasses(['fullWidth'], 'tableElement');\n    // - Create list of user feeders\n    let userFeeders = [];\n    if (gUserFeeders !== null) {\n        userFeeders = [...gUserFeeders];\n        userFeeders.sort((a, b) => a.name.localeCompare(b.name, 'en', {numeric: true}));\n    }\n    const userFeedersModal = new Modal();\n    userFeeders.map(obj => {\n        const outerDiv = document.createElement('div');\n        const nameDiv = document.createElement('div');\n        nameDiv.textContent = obj.name;\n        outerDiv.appendChild(nameDiv);\n        const modelDiv = document.createElement('div');\n        modelDiv.textContent = `from \"${obj.model}\"`;\n        outerDiv.appendChild(modelDiv);\n        outerDiv.addEventListener('click', function() {\n            modalInsert.removeEventListener('click', hideModalInsert);\n            observable.setProperty('fileExistsUrl', {\n                method: 'GET',\n                // - Let's say I'm an admin viewing some user's file. gCurrentUser = \"admin\" and gThisOwner = \"test\". userFeeders is all of the\n                //   admin's feeders. Therefore, to see if the admin's feeders exist in order to load them, I need /uniqObjName to check the current\n                //   user's feeders, NOT the owner's feeders. Usually, gThisOwner === gCurrentUser, but this one special case is why this url is\n                //   different\n                url: `/uniqObjName/Feeder/${gCurrentUser}/${obj.name}/${obj.model}`\n            }, 'urlProps');\n            observable.setProperty('submitUrl', {\n                method: 'POST',\n                url: `/loadFeeder/${obj.name}/${obj.model}/${gThisModelName}/${gThisFeederNum}/${gCurrentUser}/${gThisOwner}`,\n            }, 'urlProps');\n            controller.submitFeature(observable, userFeedersModal); \n        });\n        outerDiv.classList.add('hoverable');\n        return outerDiv;\n    }).forEach(div => userFeedersModal.insertTBodyRow([div]));\n    userFeedersModal.setTitle('User Feeders');\n    userFeedersModal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'titleElement');\n    userFeedersModal.addStyleClasses(['fullWidth'], 'tableElement');\n    // - Main modal\n    const mainModal = new Modal();\n    mainModal.addStyleClasses(['outerModal', 'loadFeederModal'], 'divElement');\n    mainModal.setTitle('Load Feeder');\n    mainModal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'titleElement');\n    mainModal.insertElement(publicFeedersModal.divElement);\n    mainModal.insertElement(userFeedersModal.divElement);\n    mainModal.addStyleClasses(['horizontalFlex'], 'containerElement');\n    return mainModal;\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {HTMLDivElement}\n */\nfunction getLoadFeederDiv(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const feature = new Feature({\n        geometry: { 'coordinates': [null, null], 'type': 'Point' },\n        properties: {\n            treeKey: 'modal:loadFeeder',\n            urlProps: {},\n            formProps: {\n                referrer: 'distribution'\n            }\n        },\n        'type': 'Feature'\n    });\n    const modal = _getLoadFeederModal(feature, controller);\n    const div = _getMenuDiv('Load from model...');\n    const modalInsert = document.getElementById('modalInsert');\n    div.addEventListener('click', function() {\n        modalInsert.replaceChildren(modal.divElement);\n        modalInsert.classList.add('visible');\n    });\n    return div;\n}\n\n/**\n * @param {Feature} observable\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {Modal}\n */\nfunction _getBlankFeederModal(observable, controller) {\n    if (!(observable instanceof Feature)) {\n        throw TypeError('\"observable\" argument must be instanceof Feature.');\n    }\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    // - Input\n    const input = _getNameInput(observable, function(newName) {\n        observable.setProperty('feederNameNew', newName, 'formProps');\n    });\n    // - Submit div\n    const submitButton = _getSubmitButton();\n    const submitDiv = _getSubmitDiv(submitButton);\n    // - Modal\n    const modal = new Modal();\n    modal.addStyleClasses(['outerModal', 'fitContent'], 'divElement');\n    const modalInsert = document.getElementById('modalInsert');\n    submitButton.addEventListener('click', function() {\n        if (input.checkValidity()) {\n            modalInsert.removeEventListener('click', hideModalInsert);\n            modal.showProgress(true, 'Creating new blank feeder...', ['caution']);\n            controller.submitFeature(observable, modal, submitButton);\n        } else {\n            input.reportValidity();\n        }\n    });\n    modal.setTitle('New Blank Feeder');\n    modal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'titleElement');\n    modal.insertTBodyRow(['Blank feeder name', input]);\n    modal.addStyleClasses(['centeredTable'], 'tableElement');\n    modal.insertElement(submitDiv);\n    modal.addStyleClasses(['verticalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'containerElement');\n    return modal;\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {HTMLDivElement}\n */\nfunction getBlankFeederDiv(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const feature = new Feature({\n        geometry: { 'coordinates': [null, null], 'type': 'Point' },\n        properties: {\n            treeKey: 'modal:blankFeeder',\n            urlProps: {\n                submitUrl: {\n                    method: 'POST',\n                    url: `/newBlankFeeder/${gThisOwner}`\n                }\n            },\n            formProps: {\n                modelName: gThisModelName,\n                feederNameNew: 'Default Name',\n                feederNum: gThisFeederNum,\n                referrer: 'distribution'\n            }\n        },\n        type: 'Feature'\n    });\n    const modal = _getBlankFeederModal(feature, controller);\n    const div = _getMenuDiv('New blank feeder...');\n    const modalInsert = document.getElementById('modalInsert');\n    div.addEventListener('click', function() {\n        modalInsert.replaceChildren(modal.divElement);\n        modalInsert.classList.add('visible');\n    });\n    return div;\n}\n\n/**\n * @param {Feature} observable\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {Modal}\n */\nfunction _getWindmilModal(observable, controller) {\n    if (!(observable instanceof Feature)) {\n        throw TypeError('\"observable\" argument must be instanceof Feature.');\n    }\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    // - Name input\n    const nameInput = _getNameInput(observable, function(newName) {\n        observable.setProperty('feederNameM', newName, 'formProps');\n        const fileExistsUrl = {\n            method: 'GET',\n            url: `/uniqObjName/Feeder/${gThisOwner}/${newName}/${gThisModelName}`\n        }\n        observable.setProperty('fileExistsUrl', fileExistsUrl, 'urlProps');\n    });\n    nameInput.id = 'milsoftNameInput';\n    const nameLabel = document.createElement('label');\n    nameLabel.htmlFor = 'milsoftNameInput';\n    nameLabel.innerText = 'Name';\n    // - .std file input\n    const stdInput = document.createElement('input');\n    stdInput.type = 'file';\n    stdInput.accept = '.std';\n    stdInput.required = true;\n    stdInput.id = 'milsoftStdInput';\n    const stdLabel = document.createElement('label');\n    stdLabel.htmlFor = 'milsoftStdInput';\n    stdLabel.innerHTML = 'Data File (.std)';\n    // .seq file input\n    const seqInput = document.createElement('input');\n    seqInput.type = 'file';\n    seqInput.accept = '.seq';\n    seqInput.required = true;\n    seqInput.id = 'milsoftSeqInput';\n    const seqLabel = document.createElement('label');\n    seqLabel.htmlFor = 'milsoftSeqInput';\n    seqLabel.innerText = 'Equipment File (.seq)';\n    // - Submit div\n    const submitButton = _getSubmitButton('Import');\n    const submitDiv = _getSubmitDiv(submitButton);\n    // - Event listeners\n    stdInput.addEventListener('change', function() {\n        const stdFile = this.files[0];\n        observable.setProperty('stdFile', stdFile, 'formProps');\n    });\n    seqInput.addEventListener('change', function() {\n        const seqFile = this.files[0];\n        observable.setProperty('seqFile', seqFile, 'formProps');\n    });\n    // - Modal\n    const modal = new Modal();\n    modal.addStyleClasses(['outerModal', 'fitContent'], 'divElement');\n    const modalInsert = document.getElementById('modalInsert');\n    submitButton.addEventListener('click', function() {\n        if (nameInput.checkValidity() && stdInput.checkValidity() && seqInput.checkValidity()) {\n            modalInsert.removeEventListener('click', hideModalInsert);\n            modal.showProgress(true, 'Importing file...', ['caution']);\n            controller.submitFeature(observable, modal, submitButton);\n        } else {\n            nameInput.reportValidity();\n            stdInput.reportValidity();\n            seqInput.reportValidity();\n        }\n    });\n    modal.setTitle('Milsoft Conversion');\n    modal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'titleElement');\n    modal.insertTBodyRow([nameLabel, nameInput]);\n    modal.insertTBodyRow([stdLabel, stdInput]);\n    modal.insertTBodyRow([seqLabel, seqInput]);\n    modal.insertElement(submitDiv);\n    modal.addStyleClasses(['verticalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'containerElement');\n    return modal;\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {HTMLDivElement}\n */\nfunction getWindmilDiv(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const feature = new Feature({\n        geometry: { 'coordinates': [null, null], 'type': 'Point' },\n        properties: {\n            treeKey: 'modal:windmil',\n            urlProps: {\n                fileExistsUrl: {\n                    method: 'GET',\n                    url: `/uniqObjName/Feeder/${gThisOwner}/Default Name/${gThisModelName}`\n                },\n                pollUrl: {\n                    method: 'GET',\n                    url: `/checkConversion/${gThisModelName}/${gThisOwner}`\n                },\n                submitUrl: {\n                    method: 'POST',\n                    url: `/milsoftImport/${gThisOwner}`                    \n                }\n            },\n            formProps: {\n                modelName: gThisModelName,\n                feederNameM: 'Default Name',\n                feederNum: gThisFeederNum,\n                stdFile: '',\n                seqFile: ''\n            }\n        },\n        type: 'Feature'\n    });\n    const modal = _getWindmilModal(feature, controller);\n    const div = _getMenuDiv('Windmil conversion...');\n    const modalInsert = document.getElementById('modalInsert');\n    div.addEventListener('click', function() {\n        modalInsert.replaceChildren(modal.divElement);\n        modalInsert.classList.add('visible');\n    });\n    return div;\n}\n\n/**\n * @param {Feature} observable\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {Modal}\n */\nfunction _getGridlabdModal(observable, controller) {\n    if (!(observable instanceof Feature)) {\n        throw TypeError('\"observable\" argument must be instanceof Feature.');\n    }\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    // - Name input\n    const nameInput = _getNameInput(observable, function(newName) {\n        observable.setProperty('feederNameG', newName, 'formProps');\n        const fileExistsUrl = {\n            method: 'GET',\n            url: `/uniqObjName/Feeder/${gThisOwner}/${newName}/${gThisModelName}`\n        }\n        observable.setProperty('fileExistsUrl', fileExistsUrl, 'urlProps');\n    });\n    nameInput.id = 'gridlabdNameInput';\n    const nameLabel = document.createElement('label');\n    nameLabel.htmlFor = 'gridlabdNameInput';\n    nameLabel.innerText = 'Name';\n    // - .glm file input\n    const glmInput = document.createElement('input');\n    glmInput.type = 'file';\n    glmInput.accept = '.glm';\n    glmInput.required = true;\n    glmInput.id = 'glmInput';\n    const glmLabel = document.createElement('label');\n    glmLabel.htmlFor = 'glmInput';\n    glmLabel.innerHTML = 'Data File (.glm)';\n    // - Submit div\n    const submitButton = _getSubmitButton('Import');\n    const submitDiv = _getSubmitDiv(submitButton);\n    // - Event listeners\n    glmInput.addEventListener('change', function() {\n        const glmFile = this.files[0];\n        observable.setProperty('glmFile', glmFile, 'formProps');\n    });\n    // - Modal\n    const modal = new Modal();\n    modal.addStyleClasses(['outerModal', 'fitContent'], 'divElement');\n    const modalInsert = document.getElementById('modalInsert');\n    submitButton.addEventListener('click', function() {\n        if (nameInput.checkValidity() && glmInput.checkValidity()) {\n            modalInsert.removeEventListener('click', hideModalInsert);\n            modal.showProgress(true, 'Importing file...', ['caution']);\n            controller.submitFeature(observable, modal, submitButton);\n        } else {\n            nameInput.reportValidity();\n            glmInput.reportValidity();\n        }\n    });\n    modal.setTitle('GridLABD-D Conversion');\n    modal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'titleElement');\n    modal.insertTBodyRow([nameLabel, nameInput]);\n    modal.insertTBodyRow([glmLabel, glmInput]);\n    modal.insertElement(submitDiv);\n    modal.addStyleClasses(['verticalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'containerElement');\n    return modal;\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {HTMLDivElement}\n */\nfunction getGridlabdDiv(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const feature = new Feature({\n        geometry: { 'coordinates': [null, null], 'type': 'Point' },\n        properties: {\n            treeKey: 'modal:gridlabd',\n            urlProps: {\n                fileExistsUrl: {\n                    method: 'GET',\n                    url: `/uniqObjName/Feeder/${gThisOwner}/Default Name/${gThisModelName}`\n                },\n                pollUrl: {\n                    method: 'GET',\n                    url: `/checkConversion/${gThisModelName}/${gThisOwner}`\n                },\n                submitUrl: {\n                    method: 'POST',\n                    url: `/gridlabdImport/${gThisOwner}`\n                }\n            },\n            formProps: {\n                modelName: gThisModelName,\n                feederNameG: 'Default Name',\n                feederNum: gThisFeederNum,\n                glmFile: ''\n            }\n        },\n        type: 'Feature'\n    });\n    const modal = _getGridlabdModal(feature, controller);\n    const div = _getMenuDiv('GridLAB-D conversion...');\n    const modalInsert = document.getElementById('modalInsert');\n    div.addEventListener('click', function() {\n        modalInsert.replaceChildren(modal.divElement);\n        modalInsert.classList.add('visible');\n    });\n    return div;\n}\n/**\n * @param {Feature} observable\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {Modal}\n */\nfunction _getCymdistModal(observable, controller) {\n    if (!(observable instanceof Feature)) {\n        throw TypeError('\"observable\" argument must be instanceof Feature.');\n    }\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    // - Name input\n    const nameInput = _getNameInput(observable, function(newName) {\n        observable.setProperty('feederNameC', newName, 'formProps');\n        const fileExistsUrl = {\n            method: 'GET',\n            url: `/uniqObjName/Feeder/${gThisOwner}/${newName}/${gThisModelName}`\n        }\n        observable.setProperty('fileExistsUrl', fileExistsUrl, 'urlProps');\n    });\n    nameInput.id = 'cymdistNameInput';\n    const nameLabel = document.createElement('label');\n    nameLabel.htmlFor = 'cymdistNameInput';\n    nameLabel.innerText = 'Name';\n    // - .mdb file input\n    const mdbInput = document.createElement('input');\n    mdbInput.type = 'file';\n    mdbInput.accept = '.mdb';\n    mdbInput.required = true;\n    mdbInput.id = 'mdbInput';\n    const mdbLabel = document.createElement('label');\n    mdbLabel.htmlFor = 'mdbInput';\n    mdbLabel.innerHTML = 'Network File (.mdb)';\n    // - Submit div\n    const submitButton = _getSubmitButton('Import');\n    const submitDiv = _getSubmitDiv(submitButton);\n    // - Event listeners\n    mdbInput.addEventListener('change', function() {\n        const mdbFile = this.files[0];\n        observable.setProperty('mdbNetFile', mdbFile, 'formProps');\n    });\n    // - Modal\n    const modal = new Modal();\n    modal.addStyleClasses(['outerModal', 'fitContent'], 'divElement');\n    const modalInsert = document.getElementById('modalInsert');\n    submitButton.addEventListener('click', function() {\n        if (nameInput.checkValidity() && mdbInput.checkValidity()) {\n            modalInsert.removeEventListener('click', hideModalInsert);\n            modal.showProgress(true, 'Importing file...', ['caution']);\n            controller.submitFeature(observable, modal, submitButton);\n        } else {\n            nameInput.reportValidity();\n            mdbInput.reportValidity();\n        }\n    });\n    modal.setTitle('Cyme Conversion');\n    modal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'titleElement');\n    modal.insertTBodyRow([nameLabel, nameInput]);\n    modal.insertTBodyRow([mdbLabel, mdbInput]);\n    modal.insertElement(submitDiv);\n    modal.addStyleClasses(['verticalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'containerElement');\n    return modal;\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {HTMLDivElement}\n */\nfunction getCymdistDiv(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const feature = new Feature({\n        geometry: { 'coordinates': [null, null], 'type': 'Point' },\n        properties: {\n            treeKey: 'modal:cymdist',\n            urlProps: {\n                fileExistsUrl: {\n                    method: 'GET',\n                    url: `/uniqObjName/Feeder/${gThisOwner}/Default Name/${gThisModelName}`\n                },\n                pollUrl: {\n                    method: 'GET',\n                    url: `/checkConversion/${gThisModelName}/${gThisOwner}`\n                },\n                submitUrl: {\n                    method: 'POST',\n                    url: `/cymeImport/${gThisOwner}`\n                }\n            },\n            formProps: {\n                modelName: gThisModelName,\n                feederNum: gThisFeederNum,\n                feederNameC: 'Default Name',\n                mdbNetFile: ''\n            }\n        },\n        type: 'Feature'\n    });\n    const modal = _getCymdistModal(feature, controller);\n    const div = _getMenuDiv('CYMDIST conversion...');\n    const modalInsert = document.getElementById('modalInsert');\n    div.addEventListener('click', function() {\n        modalInsert.replaceChildren(modal.divElement);\n        modalInsert.classList.add('visible');\n    });\n    return div;\n}\n\n/**\n * @param {Feature} observable\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {Modal}\n */\nfunction _getOpendssModal(observable, controller) {\n    if (!(observable instanceof Feature)) {\n        throw TypeError('\"observable\" argument must be instanceof Feature.');\n    }\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    // - Name input\n    const nameInput = _getNameInput(observable, function(newName) {\n        observable.setProperty('feederNameOpendss', newName, 'formProps');\n        const fileExistsUrl = {\n            method: 'GET',\n            url: `/uniqObjName/Feeder/${gThisOwner}/${newName}/${gThisModelName}`\n        }\n        observable.setProperty('fileExistsUrl', fileExistsUrl, 'urlProps');\n    });\n    nameInput.id = 'opendssNameInput';\n    const nameLabel = document.createElement('label');\n    nameLabel.htmlFor = 'opendssNameInput';\n    nameLabel.innerText = 'Name';\n    // - .dss file input\n    const dssInput = document.createElement('input');\n    dssInput.type = 'file';\n    dssInput.accept = '.dss';\n    dssInput.required = true;\n    dssInput.id = 'dssInput';\n    const dssLabel = document.createElement('label');\n    dssLabel.htmlFor = 'dssInput';\n    dssLabel.innerHTML = 'Data File (.dss)';\n    // - Submit div\n    const submitButton = _getSubmitButton('Import');\n    const submitDiv = _getSubmitDiv(submitButton);\n    // - Event listeners \n    dssInput.addEventListener('change', function() {\n        const dssFile = this.files[0];\n        observable.setProperty('dssFile', dssFile, 'formProps');\n    });\n    // - Modal\n    const modal = new Modal();\n    modal.addStyleClasses(['outerModal', 'fitContent'], 'divElement');\n    const modalInsert = document.getElementById('modalInsert');\n    submitButton.addEventListener('click', function() {\n        if (nameInput.checkValidity() && dssInput.checkValidity()) {\n            modalInsert.removeEventListener('click', hideModalInsert);\n            modal.showProgress(true, 'Importing .dss file...', ['caution']);\n            controller.submitFeature(observable, modal, submitButton);\n        } else {\n            nameInput.reportValidity();\n            dssInput.reportValidity();\n        }\n    });\n    modal.setTitle('OpenDSS Conversion');\n    modal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'titleElement');\n    modal.insertTBodyRow([nameLabel, nameInput]);\n    modal.insertTBodyRow([dssLabel, dssInput]);\n    modal.insertElement(submitDiv);\n    modal.addStyleClasses(['verticalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'containerElement');\n    return modal;\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {HTMLDivElement}\n */\nfunction getOpendssDiv(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const feature = new Feature({\n        geometry: { 'coordinates': [null, null], 'type': 'Point' },\n        properties: {\n            treeKey: 'modal:opendss',\n            urlProps: {\n                fileExistsUrl: {\n                    method: 'GET',\n                    url: `/uniqObjName/Feeder/${gThisOwner}/Default Name/${gThisModelName}`\n                },\n                pollUrl: {\n                    method: 'GET',\n                    url: `/checkConversion/${gThisModelName}/${gThisOwner}`\n                },\n                submitUrl: {\n                    method: 'POST',\n                    url: `/opendssImport/${gThisOwner}`\n                }\n            },\n            formProps: {\n                modelName: gThisModelName,\n                feederNameOpendss: 'Default Name',\n                feederNum: gThisFeederNum,\n                dssFile: ''\n            }\n        },\n        type: 'Feature'\n    });\n    const modal = _getOpendssModal(feature, controller);\n    const div = _getMenuDiv('OpenDSS conversion...');\n    const modalInsert = document.getElementById('modalInsert');\n    div.addEventListener('click', function() {\n        modalInsert.replaceChildren(modal.divElement);\n        modalInsert.classList.add('visible');\n    });\n    return div;\n}\n\n/**\n * @param {Feature} observable\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {Modal}\n */\nfunction _getAmiModal(observable, controller) {\n    if (!(observable instanceof Feature)) {\n        throw TypeError('\"observable\" argument must be instanceof Feature.');\n    }\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    // - csv file input\n    const amiInput = document.createElement('input');\n    amiInput.type = 'file';\n    amiInput.accept = '.csv';\n    amiInput.required = true;\n    amiInput.id = 'amiInput'; \n    const amiLabel = document.createElement('label');\n    amiLabel.htmlFor = 'amiInput';\n    amiLabel.innerHTML = 'File containing AMI load data (.csv)';\n    // - Format help anchor\n    const anchor = document.createElement('a');\n    anchor.href = 'https://github.com/dpinney/omf/wiki/Tools-~-gridEdit#ami-load-modeling';\n    anchor.textContent = 'Format Help';\n    anchor.target = '_blank';\n    // - Note div\n    const noteDiv = _getHorizontalFlexDiv();\n    noteDiv.classList.add('centerCrossAxisFlex');\n    noteDiv.style.alignSelf = 'start';\n    const span = document.createElement('span');\n    span.textContent = 'Note: model \"Simulation Start Data\" should lie within the AMI profile\\'s dates';\n    noteDiv.appendChild(span);\n    // - Submit div\n    const submitButton = _getSubmitButton('Import');\n    const submitDiv = _getSubmitDiv(submitButton);\n    // - Event listeners\n    amiInput.addEventListener('change', function() {\n        const amiFile = this.files[0];\n        observable.setProperty('amiFile', amiFile, 'formProps');\n    });\n    // - Modal\n    const modal = new Modal();\n    modal.addStyleClasses(['outerModal', 'fitContent'], 'divElement');\n    const modalInsert = document.getElementById('modalInsert');\n    submitButton.addEventListener('click', function() {\n        if (amiInput.checkValidity()) {\n            modalInsert.removeEventListener('click', hideModalInsert);\n            modal.showProgress(true, 'Importing file...', ['caution']);\n            controller.submitFeature(observable, modal, submitButton);\n        } else {\n            amiInput.reportValidity();\n        }\n    });\n    modal.setTitle('AMI Profiles');\n    modal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'titleElement');\n    modal.insertTBodyRow([anchor]);\n    modal.insertTBodyRow([amiLabel, amiInput]);\n    modal.insertElement(noteDiv);\n    modal.insertElement(submitDiv);\n    modal.addStyleClasses(['verticalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'containerElement');\n    return modal;\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {HTMLDivElement}\n */\nfunction getAmiDiv(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const feature = new Feature({\n        geometry: { 'coordinates': [null, null], 'type': 'Point' },\n        properties: {\n            treeKey: 'modal:ami',\n            urlProps: {\n                fileExistsUrl: {\n                    method: 'GET',\n                    url: `/uniqObjName/Feeder/${gThisOwner}/${gThisFeederName}/${gThisModelName}`\n                },\n                pollUrl: {\n                    method: 'GET',\n                    url: `/checkConversion/${gThisModelName}/${gThisOwner}`\n                },\n                submitUrl: {\n                    method: 'POST',\n                    url: `/loadModelingAmi/${gThisOwner}/${gThisFeederName}`\n                }\n            },\n            formProps: {\n                modelName: gThisModelName,\n                amiFile: ''\n            }\n        },\n        type: 'Feature'\n    });\n    const modal = _getAmiModal(feature, controller);\n    const div = _getMenuDiv('Add AMI profiles...');\n    const modalInsert = document.getElementById('modalInsert');\n    div.addEventListener('click', function() {\n        modalInsert.replaceChildren(modal.divElement);\n        modalInsert.classList.add('visible');\n    });\n    return div;\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {Modal}\n */\nfunction _getAttachmentsModal(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const mainModal = new Modal();\n    mainModal.addStyleClasses(['outerModal'], 'divElement');\n    mainModal.setTitle('Attachments');\n    mainModal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'titleElement');\n    const omdFeature = controller.observableGraph.getObservable('omd');\n    const attachments = omdFeature.getProperty('attachments', 'meta');\n    const textAreaModals = [];\n    for (const [key, val] of Object.entries(attachments)) {\n        if (typeof val === 'string') {\n            const modal = _getTextAreaModal(key, key, val, attachments, omdFeature);\n            textAreaModals.push({\n                object: attachments,\n                propertyKey: key,\n                textArea: modal.divElement.querySelector('textarea'),\n                feature: omdFeature,\n                text: val\n            });\n            mainModal.insertElement(modal.divElement);\n        } else if (typeof val === 'object') {\n            const nestedObjects = _getNestedObjects(val);\n            nestedObjects.forEach(obj => {\n                for (const [innerKey, text] of Object.entries(obj.object)) {\n                    if (typeof text === 'string') {\n                        const innerModal = _getTextAreaModal(`${obj.namespace} ${innerKey}`, innerKey, text, obj.object, omdFeature);\n                        textAreaModals.push({\n                            object: obj.object,\n                            propertyKey: innerKey,\n                            textArea: innerModal.divElement.querySelector('textarea'),\n                            feature: omdFeature,\n                            text: text\n                        });\n                        mainModal.insertElement(innerModal.divElement);\n                    }\n                }\n            });\n        }\n    }\n    const saveButtonModal = new Modal();\n    saveButtonModal.addStyleClasses(['fitContent'], 'divElement');\n    saveButtonModal.divElement.style.padding = '16px 0px 0px 0px';\n    const saveButton = _getSubmitButton('Save');\n    saveButton.addEventListener('click', function() {\n        textAreaModals.forEach(obj => {\n            obj.object[obj.propertyKey] = obj.textArea.value;\n            obj.feature.updatePropertyOfObservers('', '', '');\n            obj.text = obj.textArea.value;\n        });\n    });\n    const saveDiv = _getSubmitDiv(saveButton);\n    saveButtonModal.insertElement(saveDiv);\n    const resetButton = _getSubmitButton('Reset to last save');\n    resetButton.classList.add('delete');\n    resetButton.addEventListener('click', function() {\n        textAreaModals.forEach(obj => {\n            obj.textArea.value = obj.text;\n        });\n    });\n    const resetDiv = _getSubmitDiv(resetButton);\n    saveButtonModal.insertElement(resetDiv);\n    saveButtonModal.addStyleClasses(['verticalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'containerElement');\n    const nestedModals = mainModal.divElement.querySelectorAll('div.js-div--modal');\n    if (nestedModals.length > 0) {\n        const lastNestedModal = nestedModals.item(nestedModals.length - 1)\n        lastNestedModal.querySelector('div.div--modalElementContainer').append(saveButtonModal.divElement);\n    }\n    return mainModal;\n}\n\n/**\n * @param {Object} obj - the object that contains nested objects that I want to be able to access and modify\n * @param {string} [namespace=''] - a string that indicates where in the top-level object the nested object exists\n * @returns {Array} an array of actual objects in the top-level object\n */\nfunction _getNestedObjects(obj, namespace='') {\n    const objects = [];\n    for (const [k, v] of Object.entries(obj)) {\n        // - I don't care if nulls and arrays are returned. Maybe I'll care about them eventually\n        if (typeof v === 'object' && v !== null) {\n            let objNamespace;\n            if (namespace === '') {\n                objNamespace = k;\n            } else {\n                objNamespace = `${namespace}|${k}`;\n            }\n            objects.push({\n                namespace: objNamespace,\n                object: v\n            });\n            objects.push(..._getNestedObjects(v, k));\n        }\n    }\n    return objects;\n}\n\n/**\n * - David wanted \"save\" and \"cancel\" buttons, so not all of these parameters are used anymore. Instead, these parameters are used to understand what\n *   the \"save\" and \"cancel\" buttons do\n * @param {string} title\n * @param {string} propertyKey\n * @param {string} text\n * @param {Object} object - the object that contains the key and value that created the text area\n * @param {Feature} feature - the Feature that will have updatePropertyOfObservers() called on it (i.e. the \"omd\" feature)\n * @returns {Modal}\n */\nfunction _getTextAreaModal(title, propertyKey, text, object, feature) {\n    if (typeof title !== 'string') {\n        throw TypeError('\"title\" argument must be typeof string.');\n    }\n    if (typeof propertyKey !== 'string') {\n        throw TypeError('\"propertyKey\" argument must be typeof string.');\n    }\n    if (typeof text !== 'string') {\n        throw TypeError('\"text\" argument must be typeof string.');\n    }\n    if (typeof object !== 'object') {\n        throw TypeError('\"object\" argument must be typeof object.');\n    }\n    const modal = new Modal();\n    const attachmentTitleDiv = _getHorizontalFlexDiv();\n    attachmentTitleDiv.classList.add('centerCrossAxisFlex');\n    const span = document.createElement('span');\n    span.textContent = title;\n    attachmentTitleDiv.appendChild(span);\n    modal.insertElement(attachmentTitleDiv);\n    modal.addStyleClasses(['horizontalFlex', 'centerCrossAxisFlex'], 'titleElement');\n    const textArea = document.createElement('textarea');\n    textArea.value = text;\n    //textArea.addEventListener('change', function() {\n    //    object[propertyKey] = textArea.value;\n    //    feature.updatePropertyOfObservers('', '', '');\n    //});\n    modal.insertElement(textArea);\n    return modal;\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {HTMLDivElement}\n */\nfunction getAttachmentsDiv(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const div = _getMenuDiv('Attachments...');\n    const modalInsert = document.getElementById('modalInsert');\n    div.addEventListener('click', function() {\n        const modal = _getAttachmentsModal(controller);\n        modalInsert.replaceChildren(modal.divElement);\n        modalInsert.classList.add('visible');\n    });\n    return div;\n}\n\n/**\n * @param {Feature} observable\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {Modal}\n */\nfunction _getClimateModal(observable, controller) {\n    if (!(observable instanceof Feature)) {\n        throw TypeError('\"observable\" argument must be instanceof Feature.');\n    }\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    // - Climate import select\n    const climateImportSelect = document.createElement('select');\n    climateImportSelect.name = 'climateImportOption';\n    let option = document.createElement('option');\n    option.text = 'USCRN import';\n    option.value = 'USCRNImport';\n    climateImportSelect.add(option);\n    option = document.createElement('option');\n    option.text = 'tmy import';\n    option.value = 'tmyImport';\n    climateImportSelect.add(option);\n    // - USCRN year select\n    const uscrnYearSelect = document.createElement('select');\n    uscrnYearSelect.id = 'uscrnYearSelect';\n    uscrnYearSelect.name = 'uscrnYear';\n    [2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019].forEach(year => {\n        const option = document.createElement('option');\n        option.text = year;\n        option.value = year;\n        uscrnYearSelect.add(option);\n    });\n    // - USCRN station select\n    const uscrnStationSelect = document.createElement('select');\n    uscrnStationSelect.name = 'uscrnStation';\n    [\"AK_Bethel_87_WNW\", \"AK_Cordova_14_ESE\", \"AK_Deadhorse_3_S\", \"AK_Denali_27_N\", \"AK_Fairbanks_11_NE\", \"AK_Glennallen_64_N\", \"AK_Gustavus_2_NE\",\n\t\"AK_Ivotuk_1_NNE\", \"AK_Kenai_29_ENE\", \"AK_King_Salmon_42_SE\", \"AK_Metlakatla_6_S\", \"AK_Port_Alsworth_1_SW\", \"AK_Red_Dog_Mine_3_SSW\", \"AK_Ruby_44_ESE\",\n    \"AK_Sand_Point_1_ENE\", \"AK_Selawik_28_E\", \"AK_Sitka_1_NE\", \"AK_St._Paul_4_NE\", \"AK_Tok_70_SE\", \"AK_Toolik_Lake_5_ENE\", \"AK_Utqiagvik_formerly_Barrow_4_ENE\",\n    \"AK_Yakutat_3_SSE\", \"AL_Brewton_3_NNE\", \"AL_Clanton_2_NE\", \"AL_Courtland_2_WSW\", \"AL_Cullman_3_ENE\", \"AL_Fairhope_3_NE\", \"AL_Gadsden_19_N\", \"AL_Gainesville_2_NE\",\n\t\"AL_Greensboro_2_WNW\", \"AL_Highland_Home_2_S\", \"AL_Muscle_Shoals_2_N\", \"AL_Northport_2_S\", \"AL_Russellville_4_SSE\", \"AL_Scottsboro_2_NE\", \"AL_Selma_6_SSE\",\n\t\"AL_Selma_13_WNW\", \"AL_Talladega_10_NNE\", \"AL_Thomasville_2_S\", \"AL_Troy_2_W\", \"AL_Valley_Head_1_SSW\", \"AR_Batesville_8_WNW\", \"AZ_Elgin_5_S\", \"AZ_Tucson_11_W\",\n\t\"AZ_Williams_35_NNW\", \"AZ_Yuma_27_ENE\", \"CA_Bodega_6_WSW\", \"CA_Fallbrook_5_NE\", \"CA_Merced_23_WSW\", \"CA_Redding_12_WNW\", \"CA_Santa_Barbara_11_W\", \"CA_Stovepipe_Wells_1_SW\",\n\t\"CA_Yosemite_Village_12_W\", \"CO_Boulder_14_W\", \"CO_Cortez_8_SE\", \"CO_Dinosaur_2_E\", \"CO_La_Junta_17_WSW\", \"CO_Montrose_11_ENE\", \"CO_Nunn_7_NNE\", \"FL_Everglades_City_5_NE\",\n\t\"FL_Sebring_23_SSE\", \"FL_Titusville_7_E\", \"GA_Brunswick_23_S\", \"GA_Newton_8_W\", \"GA_Newton_11_SW\", \"GA_Watkinsville_5_SSE\", \"HI_Hilo_5_S\", \"HI_Mauna_Loa_5_NNE\",\n\t\"IA_Des_Moines_17_E\", \"ID_Arco_17_SW\", \"ID_Murphy_10_W\", \"IL_Champaign_9_SW\", \"IL_Shabbona_5_NNE\", \"IN_Bedford_5_WNW\", \"KS_Manhattan_6_SSW\", \"KS_Oakley_19_SSW\",\n\t\"KY_Bowling_Green_21_NNE\", \"KY_Versailles_3_NNW\", \"LA_Lafayette_13_SE\", \"LA_Monroe_26_N\", \"ME_Limestone_4_NNW\", \"ME_Old_Town_2_W\", \"MI_Chatham_1_SE\", \"MI_Gaylord_9_SSW\",\n\t\"MN_Goodridge_12_NNW\", \"MN_Sandstone_6_W\", \"MO_Chillicothe_22_ENE\", \"MO_Joplin_24_N\", \"MO_Salem_10_W\", \"MS_Holly_Springs_4_N\", \"MS_Newton_5_ENE\", \"MT_Dillon_18_WSW\",\n\t\"MT_Lewistown_42_WSW\", \"MT_St._Mary_1_SSW\", \"MT_Wolf_Point_29_ENE\", \"MT_Wolf_Point_34_NE\", \"NC_Asheville_8_SSW\", \"NC_Asheville_13_S\", \"NC_Durham_11_W\", \"ND_Jamestown_38_WSW\",\n\t\"ND_Medora_7_E\", \"ND_Northgate_5_ESE\", \"NE_Harrison_20_SSE\", \"NE_Lincoln_8_ENE\", \"NE_Lincoln_11_SW\", \"NE_Whitman_5_ENE\", \"NH_Durham_2_N\", \"NH_Durham_2_SSW\", \"NM_Las_Cruces_20_N\",\n\t\"NM_Los_Alamos_13_W\", \"NM_Socorro_20_N\", \"NV_Baker_5_W\", \"NV_Denio_52_WSW\", \"NV_Mercury_3_SSW\", \"NY_Ithaca_13_E\", \"NY_Millbrook_3_W\", \"OH_Wooster_3_SSE\", \"OK_Goodwell_2_E\",\n\t\"OK_Goodwell_2_SE\", \"OK_Stillwater_2_W\", \"OK_Stillwater_5_WNW\", \"ON_Egbert_1_W\", \"OR_Coos_Bay_8_SW\", \"OR_Corvallis_10_SSW\", \"OR_John_Day_35_WNW\", \"OR_Riley_10_WSW\",\n\t\"PA_Avondale_2_N\", \"RI_Kingston_1_NW\", \"RI_Kingston_1_W\", \"SC_Blackville_3_W\", \"SC_McClellanville_7_NE\", \"SD_Aberdeen_35_WNW\", \"SD_Buffalo_13_ESE\", \"SD_Pierre_24_S\",\n\t\"SD_Sioux_Falls_14_NNE\", \"TN_Crossville_7_NW\", \"TX_Austin_33_NW\", \"TX_Bronte_11_NNE\", \"TX_Edinburg_17_NNE\", \"TX_Monahans_6_ENE\", \"TX_Muleshoe_19_S\", \"TX_Palestine_6_WNW\",\n\t\"TX_Panther_Junction_2_N\", \"TX_Port_Aransas_32_NNE\", \"UT_Brigham_City_28_WNW\", \"UT_Torrey_7_E\", \"VA_Cape_Charles_5_ENE\", \"VA_Charlottesville_2_SSE\", \"WA_Darrington_21_NNE\",\n    \"WA_Quinault_4_NE\", \"WA_Spokane_17_SSW\", \"WI_Necedah_5_WNW\", \"WV_Elkins_21_ENE\", \"WY_Lander_11_SSE\", \"WY_Moose_1_NNE\", \"WY_Sundance_8_NNW\"].forEach(station => {\n        const option = document.createElement('option');\n        option.text = station;\n        option.value = station;\n        uscrnStationSelect.add(option); \n    });\n    // - tmy zip code input\n    const tmyInput = document.createElement('input');\n    tmyInput.id = 'tmyInput';\n    tmyInput.name = 'tmyInput';\n    const tmyInputLabel = document.createElement('label');\n    tmyInputLabel.htmlFor = 'tmyInput';\n    tmyInputLabel.innerText = 'ZIP code';\n    // - Submit div\n    const submitButton = _getSubmitButton();\n    const submitDiv = _getSubmitDiv(submitButton);\n    // - Event listeners\n    uscrnYearSelect.addEventListener('change', function() {\n        observable.setProperty('uscrnYear', this.value, 'formProps');\n    });\n    uscrnStationSelect.addEventListener('change', function() {\n        observable.setProperty('uscrnStation', this.value, 'formProps');\n    });\n    tmyInput.addEventListener('change', function() {\n        const value = this.value.trim();\n        observable.setProperty('zipCode', value, 'formProps');\n    });\n    // - Modal\n    const mainModal = new Modal();\n    const modalInsert = document.getElementById('modalInsert');\n    submitButton.addEventListener('click', function() {\n        modalInsert.removeEventListener('click', hideModalInsert);\n        mainModal.showProgress(true, 'Adding climate data...', ['caution']);\n        controller.submitFeature(observable, mainModal, submitButton);\n    });\n    mainModal.addStyleClasses(['outerModal', 'fitContent'], 'divElement');\n    mainModal.setTitle('Climate Change');\n    mainModal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'titleElement');\n    mainModal.insertTBodyRow([climateImportSelect]);\n    const uscrnModal = new Modal();\n    uscrnModal.addStyleClasses(['indent1'], 'divElement');\n    uscrnModal.insertTBodyRow(['Year', uscrnYearSelect]);\n    uscrnModal.insertTBodyRow(['Station', uscrnStationSelect]);\n    mainModal.insertElement(uscrnModal.divElement);\n    const tmyModal = new Modal();\n    tmyModal.addStyleClasses(['indent1', 'collapsed'], 'divElement');\n    tmyModal.insertTBodyRow([tmyInputLabel, tmyInput]);\n    mainModal.insertElement(tmyModal.divElement);\n    climateImportSelect.addEventListener('change', function() {\n        observable.setProperty('climateImportOption', this.value, 'formProps');\n        if (this.value === 'USCRNImport') {\n            uscrnModal.removeStyleClasses(['collapsed'], 'divElement');\n            tmyModal.addStyleClasses(['collapsed'], 'divElement');\n        } else {\n            uscrnModal.addStyleClasses(['collapsed'], 'divElement');\n            tmyModal.removeStyleClasses(['collapsed'], 'divElement');\n        }\n    });\n    const submitDivModal = new Modal();\n    submitDivModal.insertElement(submitDiv);\n    submitDivModal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'containerElement');\n    mainModal.insertElement(submitDivModal.divElement);\n    return mainModal;\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {HTMLDivElement}\n */\nfunction getClimateDiv(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const feature = new Feature({\n        geometry: { 'coordinates': [null, null], 'type': 'Point' },\n        properties: {\n            treeKey: 'modal:climate',\n            urlProps: {\n                fileExistsUrl: {\n                    method: 'GET',\n                    url: `/uniqObjName/Feeder/${gThisOwner}/${gThisFeederName}/${gThisModelName}`\n                },\n                pollUrl: {\n                    method: 'GET',\n                    url: `/checkConversion/${gThisModelName}/${gThisOwner}`\n                },\n                submitUrl: {\n                    method: 'POST',\n                    url: `/climateChange/${gThisOwner}/${gThisFeederName}`\n                }\n            },\n            formProps: {\n                modelName: gThisModelName,\n                climateImportOption: 'USCRNImport',\n                uscrnStation: 'AK_Bethel_87_WNW',\n                uscrnYear: '2006',\n                zipCode: ''\n            }\n        },\n        type: 'Feature'\n    });\n    const modal =_getClimateModal(feature, controller);\n    const div = _getMenuDiv('Climate...');\n    const modalInsert = document.getElementById('modalInsert');\n    div.addEventListener('click', function() {\n        modalInsert.replaceChildren(modal.divElement);\n        modalInsert.classList.add('visible');\n    });\n    return div;\n}\n\n/**\n * @param {Feature} observable\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {Modal}\n */\nfunction _getScadaModal(observable, controller) {\n    if (!(observable instanceof Feature)) {\n        throw TypeError('\"observable\" argument must be instanceof Feature.');\n    }\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    // - csv file input\n    const scadaInput = document.createElement('input');\n    scadaInput.type = 'file';\n    scadaInput.accept = '.csv';\n    scadaInput.required = true;\n    scadaInput.id = 'scadaInput'; \n    const scadaLabel = document.createElement('label');\n    scadaLabel.htmlFor = 'scadaInput';\n    scadaLabel.innerHTML = 'File containing SCADA load data (.csv)';\n    // - Format help anchor\n    const anchor = document.createElement('a');\n    anchor.href = 'https://github.com/dpinney/omf/wiki/Tools-~-gridEdit#scada-loadshapes';\n    anchor.textContent = 'Format Help';\n    anchor.target = '_blank';\n    // - Note div\n    const noteDiv = _getHorizontalFlexDiv();\n    noteDiv.classList.add('centerCrossAxisFlex');\n    noteDiv.style.alignSelf = 'start';\n    const span = document.createElement('span');\n    span.textContent = 'Note: model \"Simulation Start Data\" should lie within the SCADA load\\'s dates.';\n    noteDiv.appendChild(span);\n    // - Submit div\n    const submitButton = _getSubmitButton('Import');\n    const submitDiv = _getSubmitDiv(submitButton);\n    // - Event listeners\n    scadaInput.addEventListener('change', function() {\n        const scadaFile = this.files[0];\n        observable.setProperty('scadaFile', scadaFile, 'formProps');\n    }); \n    // - Modal\n    const modal = new Modal();\n    modal.addStyleClasses(['outerModal', 'fitContent'], 'divElement');\n    const modalInsert = document.getElementById('modalInsert');\n    submitButton.addEventListener('click', function() {\n        if (scadaInput.checkValidity()) {\n            modalInsert.removeEventListener('click', hideModalInsert);\n            modal.showProgress(true, 'Importing file...', ['caution']);\n            controller.submitFeature(observable, modal, submitButton);\n        } else {\n            scadaInput.reportValidity();\n        }\n    });\n    modal.setTitle('SCADA Loadshapes');\n    modal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'titleElement');\n    modal.insertTBodyRow([anchor]);\n    modal.insertTBodyRow([scadaLabel, scadaInput]);\n    modal.insertElement(noteDiv);\n    modal.insertElement(submitDiv);\n    modal.addStyleClasses(['verticalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'containerElement');\n    return modal;\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {HTMLDivElement}\n */\nfunction getScadaDiv(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const feature = new Feature({\n        geometry: { 'coordinates': [null, null], 'type': 'Point' },\n        properties: {\n            treeKey: 'modal:scada',\n            urlProps: {\n                fileExistsUrl: {\n                    method: 'GET',\n                    url: `/uniqObjName/Feeder/${gThisOwner}/${gThisFeederName}/${gThisModelName}`\n                },\n                pollUrl: {\n                    method: 'GET',\n                    url: `/checkConversion/${gThisModelName}/${gThisOwner}`\n                },\n                submitUrl: {\n                    method: 'POST',\n                    url: `/scadaLoadshape/${gThisOwner}/${gThisFeederName}`\n                }\n            },\n            formProps: {\n                modelName: gThisModelName,\n                scadaFile: ''\n            }\n        },\n        type: 'Feature'\n    });\n    const modal = _getScadaModal(feature, controller);\n    const div = _getMenuDiv('SCADA loadshapes...');\n    const modalInsert = document.getElementById('modalInsert');\n    div.addEventListener('click', function() {\n        modalInsert.replaceChildren(modal.divElement);\n        modalInsert.classList.add('visible');\n    });\n    return div; \n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {HTMLDivElement}\n */\nfunction getColorDiv(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const colorModal = new ColorModal([controller.observableGraph.getObservable('omd')], controller);\n    const divElement = colorModal.getDOMElement();\n    const div = _getMenuDiv('Color circuit...');\n    const modalInsert = document.getElementById('modalInsert');\n    div.addEventListener('click', function() {\n        modalInsert.replaceChildren(divElement);\n        modalInsert.classList.add('visible');\n    });\n    return div;\n}\n\n/**\n * @param {FeatureController} controller - a ControllerInterface instance\n * @returns {HTMLDivElement}\n */\nfunction getGeojsonDiv(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const geojsonModal = new GeojsonModal([controller.observableGraph.getObservable('omd')], controller);\n    const divElement = geojsonModal.getDOMElement();\n    const div = _getMenuDiv('Add GeoJSON data...');\n    const modalInsert = document.getElementById('modalInsert');\n    div.addEventListener('click', function() {\n        modalInsert.replaceChildren(divElement);\n        modalInsert.classList.add('visible');\n    });\n    return div;\n}\n\n/**\n * @param {Nav} nav - a Nav instance\n * @param {TopTab} topTab - a TopTab instance\n * @returns {undefined}\n */\nfunction getSearchDiv(nav, topTab) {\n    if (!(nav instanceof Nav)) {\n        throw TypeError('\"nav\" argument must be instanceof Nav.');\n    }\n    if (!(topTab instanceof TopTab)) {\n        throw TypeError('\"topTab\" argument must be instanceof TopTab.');\n    }\n    const div = _getMenuDiv('Search objects...');\n    div.addEventListener('click', function() {\n        if (nav.sideNavNavElement.classList.contains('open')) {\n            if (topTab.getTab('Search Objects').tab.classList.contains('selected')) {\n                nav.sideNavNavElement.classList.remove('open');\n                nav.sideNavDivElement.classList.remove('open');\n                nav.sideNavArticleElement.classList.remove('compressed');\n            }\n            if (topTab.getTab('Add New Objects').tab.classList.contains('selected')) {\n                topTab.selectTab(topTab.getTab('Search Objects').tab);\n            }\n        } else {\n            if (topTab.getTab('Add New Objects').tab.classList.contains('selected')) {\n                topTab.selectTab(topTab.getTab('Search Objects').tab);\n            }\n            nav.sideNavNavElement.classList.add('open');\n            nav.sideNavDivElement.classList.add('open');\n            nav.sideNavArticleElement.classList.add('compressed');\n        }\n        document.getElementById('editMenu').getElementsByTagName('button')[0].click();\n    });\n    return div;\n}\n\n/**\n * @param {Nav} nav - a Nav instance\n * @param {TopTab} topTab - a TopTab instance\n * @returns {undefined}\n */\nfunction getAddComponentsDiv(nav, topTab) {\n    if (!(nav instanceof Nav)) {\n        throw TypeError('\"nav\" argument must be instanceof Nav.');\n    }\n    if (!(topTab instanceof TopTab)) {\n        throw TypeError('\"topTab\" argument must be instanceof TopTab.');\n    }\n    const div = _getMenuDiv('Add new objects...');\n    div.addEventListener('click', function() {\n        if (nav.sideNavNavElement.classList.contains('open')) {\n            if (topTab.getTab('Add New Objects').tab.classList.contains('selected')) {\n                nav.sideNavNavElement.classList.remove('open');\n                nav.sideNavDivElement.classList.remove('open');\n                nav.sideNavArticleElement.classList.remove('compressed');\n            }\n            if (topTab.getTab('Search Objects').tab.classList.contains('selected')) {\n                topTab.selectTab(topTab.getTab('Add New Objects').tab);\n            }\n        } else {\n            if (topTab.getTab('Search Objects').tab.classList.contains('selected')) {\n                topTab.selectTab(topTab.getTab('Add New Objects').tab);\n            }\n            nav.sideNavNavElement.classList.add('open');\n            nav.sideNavDivElement.classList.add('open');\n            nav.sideNavArticleElement.classList.add('compressed');\n        }\n        document.getElementById('editMenu').getElementsByTagName('button')[0].click();\n    });\n    return div;\n}\n\n/*********************************/\n/* Private convenience functions */\n/*********************************/\n\nfunction _getHorizontalFlexDiv() {\n    const div = document.createElement('div');\n    div.classList.add('horizontalFlex');\n    return div;\n}\n\nfunction _getMenuDiv(text) {\n    if (typeof text !== 'string') {\n        throw TypeError('\"text\" argument must be a string.');\n    }\n    const div = document.createElement('div');\n    div.classList.add('hoverable', 'horizontalFlex', 'centerCrossAxisFlex');\n    div.textContent = text;\n    return div;\n}\n\n/**\n * - Firefox doesn't display the reportValidity() message correctly\n * - I don't know why I can't get actual regular expression literals to work. Only the regex string works for me\n * @param {Feature} observable\n * @param {Function} func - a function that takes the new name as an argument\n * @returns {HTMLInputElement}\n */\nfunction _getNameInput(observable, func) {\n    const input = document.createElement('input');\n    input.pattern = '(?:[\\\\w-]+\\\\s{0,1})+';\n    input.placeholder = 'New name';\n    input.required = true;\n    input.title = 'The new name must have one or more alphanumeric characters. Single spaces, hyphens, and underscores are allowed.';\n    input.addEventListener('change', function() {\n        this.setCustomValidity('');\n        if (this.validity.valueMissing || this.validity.patternMismatch) {\n            input.setCustomValidity('The new name must have one or more alphanumeric characters. Single spaces, hyphens, and underscores are allowed.');\n            input.reportValidity();\n        } else if (this.validity.valid) {\n            func(this.value.trim());\n        }\n    });\n    return input\n}\n\nfunction _getSubmitButton(text='Submit') {\n    const submitButton = document.createElement('button');\n    let span = document.createElement('span');\n    span.textContent = text;\n    submitButton.appendChild(span);\n    submitButton.classList.add('horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex', 'fullWidth');\n    return submitButton;\n}\n\nfunction _getSubmitDiv(button) {\n    if (!(button instanceof HTMLButtonElement)) {\n        throw TypeError('\"button\" argument must be instanceof HTMLButtonElement.');\n    }\n    const submitDiv = document.createElement('div');\n    submitDiv.classList.add('horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex', 'halfWidth');\n    submitDiv.appendChild(button);\n    return submitDiv;\n}\n</script>\n<script>\n\"use strict\";\n\nclass SideNav {\n    navElement; // Navigation pane. Contains divs\n    divElement; // Cover pane for when the SideNav is opened in a narrow browser\n    articleElement; // Content that shifts when the SideNav opens\n\n    constructor() {\n        this.navElement = document.createElement('nav');\n        this.navElement.classList.add('js-nav--sideNav');\n        this.divElement = document.createElement('div');\n        this.divElement.classList.add('js-div--sideNavCover');\n        this.articleElement = document.createElement('article');\n        this.articleElement.classList.add('js-article--sideNavArticle');\n    }\n}\n</script>\n<script>\n\"use strict\";\n\nclass TopNav {\n    navElement;\n    #anchor;\n    #span;\n\n    constructor(homepageName='<Site Name>', homepageUrl='/') {\n        this.navElement = document.createElement('nav');\n        this.navElement.classList.add('js-nav--topNav');\n        //const button = document.createElement('button');\n        //const svg = this.#getHamburgerSvg();\n        //button.appendChild(svg);\n        //this.navElement.appendChild(button);\n        const divPlaceholder = document.createElement('div');\n        this.navElement.appendChild(divPlaceholder);\n        const div = document.createElement('div');\n        this.#anchor = document.createElement('a');\n        this.#anchor.setAttribute('href', homepageUrl);\n        this.#span = document.createElement('span');\n        this.#span.textContent = homepageName;\n        this.#anchor.appendChild(this.#span);\n        div.appendChild(this.#anchor);\n        this.navElement.appendChild(div)\n    }\n\n    setHomepageName(val) {\n        this.#span.textContent = val;\n    }\n\n    setHomepageUrl(val) {\n        this.#anchor.setAttribute('href', val);\n    }\n\n    #getHamburgerSvg() {\n        const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n        svg.setAttribute('width', '100%');\n        svg.setAttribute('height', '100%');\n        svg.setAttribute('viewBox', '-2.5 -2.5 15 15');\n        const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n        path.setAttribute('d', 'M0,1L10,1v1h-10v-1M0,5.5L10,5.5v-1h-10v1M0,9L10,9v-1h-10v1');\n        svg.appendChild(path);\n        return svg;\n    }\n}\n</script>\n<script>\n\"use strict\";\n\nclass FeatureDropdownDiv {\n    #controller;        // - a ControllerInterface instance\n    #dropdownDiv;       // - a DropdownDiv instance\n    #featureEditModal;  // - a FeatureEditModal instance\n    #observable;        // - an ObservableInterface instance\n    #removed;           // - Whether this FeatureDropdownDiv instance has already been deleted\n\n    constructor(observable, controller) {\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature.');\n        }\n        if (!(controller instanceof FeatureController)) {\n            throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n        }\n        this.#controller = controller;\n        this.#dropdownDiv = null;\n        this.#featureEditModal = null;\n        this.#observable = observable;\n        this.#observable.registerObserver(this);\n        this.#removed = false;\n        this.renderContent();\n    }\n\n    // *******************************\n    // ** ObserverInterface methods ** \n    // *******************************\n\n    /**\n     * - Remove this ObserverInterface instance (i.e. \"this\") from the ObservableInterface instance (i.e. \"observable\") that has been deleted, and\n     *   perform other actions as needed\n     * @param {Feature} observable - an ObservableInterface instance\n     * @returns {undefined}\n     */\n    handleDeletedObservable(observable) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature.');\n        }\n        this.remove();\n    }\n\n    /**\n     *\n     */\n    handleNewObservable(observable) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        throw new UnsupportedOperationError();\n    }\n\n    /**\n     * - Update this ObserverInterface instance (i.e. \"this\") based on the coordinates of the ObservableInterface instance (i.e. \"observable\") that\n     *   have just changed and perform other actions as needed\n     * @param {Feature} observable - an ObservableInterface instance\n     * @param {Array} oldCoordinates - the old coordinates of the observable prior to the change in coordinates\n     * @returns {undefined}\n     */\n    handleUpdatedCoordinates(observable, oldCoordinates) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature.');\n        }\n        if (!(oldCoordinates instanceof Array)) {\n            throw TypeError('\"oldCoordinates\" argument must be an array.');\n        }\n        // - Do nothing. Any inner FeatureEditModal should update itself\n    } \n\n    /**\n     * - Update this ObserverInstance (i.e. \"this\") based on the property of the ObservableInterface instance (i.e. \"observable\") that has just\n     *   changed and perform other actions as needed\n     * @param {Feature} observable - an ObservableInterface instance\n     * @param {string} propertyKey - the property key of the property that has been created/changed/deleted in the observable\n     * @param {(string|Object)} oldPropertyValue - the previous value of the property that has been created/changed/deleted in the observable\n     * @param {string} namespace - the namespace of the property that has been created/changed/deleted in the observable\n     * @returns {undefined}\n     */\n    handleUpdatedProperty(observable, propertyKey, oldPropertyValue, namespace='treeProps') {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature.');\n        }\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be a string.');\n        }\n        if (typeof namespace !== 'string') {\n            throw TypeError('\"namespace\" argument must be a string.');\n        }\n        // - Do nothing. Any inner FeatureEditModal should update itself\n    } \n\n    // ****************************\n    // ** ModalInterface methods **\n    // ****************************\n\n    getDOMElement() {\n        return this.#dropdownDiv.divElement;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isRemoved() {\n        return this.#removed;\n    }\n\n    /**\n     * @returns {undefined}\n     */\n    refreshContent() {\n\n    }\n\n    /**\n     * @returns {undefined}\n     */\n    remove() {\n        if (!this.#removed) {\n            // - I have to check if this.#featureEditModal === null because often a FeatureDropdownDiv will be rendered, but the user will not have\n            //   clicked on it to expand it, so it won't contain a FeatureEditModal\n            if (this.#featureEditModal !== null) {\n                this.#featureEditModal.remove();\n                this.#featureEditModal = null;\n            }\n            this.#dropdownDiv.divElement.remove();\n            this.#dropdownDiv = null;\n            this.#observable.removeObserver(this);\n            this.#observable = null;\n            this.#controller = null;\n            this.#removed = true;\n        }\n    }\n\n    /**\n     * @returns {undefined}\n     */\n    renderContent() {\n        const dropdownDiv = new DropdownDiv();\n        dropdownDiv.addStyleClasses(['sideNav'], 'divElement');\n        const buttonTextSpan = document.createElement('span');\n        buttonTextSpan.classList.add('indent2');\n        if (this.#observable.hasProperty('object')) {\n            if (this.#observable.hasProperty('name')) {\n                let div = document.createElement('div');\n                div.textContent = this.#observable.getProperty('object');\n                buttonTextSpan.appendChild(div);\n                div = document.createElement('div');\n                div.textContent = this.#observable.getProperty('name');\n                buttonTextSpan.appendChild(div);\n            } else {\n                buttonTextSpan.textContent = this.#observable.getProperty('object');\n            }\n        } else if (this.#observable.hasProperty('name')) {\n            buttonTextSpan.textContent = this.#observable.getProperty('name');\n        } else {\n            buttonTextSpan.textContent = this.#observable.getProperty('treeKey', 'meta');\n        }\n        dropdownDiv.setButton(buttonTextSpan, true);\n        const that = this;\n        dropdownDiv.buttonElement.addEventListener('click', function() {\n            if (dropdownDiv.contentDivElement.classList.contains('expanded')) {\n                that.#featureEditModal = new FeatureEditModal([that.#observable], that.#controller);\n                dropdownDiv.insertElement(that.#featureEditModal.getDOMElement());\n            } else {\n                that.#featureEditModal.remove();\n            }\n        });\n        if (this.#dropdownDiv === null) {\n            this.#dropdownDiv = dropdownDiv;\n        }\n        if (document.body.contains(this.#dropdownDiv.divElement)) {\n            this.#dropdownDiv.divElement.replaceWith(dropdownDiv.divElement);\n            this.#dropdownDiv = dropdownDiv;\n        }\n    }\n}\n</script>\n<script>\n\"use strict\";\n\nclass FeatureEditModal { // implements ObserverInterface, ModalInterface\n    #controller;    // - ControllerInterface instance\n    #modal;         // - A single Modal instance\n    #observables;   // - An array of ObservableInterface instances\n    #removed;       // - Whether this FeatureEditModal instance has already been deleted\n    static #nonDeletableProperties = ['name', 'object', 'from', 'to', 'parent', 'latitude', 'longitude', 'treeKey', 'CMD_command'];\n\n    /**\n     * @param {Array} observables - an array of ObservableInterface instances\n     * @param {FeatureController} controller - a ControllerInterface instance\n     * @returns {undefined}\n     */\n    constructor(observables, controller) {\n        if (!(observables instanceof Array)) {\n            throw TypeError('\"observables\" argumnet must be an Array.');\n        }\n        if (!(controller instanceof FeatureController)) {\n            throw Error('\"controller\" argument must be instanceof FeatureController');\n        }\n        this.#controller = controller;\n        this.#modal = null;\n        this.#observables = observables;\n        this.#observables.forEach(ob => ob.registerObserver(this));\n        this.#removed = false;\n        // - In order to allow users to view non-OMD GeoJSON features in a table, I added this if-statement\n        if (this.#observables.every(ob => ob.hasProperty('treeKey', 'meta'))) {\n            this.renderContent();\n        } else {\n            this.#renderReadOnlyModal();\n        }\n    }\n\n    // *******************************\n    // ** ObserverInterface methods ** \n    // *******************************\n\n    /**\n     * - Remove this ObserverInterface instance (i.e. \"this\") from the ObservableInterface instance (i.e. \"observable\") that has been deleted, and\n     *   perform other actions as needed\n     * @param {Feature} observable - an ObservableInterface instance\n     * @returns {undefined}\n     */\n    handleDeletedObservable(observable) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature.');\n        }\n        if (!this.#removed) {\n            observable.removeObserver(this);\n            const index = this.#observables.indexOf(observable);\n            if (index > -1) {\n                this.#observables.splice(index, 1);\n            } else {\n                throw Error('The observable was not found in this.#observables.');\n            }\n            if (this.#observables.length === 0) {\n                this.remove();\n            } else {\n                this.renderContent();\n            }\n        }\n    }\n\n    /**\n     *\n     */\n    handleNewObservable(observable) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        throw new UnsupportedOperationError();\n    }\n\n    /**\n     * - Update this ObserverInterface instance (i.e. \"this\") based on the coordinates of the ObservableInterface instance (i.e. \"observable\") that\n     *   have just changed and perform other actions as needed\n     * @param {Feature} observable - an ObservableInterface instance\n     * @param {Array} oldCoordinates - the old coordinates of the observable prior to the change in coordinates\n     * @returns {undefined}\n     */\n    handleUpdatedCoordinates(observable, oldCoordinates) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature.');\n        }\n        if (!(oldCoordinates instanceof Array)) {\n            throw TypeError('\"oldCoordinates\" argument must be an array.');\n        }\n        this.refreshContent();\n    }\n\n    /**\n     * - Update this ObserverInstance (i.e. \"this\") based on the property of the ObservableInterface instance (i.e. \"observable\") that has just\n     *   changed and perform other actions as needed\n     * @param {Feature} observable - an ObservableInterface instance\n     * @param {string} propertyKey - the property key of the property that has been created/changed/deleted in the observable\n     * @param {(string|Object)} oldPropertyValue - the previous value of the property that has been created/changed/deleted in the observable\n     * @param {string} namespace - the namespace of the property that has been created/changed/deleted in the observable\n     * @returns {undefined}\n     */\n    handleUpdatedProperty(observable, propertyKey, oldPropertyValue, namespace='treeProps') {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature.');\n        }\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be a string.');\n        }\n        if (typeof namespace !== 'string') {\n            throw TypeError('\"namespace\" argument must be a string.');\n        }\n        this.refreshContent();\n    }\n\n    // ****************************\n    // ** ModalInterface methods **\n    // ****************************\n\n    getDOMElement() {\n        return this.#modal.divElement;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isRemoved() {\n        return this.#removed;\n    }\n\n    // - Here's how refreshing content could work:\n    //  - The FeatureEditModal maintains an internal map of property keys to table rows (<tr> elements)\n    //  - A property is deleted from an object\n    //      - Currently, the entire table just re-renders\n    //      - Now, the FeatureEditModal will look-up the property in its internal map. If the property exists, then remove the row from the table and\n    //        remove the key from the map. If the property was only deleted from one object, but other objects still have the property, then replace\n    //        the value text input after scanning all of the existing objects for that property value. If none of the other objects have the property,\n    //        then delete the row on the multi-feature table.\n    //  - A property is added to an object\n    //      - Currently, the entire table just re-renders\n    //      - Now, the FeatureEditModal will look-up the property in its internal map. If the property doesn't exist, then insert a new row into the\n    //        table and insert the new key into the map. Note that the table that the user was editing will already have the new property inserted\n    //        into the map and the new row inserted into the table as soon as the \"change\" event fires. Other tables that are observing the same\n    //        feature won't have the property in their internal map, so they'll have the property added and the new row added when\n    //        handleUpdatedProperty() fires. Checking for the existence of the property in the internal map is the key to not adding the same row\n    //        twice to the same table. If the property was only added to one object, whether to add a new row to a multi-feature table or just update\n    //        the value text input depends on the results of scanning the other objects for the same property\n    //  - A property is changed on an object\n    //      - Currently, the entire table just re-renders\n    //      - Now, the FeatureEditModal won't have to do anything for a single object. The value text input will already reflect the current state of\n    //        the object. Actually no, what about other FeatureEditModals that have the old value of the property in their value text input? I'll have\n    //        to replace the old value text input with a new value text input, even in the FeatureEditModal that was changed. This is because the\n    //        \"original value\" of the input, which is stored in the event handler, needs to be set to the new value, and the easiest way to do that is\n    //        to just get a new value text input. In the case of multiple objects, I'll have to scan all of them and get a new value text input.\n\n    /**\n     * - Refresh aspects of the modal so that I don't have to re-render the whole thing\n     * @returns {undefined}\n     */\n    refreshContent() {\n        const tableState = {};\n        [...this.#modal.divElement.getElementsByTagName('tr')].filter(tr => tr.querySelector('span[data-property-key]') !== null).forEach(tr => {\n            const span = tr.getElementsByTagName('span')[0];\n            let namespace = span.dataset.propertyNamespace;\n            if (namespace === undefined) {\n                namespace = null;\n            }\n            let valueInput = tr.getElementsByTagName('input');\n            if (valueInput.length === 0) {\n                valueInput = null;\n            } else {\n                valueInput = valueInput[0];\n            }\n            tableState[span.dataset.propertyKey] = {\n                propertyNamespace: namespace,\n                propertyTableRow: tr,\n                propertyValueInput: valueInput\n            }\n        });\n        const tableKeys = Object.keys(tableState);\n        const observablesState = this.#getKeyToValuesMapping();\n        // - I don't need to iterate over the meta namespace because IDs are never added, removed, or changed\n        for (const [key, ary] of Object.entries(observablesState.treeProps)) {\n            // - First, compare the observables' state to the table state. If the observables' state has a property that is not in the table state,\n            //   add a row to the table\n            if (!tableKeys.includes(key)) {\n                const keySpan = document.createElement('span');\n                keySpan.textContent = key;\n                keySpan.dataset.propertyKey = key;\n                keySpan.dataset.propertyNamespace = 'treeProps';\n                this.#modal.insertTBodyRow([this.#getDeletePropertyButton(key), keySpan, this.#getValueTextInput(key, ary)], 'beforeEnd');\n            } else {\n                const valueInput = tableState[key].propertyValueInput;\n                if (valueInput !== null) {\n                    valueInput.replaceWith(this.#getValueTextInput(key, ary));\n                }\n            }\n        }\n        for (const [key, ary] of Object.entries(observablesState.coordinates)) {\n            // - Don't add latitude or longitude rows to tables that didn't already have those rows, just update the existing inputs\n            if (tableKeys.includes(key)) {\n                const valueInput = tableState[key].propertyValueInput;\n                if (valueInput !== null) {\n                    valueInput.replaceWith(this.#getValueTextInput(key, ary));\n                }\n            }\n        }\n        const observablesKeys = [];\n        for (const obj of Object.values(observablesState)) {\n            observablesKeys.push(...Object.keys(obj))\n        }\n        for (const [key, obj] of Object.entries(tableState)) {\n            // - Second, compare the observables' state to the table state. If the observables' state lacks a property that is in the table state,\n            //   remove the corresponding row from the table\n            if (!observablesKeys.includes(key)) {\n                obj.propertyTableRow.remove();\n            }\n        }\n    }\n\n    /**\n     * @returns {undefined}\n     */\n    remove() {\n        if (!this.#removed) {\n            this.#observables.forEach(ob => ob.removeObserver(this));\n            this.#observables = null;\n            this.#modal.divElement.remove();\n            this.#removed = true;\n        }\n    }\n\n    /**\n     * - Render the modal for the first time\n     * @returns {undefined}\n     */\n    renderContent() {\n        const modal = new Modal();\n        modal.addStyleClasses(['featureEditModal'], 'divElement');\n        const keyToValues = this.#getKeyToValuesMapping();\n        for (const [key, ary] of Object.entries(keyToValues.meta)) {\n            const keySpan = document.createElement('span');\n            keySpan.textContent = 'ID';\n            keySpan.dataset.propertyKey = 'treeKey';\n            keySpan.dataset.propertyNamespace = 'meta';\n            if (ary.length === 1) {\n                modal.insertTHeadRow([null, keySpan, ary[0].toString()], 'prepend');\n            } else {\n                modal.insertTHeadRow([null, keySpan, '<Multiple IDs>'], 'prepend');\n            }\n        }\n        for (const [key, ary] of Object.entries(keyToValues.treeProps)) {\n            const keySpan = document.createElement('span');\n            // - I don't create a value text input, so I have to decide whether to display the value of \"object\" or a string here \n            if (key === 'object') {\n                keySpan.textContent = 'Object';\n                keySpan.dataset.propertyKey = 'object';\n                keySpan.dataset.propertyNamespace = 'treeProps';\n                if (ary.length === 1) {\n                    modal.insertTHeadRow([null, keySpan, ary[0].toString()])\n                } else {\n                    modal.insertTHeadRow([null, keySpan, '<Multiple \"Object\" Values>']);\n                }\n                continue;\n            }\n            // - Don't allow the \"from\", \"to\", or \"type\" properties of parent-child lines to be edited\n            if (['from', 'to', 'type'].includes(key) && this.#observables.some(ob => ob.isParentChildLine())) {\n                continue;\n            }\n            keySpan.textContent = key;\n            keySpan.dataset.propertyKey = key;\n            keySpan.dataset.propertyNamespace = 'treeProps';\n            let deleteButton = null;\n            if (!FeatureEditModal.#nonDeletableProperties.includes(key)) {\n                deleteButton = this.#getDeletePropertyButton(key);\n            }\n            modal.insertTBodyRow([deleteButton, keySpan, this.#getValueTextInput(key, ary)]);\n        }\n        for (const [key, ary] of Object.entries(keyToValues.coordinates)) {\n            const keySpan = document.createElement('span');\n            if (['latitude', 'longitude'].includes(key)) {\n                if (this.#observables.some(ob => ob.isConfigurationObject() || ob.isLine())) {\n                    continue;\n                } else {\n                    keySpan.textContent = key;\n                    keySpan.dataset.propertyKey = key;\n                    // - longitude and latitude aren't in any property namespace\n                    modal.insertTBodyRow([null, keySpan, this.#getValueTextInput(key, ary)], 'prepend');\n                }\n            }\n        }\n        modal.insertTBodyRow([this.#getAddPropertyButton(), null, null], 'append', ['absolute']);\n        modal.addStyleClasses(['centeredTable'], 'tableElement');\n        // - Add buttons for regular features\n        if (!this.#observables.some(ob => ob.isComponentFeature())) {\n            modal.insertElement(this.#getDeleteFeatureDiv());\n            if (!this.#observables.some(ob => ob.isConfigurationObject())) {\n                modal.insertElement(this.#getZoomDiv(), 'prepend');\n            }\n        // - Add buttons for components\n        } else {\n            if (this.#observables.every(ob => ob.isConfigurationObject())) {\n                modal.insertElement(this.#getAddConfigurationObjectDiv());\n            } else if (this.#observables.some(ob => ob.isConfigurationObject())) {\n                // - Don't add buttons. Configuration objects cannot be added because not every observable is a configuration object.\n                //   Non-configuration objects cannot be added because there is at least one configuration object. The user should refine their search\n                //   results, but mixing configuration and non-configuration objects isn't necessarily an error\n            } else {\n                if (this.#observables.every(ob => ob.isNode())) {\n                    modal.insertElement(this.#getAddNodeWithCoordinatesDiv());\n                    modal.insertElement(this.#getAddNodeWithMapClickDiv());\n                } else if (this.#observables.every(ob => ob.isLine())) {\n                    modal.insertElement(this.#getAddLineWithFromToDiv());\n                } else {\n                    // - Don't add buttons. The user's search returned both nodes and lines\n                }\n            }\n        }\n        modal.addStyleClasses(['verticalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'containerElement');\n        if (this.#modal === null) {\n            this.#modal = modal;\n        } \n        if (document.body.contains(this.#modal.divElement)) {\n            this.#modal.divElement.replaceWith(modal.divElement);\n            this.#modal = modal;\n        }\n    }\n\n    // *********************\n    // ** Private methods ** \n    // *********************\n\n\n    /**\n     * @returns {boolean}\n     */\n    #componentsStateIsValid() {\n        for (const ob of this.#observables) {\n            for (const [k, v] of Object.entries(ob.getProperties('treeProps'))) { \n                if (!this.#valueTextInputIsValid(k, v)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * - Add a configuration object to the data. Components arrive with bad data. That's why I have to validate a component twice: once during any\n     *   value input changes and once when the button is clicked. I assume that regular features arrive with valid data. That's why I only validate\n     *   when an input changes\n     * @returns {HTMLDivElement}\n     */\n    #getAddConfigurationObjectDiv() {\n        const btn = this.#getWideButton();\n        btn.classList.add('add');\n        btn.appendChild(getCirclePlusSvg());\n        const span = document.createElement('span');\n        span.textContent = 'Add config object';\n        btn.appendChild(span);\n        btn.addEventListener('click', () => {\n            if (this.#componentsStateIsValid()) {\n                this.#controller.addObservables(this.#observables.map(ob => this.#getObservableFromComponent(ob)));\n            }\n        });\n        const div = this.#getWideButtonDiv();\n        div.appendChild(btn);\n        return div;\n    }\n\n    /**\n     * - Add a line to the map by inputing \"from\" and \"to\" values and then clicking this button\n     * @returns {HTMLDivElement}\n     */\n    #getAddLineWithFromToDiv() {\n        const btn = this.#getWideButton();\n        btn.classList.add('add');\n        btn.appendChild(getCirclePlusSvg());\n        const span = document.createElement('span');\n        span.textContent = 'Add line with from/to';\n        btn.appendChild(span);\n        btn.addEventListener('click', () => {\n            if (this.#componentsStateIsValid()) {\n                this.#controller.addObservables(this.#observables.map(ob => this.#getObservableFromComponent(ob)));\n            }\n        });\n        const div = this.#getWideButtonDiv();\n        div.appendChild(btn);\n        return div;\n    }\n\n    /**\n     * - Add a node to the map by inputing coordinates and then clicking this button\n     * @returns {HTMLDivElement}\n     */\n    #getAddNodeWithCoordinatesDiv() {\n        const btn = this.#getWideButton();\n        btn.classList.add('add');\n        btn.appendChild(getCirclePlusSvg());\n        const span = document.createElement('span');\n        span.textContent = 'Add with coordinates';\n        btn.appendChild(span);\n        btn.addEventListener('click', () => {\n            if (this.#componentsStateIsValid()) {\n                this.#controller.addObservables(this.#observables.map(ob => this.#getObservableFromComponent(ob)));\n            }\n        });\n        const div = this.#getWideButtonDiv();\n        div.appendChild(btn);\n        return div;\n    }\n\n    /**\n     * - Add a node to the map by clicking on the map\n     * @returns {HTMLDivElement}\n     */\n    #getAddNodeWithMapClickDiv() {\n        const btn = this.#getWideButton();\n        btn.classList.add('add');\n        btn.appendChild(getCirclePlusSvg());\n        const span = document.createElement('span');\n        span.textContent = 'Add with map click';\n        btn.appendChild(span);\n        const that = this;\n        btn.addEventListener('click', () => {\n            const mapDiv = document.getElementById('map');\n            mapDiv.style.cursor = 'crosshair';\n            LeafletLayer.map.on('click', function(e) {\n                LeafletLayer.map.off('click');\n                mapDiv.style.removeProperty('cursor');\n                if (that.#componentsStateIsValid()) {\n                    that.#controller.addObservables(that.#observables.map(ob => that.#getObservableFromComponent(ob, [e.latlng.lat, e.latlng.lng])));\n                }\n            });\n        });\n        const div = this.#getWideButtonDiv();\n        div.appendChild(btn);\n        return div;\n    }\n    \n    /**\n     * @returns {HTMLButtonElement}\n     */\n    #getAddPropertyButton() {\n        const btn = document.createElement('button');\n        btn.classList.add('add');\n        btn.classList.add('horizontalFlex');\n        btn.classList.add('centerMainAxisFlex');\n        btn.classList.add('centerCrossAxisFlex');\n        btn.appendChild(getCirclePlusSvg());\n        const that = this;\n        btn.addEventListener('click', function() {\n            const deletePlaceholder = document.createElement('span');\n            const keyInputPlaceholder = document.createElement('span');\n            const valueInputPlaceholder = document.createElement('span');\n            that.#modal.insertTBodyRow([deletePlaceholder, keyInputPlaceholder, valueInputPlaceholder], 'beforeEnd');\n            that.#insertKeyTextInput(deletePlaceholder, keyInputPlaceholder, valueInputPlaceholder);\n        });\n        return btn;\n    }\n\n    /**\n     * @returns {HTMLDivElement}\n     */\n    #getDeleteFeatureDiv() {\n        const btn = this.#getWideButton();\n        btn.classList.add('delete');\n        btn.appendChild(getTrashCanSvg());\n        const span = document.createElement('span');\n        span.textContent = 'Delete';\n        btn.appendChild(span);\n        btn.addEventListener('click', () => {\n            this.#controller.deleteObservables(this.#observables);    \n        });\n        const div = this.#getWideButtonDiv();\n        div.appendChild(btn);\n        return div;\n    }\n    \n    /**\n     * @param {string} propertyKey\n     * @returns {HTMLButtonElement} a button that can be clicked on to remove a property from an ObservableInterface instance\n     */\n    #getDeletePropertyButton(propertyKey) {\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be a string.');\n        }\n        const btn = document.createElement('button');\n        btn.classList.add('delete');\n        btn.classList.add('horizontalFlex');\n        btn.classList.add('centerMainAxisFlex');\n        btn.classList.add('centerCrossAxisFlex');\n        btn.appendChild(getTrashCanSvg());\n        const that = this;\n        btn.addEventListener('click', function(e) {\n            that.#controller.deleteProperty(that.#observables, propertyKey);\n            // - This is code is required for a transitionalDeleteButton to remove the row\n            let parentElement = this.parentElement;\n            while (!(parentElement instanceof HTMLTableRowElement)) {\n                parentElement = parentElement.parentElement;\n            }\n            parentElement.remove();\n            e.stopPropagation();\n        });\n        return btn;\n    }\n\n    /**\n     * - Iterate through all of the observables and map each property key to all unique values for that (treeProps) property key across all of the\n     *   observables. Also includes treeKey, longitude, and latitude values\n     * @returns {Object}\n     */\n    #getKeyToValuesMapping() {\n        const keyToValues = {\n            meta: {},\n            treeProps: {},\n            coordinates: {}\n        };\n        this.#observables.forEach(ob => {\n            const treeKey = ob.getProperty('treeKey', 'meta');\n            if (!keyToValues.meta.hasOwnProperty('treeKey')) {\n                keyToValues.meta.treeKey = [treeKey];\n            } else if (!keyToValues.meta.treeKey.includes(treeKey)) {\n                keyToValues.meta.treeKey.push(treeKey);\n            }\n            if (ob.hasProperty('treeProps', 'meta')) {\n                for (const [k, v] of Object.entries(ob.getProperties('treeProps'))) {\n                    if (!keyToValues.treeProps.hasOwnProperty(k)) {\n                        keyToValues.treeProps[k] = [v];\n                    } else if (!keyToValues.treeProps[k].includes(v)) {\n                        keyToValues.treeProps[k].push(v);\n                    }\n                }\n            }\n            let coordinatesArray = [];\n            if (ob.isNode()) {\n                const [lon, lat] = ob.getCoordinates();\n                coordinatesArray = [['longitude', +lon], ['latitude', +lat]];\n            }\n            if (ob.isLine()) {\n                const [[lon_1, lat_1], [lon_2, lat_2]] = ob.getCoordinates();\n                coordinatesArray = [['longitude', +lon_1], ['latitude', +lat_1], ['longitude', +lon_2], ['latitude', +lat_2]];\n            }\n            coordinatesArray.forEach(ary => {\n                const k = ary[0];\n                const v = ary[1];\n                if (!keyToValues.coordinates.hasOwnProperty(k)) {\n                    keyToValues.coordinates[k] = [v];\n                } else if (!keyToValues.coordinates[k].includes(v)) {\n                    keyToValues.coordinates[k].push(v);\n                }\n            });\n        });\n        return keyToValues;\n    }\n\n    /**\n     * - TODO: move this into the controller? Wouldn't be so bad if I did. Actually I should because of mass add. But mass add should just be another\n     *   button so this function can stay here.\n     * @param {Feature} component - a component feature\n     * @param {Array} [coordinates=null] - an array of coordinates in [<lat>, <lon>] format that the new feature should have instead of the\n     *      coordinates that were in the component \n     * @returns {Feature} a feature that can be added to the graph\n     */\n    #getObservableFromComponent(component, coordinates=null) {\n        if (!(component instanceof Feature)) {\n            throw TypeError('\"component\" argument must be instanceof Feature.');\n        }\n        const geometry = {\n            type: 'Point'\n        };;\n        const observable = new Feature({\n            geometry: geometry,\n            properties: {\n                treeKey: component.getProperty('treeKey', 'meta'),\n                treeProps: structuredClone(component.getProperties('treeProps'))\n            },\n            type: 'Feature'\n        });\n        // - Start with whatever coordinates were in the text inputs\n        let featureCoordinates = structuredClone(component.getCoordinates());\n        // - If coordinates were provided, use those instead\n        if (coordinates !== null) {\n            featureCoordinates = [coordinates[1], coordinates[0]];\n        }\n        // - If the component is a line, get the coordinates of its nodes\n        if (component.isLine()) {\n            geometry.type = 'LineString';\n            const fromKey = this.#controller.observableGraph.getKeyForComponent(observable.getProperty('from'));\n            const toKey = this.#controller.observableGraph.getKeyForComponent(observable.getProperty('to'));\n            const { sourceLat, sourceLon, targetLat, targetLon } = this.#controller.observableGraph.getLineLatLon(fromKey, toKey);\n            featureCoordinates = [[sourceLon, sourceLat], [targetLon, targetLat]];\n        }\n        geometry.coordinates = featureCoordinates;\n        return observable;\n    }\n\n    /**\n     * - Return a text input that can be viewed in a modal\n     * @param {string} propertyKey\n     * @param {Array} [propertyValues=null]\n     * @returns {HTMLInputElement} a text input that can be edited on to change a property value in an ObservableInterface instance\n     */\n    #getValueTextInput(propertyKey, propertyValues=null) {\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be typeof string.');\n        }\n        if (!(propertyValues instanceof Array) && propertyValues !== null) {\n            throw TypeError('\"propertyValues\" argument must be instanceof Array or null.');\n        }\n        const input = document.createElement('input');\n        if (propertyValues === null) {\n            //- Do nothing. A new property was just added so the value text input should be blank\n        } else if (propertyValues.length === 1) {\n            // - This works even if propertyValues = [\"\"], which it can be sometimes\n            input.value = propertyValues[0];\n        } else {\n            input.value = `<Multiple \"${propertyKey}\" Values>`;\n        }\n        let originalValue = input.value;\n        const that = this;\n        input.addEventListener('change', function() {\n            const inputValue = this.value.trim();\n            if (that.#valueTextInputIsValid(propertyKey, inputValue)) {\n                that.#observables.forEach(ob => {\n                    if (['latitude', 'longitude'].includes(propertyKey)) {\n                        if (ob.isNode()) {\n                            const [lon, lat] = ob.getCoordinates();\n                            if (propertyKey === 'latitude') {\n                                that.#controller.setCoordinates([ob], [lon, inputValue]);\n                            } else {\n                                that.#controller.setCoordinates([ob], [inputValue, lat]);\n                            }\n                        } else if (ob.isLine()) {\n                            const [[lon, lat], [lon_1, lat_1]] = ob.getCoordinates(); \n                            if (propertyKey === 'latitude') {\n                                that.#controller.setCoordinates([ob], [[lon, inputValue], [lon_1, inputValue]]);\n                            } else {\n                                that.#controller.setCoordinates([ob], [[inputValue, lat], [inputValue, lat_1]]);\n                            }\n                        }\n                    } else if (['from', 'to', 'parent'].includes(propertyKey)) {\n                        that.#controller.setProperty([ob], propertyKey, inputValue);\n                    } else {\n                        that.#controller.setProperty([ob], propertyKey, inputValue);\n                    }\n                });\n                originalValue = inputValue;\n            } else {\n                this.value = originalValue;\n            }\n        });\n        return input;\n    }\n\n    /**\n     * @returns {HTMLButtonElement}\n     */\n    #getWideButton() {\n        const btn = document.createElement('button');\n        btn.classList.add('horizontalFlex');\n        btn.classList.add('centerMainAxisFlex');\n        btn.classList.add('centerCrossAxisFlex');\n        btn.classList.add('fullWidth');\n        return btn;\n    }\n\n    /**\n     * @returns {HTMLDivElement}\n     */\n    #getWideButtonDiv() {\n        const div = document.createElement('div');\n        div.classList.add('horizontalFlex');\n        div.classList.add('centerMainAxisFlex');\n        div.classList.add('centerCrossAxisFlex');\n        div.classList.add('halfWidth');\n        return div;\n    }\n    \n    /**\n     * @returns {HTMLDivElement}\n     */\n    #getZoomDiv() {\n        const btn = this.#getWideButton();\n        btn.appendChild(getPinSvg());\n        const span = document.createElement('span');\n        span.textContent = 'Zoom';\n        btn.appendChild(span);\n        btn.addEventListener('click', zoom.bind(null, this.#observables));\n        const div = this.#getWideButtonDiv();\n        div.appendChild(btn);\n        return div;\n    }\n\n    /**\n     * @param {Node} deletePlaceholder - a document node that will be replaced by a \"delete property\" button\n     * @param {Node} keyInputPlaceholder - a document node that will be replaced by this key input\n     * @param {Node} valueInputPlaceholder - a document node that will be replaced by a value input \n     * @returns {undefined}\n     */\n    #insertKeyTextInput(deletePlaceholder, keyInputPlaceholder, valueInputPlaceholder) {\n        const input = document.createElement('input');\n        keyInputPlaceholder.replaceWith(input);\n        const transitionalDeleteButton = this.#getDeletePropertyButton('');\n        deletePlaceholder.replaceWith(transitionalDeleteButton);\n        const that = this;\n        let originalValue = input.value;\n        input.addEventListener('change', function () {\n            const inputValue = this.value.trim();\n            // - If the input value isn't valid, just don't create a text input for the value and don't update the feature's properties\n            if (that.#keyTextInputIsValid(inputValue)) {\n                let parentElement = this.parentElement;\n                while (!(parentElement instanceof HTMLTableRowElement)) {\n                    parentElement = parentElement.parentElement;\n                }\n                parentElement.remove();\n                that.#controller.setProperty(that.#observables, inputValue, '', 'treeProps');\n                //this.replaceWith(document.createTextNode(inputValue));\n                //transitionalDeleteButton.replaceWith(that.#getDeletePropertyButton(inputValue));\n                //valueInputPlaceholder.replaceWith(that.#getValueTextInput(inputValue));\n                //originalValue = inputValue;\n            } else {\n                input.value = originalValue;\n            }\n        });\n    }\n\n    /**\n     * @param {string} inputValue\n     * @returns {boolean}\n     */\n    #keyTextInputIsValid(inputValue) {\n        // - I am no longer always converting to lowercase because names are case-sensitive and therefore other properties should be too\n        if (FeatureEditModal.#nonDeletableProperties.includes(inputValue)) {\n            alert(`The following properties cannot be added to objects: ${FeatureEditModal.#nonDeletableProperties}.`);\n            return false;\n        } else if (inputValue === '') {\n            return false;\n        } else if (this.#observables.some(ob => ob.hasProperty(inputValue))) {\n            if (this.#observables.length === 1) {\n                alert(`The property \"${inputValue}\" could not be added because this object already has this property.`);\n            } else {\n                alert(`The property \"${inputValue}\" could not be added because one or more objects already has this property.`);\n            }\n            return false;\n        }\n        return true;\n    }\n\n    /**\n     * - A render a static, read-only table for arbitrary GeoJSON objects. Does not support editing data in any way\n     */\n    #renderReadOnlyModal() {\n        if (this.#observables.length > 1) {\n            throw Error('ReadOnlyModal does not support viewing multiple GeoJSON features');\n        }\n        const modal = new Modal();\n        modal.addStyleClasses(['featureEditModal'], 'divElement');\n        for (const [key, val] of Object.entries(this.#observables[0].getProperties('meta'))) {\n            const keySpan = document.createElement('span');\n            keySpan.textContent = key;\n            keySpan.dataset.propertyKey = key;\n            keySpan.dataset.propertyNamespace = 'meta';\n            const valueSpan = document.createElement('span');\n            valueSpan.textContent = val;\n            modal.insertTBodyRow([keySpan, valueSpan]);\n        }\n        modal.addStyleClasses(['centeredTable', 'plainTable'], 'tableElement');\n        modal.addStyleClasses(['verticalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'containerElement');\n        if (this.#modal === null) {\n            this.#modal = modal;\n        }\n        if (document.body.contains(this.#modal.divElement)) {\n            this.#modal.divElement.replaceWith(modal.divElement);\n            this.#modal = modal;\n        }\n    }\n    \n    /**\n     * @param {string} propertyKey\n     * @param {string} inputValue\n     * @returns {boolean}\n     */\n    #toFromParentObjectIsValid(propertyKey, inputValue) {\n        let observableKey;\n        try {\n            if(this.#observables.some(ob => ob.isComponentFeature())) {\n                // - Components and non-components will never be together in an array of observables\n                observableKey = this.#controller.observableGraph.getKeyForComponent(inputValue);\n            } else {\n                observableKey = this.#controller.observableGraph.getKey(inputValue, this.#observables[0].getProperty('treeKey', 'meta'));\n                // - This is commented out because it's fine if different objects in the search selection will return different keys. If there are\n                //   different keys for the same name, the FeatureGraph should just return the correct key for each object. Actually it's not. What if a\n                //   configuration object and a non-configuration object share a name? I could write logic that decides whether returning multiple keys is\n                //   okay (e.g. do both keys point to non-configuration objects?) but that would be annoying. Just return false if there are multiple keys\n                if (this.#observables.some(ob => this.#controller.observableGraph.getKey(inputValue, ob.getProperty('treeKey', 'meta')) !== observableKey)) {\n                    alert(`The value of the \"${propertyKey}\" property cannot be set to \"${inputValue}\" because multiple objects have that value for their\n                        \"name\" property. Either ensure that value for the \"${propertyKey}\" property is a unique name, or change the value of the\n                        \"name\" property of other object(s) to ensure the name is unique.`);\n                    return false;\n                }\n            }\n        } catch {\n            alert(`No object has the value \"${inputValue}\" for the \"name\" property. Ensure that the value for the \"${propertyKey}\" property matches an existing name.`);\n            return false;\n        }\n        if (observableKey.startsWith('parentChild:')) {\n            alert(`The value \"${inputValue}\" is the name of a parent-child line. Parent-child line names cannot be used as a value for the \"${propertyKey}\" property.`);\n            return false;\n        }\n        const observable = this.#controller.observableGraph.getObservable(observableKey);\n        if (observable.isConfigurationObject()) {\n            alert(`The value \"${inputValue}\" is the name of a configuration object. Configuration object names cannot be used as a value for the \"${propertyKey}\" property.`);\n            return false;\n        }\n        // - Components are not in the graph, so the observable cannot be a component feature\n        return true;\n    } \n    /**\n     * - Validate the just-inputed value for a value text input\n     * @param {string} propertyKey\n     * @param {string} inputValue\n     * @returns {boolean} whether the propertyKey and value are valid from a domain perspective\n     */\n    #valueTextInputIsValid(propertyKey, inputValue) {\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be typeof string.');\n        }\n        if (typeof inputValue !== 'string') {\n            throw TypeError('\"inputValue\" argument must be typeof string.');\n        }\n        // - I am no longer always converting to lowercase because names are case-sensitive and therefore other properties should be too\n        switch (propertyKey) {\n            case 'type':\n                inputValue = inputValue.toLowerCase();\n                if (inputValue === 'parentchild') {\n                    alert('The \"type\" property may not have a value of \"parentChild\".');\n                    return false;\n                }\n                return true;\n            case 'treeKey':\n                alert('The \"treeKey\" property cannot be changed.');\n                return false;\n            case 'name':\n                if (this.#observables.length > 1) {\n                    alert('The \"name\" property cannot be edited for multiple objects simultaneously.');\n                    return false;\n                } else {\n                    if (inputValue.trim() === '') {\n                        alert('The \"name\" property cannot be blank.');\n                        return false;\n                    }\n                    if (this.#controller.observableGraph.getObservables(ob => ob.hasProperty('name') && ob.getProperty('name') === inputValue).length > 0) {\n                        alert(`The \"name\" property must be unique for all objects. The name \"${inputValue}\" is already used by another object.`);\n                        return false;\n                    }\n                }\n                return true;\n            case 'from':\n            case 'to':\n                // - Test. It works\n                //[...this.#modal.divElement.getElementsByTagName('tr')].forEach(tr => {\n                //    [...tr.getElementsByTagName('span')].forEach(span => {\n                //        if (span.textContent === propertyKey) {\n                //            tr.getElementsByTagName('input')[0].classList.add('invalid');\n                //        }\n                //    });\n                //});\n                // - Test\n                if (!this.#observables.every(ob => ob.isLine())) {\n                    alert(`The value of the \"${propertyKey}\" property cannot be edited for non-line objects. Ensure your search includes only line objects.`);\n                    return false;\n                }\n                if (!this.#toFromParentObjectIsValid(propertyKey, inputValue)) {\n                    return false;\n                }\n                if (propertyKey === 'from' && this.#observables.some(ob => ob.getProperty('to') === inputValue)) {\n                    if (this.#observables.length === 1) {\n                        alert(`This line already has the value \"${inputValue}\" for the property \"to\". Lines may not begin and end on the same object.`);\n                    } else {\n                        alert(`One or more objects already has the value \"${inputValue}\" for the property \"to\". Lines may not begin and end on the same object.`);\n                    }\n                    return false;\n                }\n                if (propertyKey === 'to' && this.#observables.some(ob => ob.getProperty('from') === inputValue)) {\n                    if (this.#observables.length === 1) {\n                        alert(`This line already has the value \"${inputValue}\" for the property \"from\". Lines may not begin and end on the same object.`);\n                    } else {\n                        alert(`One or more objects already has the value \"${inputValue}\" for the property \"from\". Lines may not begin and end on the same object.`);\n                    }\n                    return false;\n                }\n                return true;\n            case 'parent':\n                if (!this.#observables.every(ob => ob.isChild())) {\n                    alert(`The value of the \"${propertyKey}\" property cannot be edited for non-child objects. Ensure your search includes only child objects.`);\n                    return false;\n                }\n                return this.#toFromParentObjectIsValid(propertyKey, inputValue);\n            case 'latitude':\n            case 'longitude':\n                if (this.#observables.some(ob => ob.isConfigurationObject())) {\n                    if (this.#observables.length === 1) {\n                        alert(`This object is a configuration object. The property \"${propertyKey}\" cannot be set for configuration objects because they aren't shown on the map.`);\n                    } else {\n                        alert(`One or more objects are configuration objects. The property \"${propertyKey}\" cannot be set for configuration objects because they aren't shown on the map.`);\n                    }\n                    return false;\n                }\n                if (isNaN(+inputValue)) {\n                    alert(`The value \"${inputValue}\" is not a valid number. A value for the \"${propertyKey}\" property must be a valid number.`);\n                    return false;\n                }\n                return true;\n            default:\n                return true;\n        }\n    }\n}\n\nfunction getCirclePlusSvg() {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg','svg');\n    svg.setAttribute('width', '22px');\n    svg.setAttribute('height', '22px');\n    svg.setAttribute('viewBox', '0 0 24 24'); \n    svg.setAttribute('fill', 'none'); \n    let path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttribute('d', 'M9 12H15');\n    path.setAttribute('stroke', '#FFFFFF');\n    path.setAttribute('stroke-width', '2');\n    path.setAttribute('stroke-linecap', 'round');\n    path.setAttribute('stroke-linejoin', 'round');\n    svg.appendChild(path);\n    path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttribute('d', 'M12 9L12 15');\n    path.setAttribute('stroke', '#FFFFFF');\n    path.setAttribute('stroke-width', '2');\n    path.setAttribute('stroke-linecap', 'round');\n    path.setAttribute('stroke-linejoin', 'round');\n    svg.appendChild(path);\n    path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttribute('d', 'M21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z');\n    path.setAttribute('stroke', '#FFFFFF');\n    path.setAttribute('stroke-width', '2');\n    svg.appendChild(path);\n    return svg;\n}\n\nfunction getTrashCanSvg() {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg','svg');\n    svg.setAttribute('width', '22px');\n    svg.setAttribute('height', '22px');\n    svg.setAttribute('viewBox', '0 0 24 24'); \n    svg.setAttribute('fill', 'none'); \n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttribute('d', 'M10 10V16M14 10V16M4 6H20M15 6V5C15 3.89543 14.1046 3 13 3H11C9.89543 3 9 3.89543 9 5V6M18 6V14M18 18C18 19.1046 17.1046 20 16 20H8C6.89543 20 6 19.1046 6 18V13M6 9V6');\n    path.setAttribute('stroke', '#FFFFFF');\n    path.setAttribute('stroke-width', '1.5');\n    path.setAttribute('stroke-width', '1.5');\n    path.setAttribute('stroke-linecap', 'round');\n    path.setAttribute('stroke-linejoin', 'round');\n    svg.appendChild(path);\n    return svg;\n}\n\nfunction getPinSvg() {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg','svg');\n    svg.setAttribute('width', '22px');\n    svg.setAttribute('height', '22px');\n    svg.setAttribute('viewBox', '0 0 24 24'); \n    svg.setAttribute('fill', 'none'); \n    const circle = document.createElementNS('http://www.w3.org/2000/svg', 'circle');\n    circle.setAttribute('cx', '12');\n    circle.setAttribute('cy', '10');\n    circle.setAttribute('r', '3');\n    circle.setAttribute('stroke', '#FFFFFF');\n    circle.setAttribute('stroke-width', '1.5');\n    circle.setAttribute('stroke-width', '1.5');\n    circle.setAttribute('stroke-linecap', 'round');\n    circle.setAttribute('stroke-linejoin', 'round');\n    svg.appendChild(circle);\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttribute('d', \"M19 9.75C19 15.375 12 21 12 21C12 21 5 15.375 5 9.75C5 6.02208 8.13401 3 12 3C15.866 3 19 6.02208 19 9.75Z\");\n    path.setAttribute('stroke', '#FFFFFF');\n    path.setAttribute('stroke-width', '1.5');\n    path.setAttribute('stroke-width', '1.5');\n    path.setAttribute('stroke-linecap', 'round');\n    path.setAttribute('stroke-linejoin', 'round');\n    svg.appendChild(path);\n    return svg;\n}\n\n/**\n * - There's no need to create a function that returns a function if I use Function.prototype.bind() propertly\n * @param {Array} observables - an array of ObservableInterface instances\n * @returns {undefined}\n */\nfunction zoom(observables) {\n    if (!(observables instanceof Array)) {\n        throw TypeError('\"observables\" argument must be instanceof Array.');\n    }\n    if (observables.length === 1) {\n        const observable = observables[0];\n        const layer = Object.values(observable.getObservers().filter(ob => ob instanceof LeafletLayer)[0].getLayer()._layers)[0];\n        if (observable.isNode()) {\n            const [lon, lat] = structuredClone(observable.getCoordinates());\n            // - The max zoom level without losing the map is 19\n            LeafletLayer.map.flyTo([lat, lon], 19, {duration: .3});\n            if (!layer.isPopupOpen()) {\n                layer.openPopup();\n            }\n        } else if (observable.isLine()) {\n            const [[lon1, lat1], [lon2, lat2]] = observable.getCoordinates();\n            LeafletLayer.map.flyToBounds([[lat1, lon1], [lat2, lon2]], {duration: .3});\n            if (!layer.isPopupOpen()) {\n                layer.openPopup();\n            }\n        } else {\n            let coordinates;\n            if (observable.isPolygon()) {\n                coordinates = observable.getCoordinates().flat(1);\n            } else if (observable.isMultiPolygon()) {\n                coordinates = observable.getCoordinates().flat(2);\n            } else {\n                return;\n            }\n            const lons = [];\n            const lats = [];\n            coordinates.forEach(ary => { lons.push(ary[0]); lats.push(ary[1]); });\n            LeafletLayer.map.flyToBounds([\n                [Math.min.apply(null, lats), Math.min.apply(null, lons)],\n                [Math.max.apply(null, lats), Math.max.apply(null, lons)]],\n                {duration: .3});\n            if (!layer.isPopupOpen()) {\n                layer.openPopup();\n            }\n        }\n    } else {\n        const lons = [];\n        const lats = [];\n        observables.forEach(ob => {\n            if (ob.isNode()) {\n                const [lon, lat] = structuredClone(ob.getCoordinates());\n                lons.push(lon);\n                lats.push(lat);\n            } else if (ob.isLine()) {\n                const [[lon1, lat1], [lon2, lat2]] = structuredClone(ob.getCoordinates());\n                lons.push(...[lon1, lon2]);\n                lats.push(...[lat1, lat2]);\n            }\n        });\n        LeafletLayer.map.flyToBounds([\n            [Math.min.apply(null, lons), Math.min.apply(null, lats)],\n            [Math.max.apply(null, lons), Math.max.apply(null, lats)],\n        ]);\n    }\n}\n</script>\n<script>\n\"use strict\";\n\nclass SearchModal {\n    #configDropdownDiv;         // - A DropdownDiv instance\n    #controller;                // - ControllerInterface instance for this SearchModal\n    #keySelects;                // - An array of HTMLSelectElement instances\n    #lineDropdownDiv;           // - A DropdownDiv instance\n    #modal;                     // - A single Modal instance for this SearchModal\n    #nodeDropdownDiv;           // - A DropdownDiv instance\n    #observables;               // - An array of ObservableInterface instances (i.e. components) or an array containing a FeatureGraph\n    #removed;                   // - Whether this SearchModal instance has already been deleted\n    #searchResults;             // - An array of all of the ObservableInterface instances that matched the search. This is necessary to build additional functionality (e.g. coloring, etc.)\n\n    /**\n     * @param {FeatureController} controller - a ControllerInterface instance\n     * @param {Array} [observables=null] - an array of ObservableInterface instances (i.e. components)\n     * @returns {undefined}\n     */\n    constructor(controller, observables=null) {\n        if (!(controller instanceof FeatureController)) {\n            throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n        }\n        if (!(observables instanceof Array) && observables !== null) {\n            throw TypeError('\"observables\" argument must be an array or null.');\n        }\n        this.#configDropdownDiv = new DropdownDiv();\n        this.#configDropdownDiv.addStyleClasses(['sideNav', 'searchCategory'], 'divElement');\n        this.#controller = controller;\n        this.#keySelects = [];\n        this.#lineDropdownDiv = new DropdownDiv();\n        this.#lineDropdownDiv.addStyleClasses(['sideNav', 'searchCategory'], 'divElement');\n        this.#modal = null;\n        this.#nodeDropdownDiv = new DropdownDiv();\n        this.#nodeDropdownDiv.addStyleClasses(['sideNav', 'searchCategory'], 'divElement');\n        if (observables === null) {\n            this.#observables = [controller.observableGraph];\n            this.#observables[0].registerObserver(this);\n        } else {\n            this.#observables = observables;\n            this.#observables.forEach(ob => ob.registerObserver(this));\n        }\n        this.#removed = false;\n        this.#searchResults = [];\n        this.renderContent();\n        this.#search();\n        this.#attachDropdownDivEventHandlers();\n    }\n\n    // *******************************\n    // ** ObserverInterface methods **\n    // *******************************\n\n    /**\n     * - Remove this ObserverInterface instance (i.e. \"this\") from the ObservableInterface instance (i.e. \"observable\") that has been deleted, and\n     *   perform other actions as needed\n     * @param {Feature} observable - an ObservableInterface instance. While this SearchModal is an observer of the FeatureGraph, the FeatureGraph\n     *      calls this function with a Feature argument\n     * @returns {undefined}\n     */\n    handleDeletedObservable(observable) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature.');\n        }\n        this.#searchResults = this.#searchResults.filter(ob => ob !== observable);\n        this.refreshContent();\n        const {configs, nodes, lines} = this.#getCategorizedSearchResults();\n        [\n            [this.#configDropdownDiv, configs, 'Configuration objects'],\n            [this.#nodeDropdownDiv, nodes, 'Nodes'],\n            [this.#lineDropdownDiv, lines, 'Lines']\n        ].forEach(ary => {\n            ary[0].setButton(`${ary[2]}: ${ary[1].length}`, true);\n        });\n    }\n\n    /**\n     * @param {Feature} observable - an ObservableInterface instance. While this SearchModal is an observer of the FeatureGraph, the FeatureGraph\n     *      calls this function with a Feature argument\n     * @returns {undefined}\n     */\n    handleNewObservable(observable) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof FeatureGraph.');\n        }\n        this.refreshContent();\n    }\n\n    /**\n     * - Update this ObserverInterface instance (i.e. \"this\") based on the coordinates of the ObservableInterface instance (i.e. \"observable\") that\n     *   have just changed and perform other actions as needed\n     * @param {Feature} observable - an ObservableInterface instance\n     * @param {Array} oldCoordinates - the old coordinates of the observable prior to the change in coordinates\n     * @returns {undefined}\n     */\n    handleUpdatedCoordinates(observable, oldCoordinates) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(observable instanceof Feature) && !(observable instanceof FeatureGraph)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature or FeatureGraph.');\n        }\n        if (!(oldCoordinates instanceof Array)) {\n            throw TypeError('\"oldCoordinates\" argument must be an array.');\n        }\n        this.refreshContent();\n    }\n\n    /**\n     * - Update this ObserverInstance (i.e. \"this\") based on the property of the ObservableInterface instance (i.e. \"observable\") that has just\n     *   changed and perform other actions as needed\n     * @param {Feature} observable - an ObservableInterface instance\n     * @param {string} propertyKey - the property key of the property that has been created/changed/deleted in the observable\n     * @param {(string|Object)} oldPropertyValue - the previous value of the property that has been created/changed/deleted in the observable\n     * @param {string} namespace - the namespace of the property that has been created/changed/deleted in the observable\n     * @returns {undefined}\n     */\n    handleUpdatedProperty(observable, propertyKey, oldPropertyValue, namespace='treeProps') {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        // - A SearchModal can either directly observer Features or a FeatureGraph. Since in both cases the SearchModal response is the same, this is\n        //   a special case where the observable can be one of two classes\n        if (!(observable instanceof Feature) && !(observable instanceof FeatureGraph)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature or FeatureGraph.');\n        }\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be a string.');\n        }\n        if (typeof namespace !== 'string') {\n            throw TypeError('\"namespace\" argument must be a string.');\n        }\n        this.refreshContent();\n    }\n\n    // ****************************\n    // ** ModalInterface methods **\n    // ****************************\n\n    /**\n     * @returns {HTMLDivElement}\n     */\n    getDOMElement() {\n        return this.#modal.divElement;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isRemoved() {\n        return this.#removed;\n    }\n\n    /**\n     * @returns {undefined}\n     */\n    refreshContent() {\n        const keySelects = [...this.#keySelects];\n        const that = this;\n        keySelects.forEach(oldKeySelect => {\n            const index = this.#keySelects.indexOf(oldKeySelect);\n            if (index > -1) {\n                this.#keySelects.splice(index, 1);\n            }\n            const newKeySelect = this.#getKeySelect(oldKeySelect);\n            oldKeySelect.replaceWith(newKeySelect);\n            that.#handleKeySelectChange(newKeySelect);\n        });\n    }\n\n    /**\n     * @returns {undefined}\n     */\n    remove() {\n        if (!this.#removed) {\n            this.#configDropdownDiv.divElement.remove();\n            this.#configDropdownDiv = null;\n            this.#controller = null;\n            this.#keySelects = null;\n            this.#lineDropdownDiv.divElement.remove();\n            this.#lineDropdownDiv = null;\n            this.#modal.divElement.remove(); \n            this.#modal = null;\n            this.#nodeDropdownDiv.divElement.remove();\n            this.#nodeDropdownDiv = null;\n            this.#observables.forEach(ob => ob.removeObserver(this));\n            this.#observables = null;\n            this.#removed = true;\n        }\n    }\n \n    /**\n     * @returns {undefined}\n     */\n    renderContent() {\n        const modal = new Modal();\n        modal.addStyleClasses(['searchModal'], 'divElement');\n        const keySelect = this.#getKeySelect();\n        modal.insertTBodyRow([this.#getAddRowButton(), null, keySelect, this.#getOperatorSelect(), this.#getValueTextInput()], 'beforeEnd');\n        this.#handleKeySelectChange(keySelect);\n        modal.addStyleClasses(['centeredTable'], 'tableElement');\n        modal.insertElement(this.#getSearchButton());\n        modal.addStyleClasses(['verticalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'containerElement');\n        if (this.#modal === null) {\n            this.#modal = modal;\n        } \n        if (document.body.contains(this.#modal.divElement)) {\n            this.#modal.divElement.replaceWith(modal.divElement);\n            this.#modal = modal;\n        }\n    }\n\n    // ********************\n    // ** Public methods **\n    // ********************\n\n    /**\n     * @returns {HTMLDivElement}\n     */\n    getConfigSearchResultsDiv() {\n        return this.#configDropdownDiv.divElement;\n    }\n\n    /**\n     * @returns {HTMLDivElement}\n     */\n    getLineSearchResultsDiv() {\n        return this.#lineDropdownDiv.divElement;\n    }\n\n    /**\n     * @returns {HTMLDivElement}\n     */\n    getNodeSearchResultsDiv() {\n        return this.#nodeDropdownDiv.divElement;\n    }\n    \n    // *********************\n    // ** Private methods ** \n    // *********************\n\n    /**\n     * @param {DropdownDiv} dropdownDiv\n     * @param {Array} observables\n     * @returns {undefined}\n     */\n    #appendFeatureDropdownDivs(dropdownDiv, observables) {\n        if (!(dropdownDiv instanceof DropdownDiv)) {\n            throw TypeError('\"dropdown\" argument must be instanceof DropdownDiv');\n        }\n        if (!(observables instanceof Array)) {\n            throw TypeError('\"observables\" argument must be an Array');\n        }\n        observables.forEach(ob => {\n            const featureDropdownDiv = new FeatureDropdownDiv(ob, this.#controller);\n            dropdownDiv.contentDivElement.appendChild(featureDropdownDiv.getDOMElement())\n        });\n    }\n\n    /**\n     * - The event handler must itself call this.#getCategorizedSearchResults() in order to get the current set of search results\n     * @returns {undefined}\n     */\n    #attachDropdownDivEventHandlers() {\n        [[this.#configDropdownDiv, 'Configuration objects'], [this.#nodeDropdownDiv, 'Nodes'], [this.#lineDropdownDiv, 'Lines']].forEach(ary => {\n            ary[0].buttonElement.addEventListener('click', () => {\n                if (ary[0].isExpanded() && ary[0].contentDivElement.children.length === 0) {\n                    ary[0].setButton('Loading search results...', true);\n                    setTimeout(() => {\n                        const {configs, nodes, lines} = this.#getCategorizedSearchResults();\n                        if (ary[1] === 'Configuration objects') {\n                            this.#appendFeatureDropdownDivs(ary[0], configs);\n                            ary[0].setButton(`${ary[1]}: ${configs.length}`, true);\n                        } else if (ary[1] === 'Nodes') {\n                            this.#appendFeatureDropdownDivs(ary[0], nodes);\n                            ary[0].setButton(`${ary[1]}: ${nodes.length}`, true);\n                        } else if (ary[1] === 'Lines') {\n                            this.#appendFeatureDropdownDivs(ary[0], lines);\n                            ary[0].setButton(`${ary[1]}: ${lines.length}`, true);\n                        }\n                    }, 1);\n                }\n            });\n        });\n    }\n\n    /**\n     * @returns {HTMLButtonElement}\n     */\n    #getAddRowButton() {\n        const btn = document.createElement('button');\n        btn.classList.add('add');\n        btn.classList.add('horizontalFlex');\n        btn.classList.add('centerMainAxisFlex');\n        btn.classList.add('centerCrossAxisFlex');\n        btn.appendChild(getCirclePlusSvg());\n        const that = this;\n        btn.addEventListener('click', function() {\n            const keySelect = that.#getKeySelect();\n            that.#modal.insertTBodyRow([that.#getDeleteRowButton(), that.#getAndOrSelect(), keySelect, that.#getOperatorSelect(), that.#getValueTextInput()], 'append');\n            that.#handleKeySelectChange(keySelect);\n        });\n        return btn;\n    }\n\n    /**\n     * @returns {HTMLSelectElement}\n     */\n    #getAndOrSelect() {\n        const select = document.createElement('select');\n        select.dataset.role = 'andOrSelect';\n        ['and', 'or'].forEach(o => {\n            const option = document.createElement('option');\n            option.text = o;\n            option.value = o;\n            select.add(option);\n        });\n        const that = this;\n        return select;\n    }\n\n    /**\n     * @returns {Object}\n     */\n    #getCategorizedSearchResults() {\n        const configs = [];\n        const nodes = [];\n        const lines = [];\n        this.#searchResults.forEach(ob => {\n            if (ob.isConfigurationObject()) {\n                configs.push(ob);\n            } else if (ob.isNode()) {\n                nodes.push(ob);\n            } else if (ob.isLine()) {\n                lines.push(ob);\n            } else {\n                throw TypeError('\"The observable was not a configuration object, node, or line.');\n            }\n        });\n        return {\n            'configs': configs,\n            'nodes': nodes,\n            'lines': lines\n        }\n    }\n        \n\n    /**\n     * @returns {HTMLButtonElement}\n     */\n    #getDeleteRowButton() {\n        const btn = document.createElement('button');\n        btn.classList.add('delete');\n        btn.classList.add('horizontalFlex');\n        btn.classList.add('centerMainAxisFlex');\n        btn.classList.add('centerCrossAxisFlex');\n        btn.appendChild(getTrashCanSvg());\n        const that = this;\n        btn.addEventListener('click', function(e) {\n            let parentElement = this.parentElement;\n            while (!(parentElement instanceof HTMLTableRowElement)) {\n                parentElement = parentElement.parentElement;\n            }\n            for (const select of parentElement.getElementsByTagName('select')) {\n                if (select.dataset.role = 'keySelect') {\n                    that.#keySelects = that.#keySelects.filter(s => s !== select);\n                }\n            }\n            parentElement.remove();\n            e.stopPropagation();\n        });\n        return btn;\n    }\n\n    /**\n     * @param {HTMLSelectElement} oldKeySelect - an old key select that should be used to set up the new key select\n     * @returns {HTMLSelectElement}\n     */\n    #getKeySelect(oldKeySelect=null) {\n        if (!(oldKeySelect instanceof HTMLSelectElement) && oldKeySelect !== null)  {\n            throw TypeError('\"oldKeySelect\" argument must be instanceof HTMLKeySelect or null.');\n        }\n        const keySelect = document.createElement('select');\n        keySelect.dataset.role = 'keySelect';\n        this.#keySelects.push(keySelect);\n        const keys = [];\n        const metaKeys = [];\n        let observables;\n        if (this.#observables[0] instanceof FeatureGraph) {\n            observables = this.#observables[0].getObservables();\n        } else {\n            observables = this.#observables;\n        }\n        observables.forEach(f => {\n            Object.keys(f.getProperties('meta')).forEach(k => {\n                if (!['attachments', 'componentType', 'formProps', 'hiddenLinks', 'hiddenNodes', 'layoutVars', 'links', 'name2', 'nodes', 'owner', 'syntax',\n                    'treeProps', 'urlProps'].includes(k) && !metaKeys.includes(k)) {\n                    metaKeys.push(k);\n                }\n            });\n            if (f.hasProperty('treeProps', 'meta')) {\n                Object.keys(f.getProperties('treeProps')).forEach(k => {\n                    if (![].includes(k) && !keys.includes(k)) {\n                        keys.push(k);\n                    }\n                });\n            }\n        });\n        // - Add fake key to search all fields\n        const option = document.createElement('option');\n        option.dataset.namespace = 'treeProps';\n        option.text = '<All Fields>';\n        option.value = 'searchModalSearchAllFields';\n        keySelect.add(option);\n        keySelect.addEventListener('change', this.#handleKeySelectChange.bind(this, keySelect));\n        // - Add regular keys\n        metaKeys.sort((a, b) => a.localeCompare(b));\n        keys.sort((a, b) => a.localeCompare(b));\n        metaKeys.forEach(k => {\n            const option = document.createElement('option');\n            option.dataset.namespace = 'meta';\n            if (k === 'treeKey') {\n                option.text = 'ID';\n            } else {\n                option.text = k;\n            }\n            option.value = k;\n            keySelect.add(option);\n        });\n        keys.forEach(k => {\n            const option = document.createElement('option');\n            option.dataset.namespace = 'treeProps';\n            option.text = k;\n            option.value = k;\n            keySelect.add(option);\n        });\n        for (const op of keySelect.options) {\n            if (op.value === 'searchModalSearchAllFields') {\n                keySelect.selectedIndex = op.index;\n            }\n        }\n        if (oldKeySelect instanceof HTMLSelectElement) {\n            const oldValue = oldKeySelect.value;\n            for (const op of keySelect.options) {\n                if (op.value === oldValue) {\n                    keySelect.selectedIndex = op.index;\n                }\n            }\n        }\n        keySelect.classList.add('fullWidth');\n        return keySelect;\n    }\n\n    /**\n     * @returns {HTMLSelectElement}\n     */\n    #getOperatorSelect() {\n        const select = document.createElement('select');\n        select.dataset.role = 'operatorSelect';\n        ['=', '!=', 'exists', \"! exists\", 'contains', \"! contains\", '<', '<=', '>', '>='].forEach(o => {\n            const option = document.createElement('option');\n            option.text = o;\n            option.value = o;\n            select.add(option);\n        });\n        select.value = 'exists';\n        const that = this;\n        select.addEventListener('change', function() {\n            let parentElement = this.parentElement;\n            while (!(parentElement instanceof HTMLTableRowElement)) {\n                parentElement = parentElement.parentElement;\n            }\n            const valueTextInput = parentElement.querySelector('input[data-role=\"valueInput\"]');\n            if (['exists', '! exists'].includes(this.value)) {\n                if (valueTextInput !== null) {\n                    valueTextInput.remove();\n                }\n            } else {\n                if (valueTextInput === null) {\n                    parentElement.lastChild.lastChild.appendChild(that.#getValueTextInput());\n                }\n            }\n        });\n        for (const op of select.options) {\n            if (op.value === 'contains') {\n                select.selectedIndex = op.index;\n            }\n        }\n        return select;\n    }\n\n    /**\n     * @returns {HTMLButtonElement}\n     */\n    #getSearchButton() {\n        const btn = this.#getWideButton();\n        btn.appendChild(getEyeGlassSvg());\n        const span = document.createElement('span');\n        span.textContent = 'Search'\n        btn.appendChild(span);\n        const that = this;\n        btn.addEventListener('click', function() {\n            that.#search();\n        });\n        const div = this.#getWideButtonDiv();\n        div.appendChild(btn);\n        return div;\n    }\n\n    /**\n     * - x\n     * @param {Array} searchCriteria - an array of search criteria\n     * @returns {Function}\n     */\n    #getSearchFunction(searchCriteria) {\n        if (!(searchCriteria instanceof Array)) {\n            throw TypeError('\"searchCriteria\" argumet must be an array.');\n        }\n        const func = function(ob) {\n            if (ob.getProperty('treeKey', 'meta') === 'omd') {\n                return false;\n            }\n            let flag = true;\n            for (const searchCriterion of searchCriteria) {\n                const result = searchCriterion.searchFunction(ob);\n                if (searchCriterion.logic === 'and') {\n                    flag &= result;\n                } else if (searchCriterion.logic === 'or') {\n                    flag |= result;\n                }\n            }\n            return flag;\n        };\n        return func.bind(this);\n    }\n\n    /**\n     * @returns {HTMLButtonElement}\n     */\n    #getSettingsButton() {\n        const btn = document.createElement('button');\n        btn.classList.add('horizontalFlex');\n        btn.classList.add('centerMainAxisFlex');\n        btn.classList.add('centerCrossAxisFlex');\n        btn.appendChild(getGearSvg());\n        const that = this;\n        btn.addEventListener('click', function() {\n            // - TODO: use a settings modal\n        });\n        return btn;\n    }\n\n    #getValueTextInput() {\n        const input = document.createElement('input');\n        input.dataset.role = 'valueInput';\n        return input\n    }\n\n    /**\n     * @returns {HTMLButtonElement}\n     */\n    #getWideButton() {\n        const btn = document.createElement('button');\n        btn.classList.add('horizontalFlex');\n        btn.classList.add('centerMainAxisFlex');\n        btn.classList.add('centerCrossAxisFlex');\n        btn.classList.add('fullWidth');\n        return btn;\n    }\n\n    /**\n     * @returns {HTMLDivElement}\n     */\n    #getWideButtonDiv() {\n        const div = document.createElement('div');\n        div.classList.add('horizontalFlex');\n        div.classList.add('centerMainAxisFlex');\n        div.classList.add('centerCrossAxisFlex');\n        div.classList.add('halfWidth');\n        return div;\n    }\n\n    /**\n     * - This has to be a function because it's used as an event handler and it's called separately on page load to supply a correct operator select\n     * @param {HTMLSelectElement} select\n     * @returns {undefined}\n     */\n    #handleKeySelectChange(select) {\n        if (!(select instanceof HTMLSelectElement)) {\n            throw TypeError('\"select\" argument must be instanceof HTMLSelectElement');\n        }\n        let parentElement = select.parentElement;\n        while (!(parentElement instanceof HTMLTableRowElement)) {\n            parentElement = parentElement.parentElement;\n        }\n        const valueTextInput = parentElement.querySelector('input[data-role=\"valueInput\"]');\n        const operatorSelect = parentElement.querySelector('select[data-role=\"operatorSelect\"]');\n        // - This corresponds to the \"<All Fields>\" option being selected\n        if (select.selectedIndex === 0) {\n            if (valueTextInput === null) {\n                parentElement.lastChild.lastChild.appendChild(this.#getValueTextInput());\n            }\n            const newOperatorSelect = document.createElement('select');\n            newOperatorSelect.dataset.role = 'operatorSelect';\n            ['contains', '! contains'].forEach(o => {\n                const option = document.createElement('option');\n                option.text = o;\n                option.value = o;\n                newOperatorSelect.add(option);\n            });\n            newOperatorSelect.value = 'contains';\n            operatorSelect.replaceWith(newOperatorSelect);\n        } else {\n            const oldValue = operatorSelect.value;\n            const newOperatorSelect = this.#getOperatorSelect();\n            newOperatorSelect.value = oldValue;\n            operatorSelect.replaceWith(newOperatorSelect);\n        }\n    }\n\n    /**\n     * - x\n     * @returns {undefined}\n     */\n    #search() {\n        // - Clear the old FeatureDropdownDivs\n        this.#searchResults.forEach(observable => {\n            // - One time I saw a bug where an observable had multiple FeatureDropdownDiv observers, so just remove all of them\n            observable.getObservers().filter(observer => observer instanceof FeatureDropdownDiv).forEach(fdd => fdd.remove());\n        });\n        // - Clear the old search results\n        this.#searchResults = [];\n        // - Clear the old search criteria and build new search criteria\n        const searchCriteria = [];\n        for (const tr of this.#modal.divElement.getElementsByTagName('tr')) {\n            const keySelect = tr.querySelector('[data-role=\"keySelect\"]');\n            // - I only care about rows that have a keySelect\n            if (keySelect !== null) {\n                const key = keySelect[keySelect.selectedIndex].value;\n                const namespace = keySelect[keySelect.selectedIndex].dataset.namespace;\n                const operatorSelect = tr.querySelector('[data-role=\"operatorSelect\"]');\n                const operator = operatorSelect[operatorSelect.selectedIndex].value;\n                let valueInputValue = tr.querySelector('[data-role=\"valueInput\"]');\n                if (valueInputValue !== null) {\n                    valueInputValue = valueInputValue.value;\n                }\n                let logic = tr.querySelector('[data-role=\"andOrSelect\"]');\n                if (logic !== null) {\n                    logic = logic[logic.selectedIndex].value;\n                } else {\n                    // - First row gets an implicit \"and\"\n                    logic = 'and';\n                }\n                const searchCriterion = {\n                    logic: logic,\n                };\n                if (operator === 'exists') {\n                    searchCriterion.searchFunction = function(ob) {\n                        return ob.hasProperty(key, namespace);\n                    }\n                }\n                if (operator === '! exists') {\n                    searchCriterion.searchFunction = function(ob) {\n                        return !ob.hasProperty(key, namespace);\n                    };\n                }\n                if (operator === '=') {\n                    searchCriterion.searchFunction = function(ob) {\n                        if (ob.hasProperty(key, namespace)) {\n                            const value = ob.getProperty(key, namespace);\n                            if (!isNaN(+value)) {\n                                return +value === +valueInputValue;\n                            } else {\n                                //return value === valueInputValue;\n                                return value.toString().toLowerCase() === valueInputValue.toLowerCase();\n                            }\n                        }\n                        return false;\n                    };\n                }\n                if (operator === '!=') {\n                    searchCriterion.searchFunction = function(ob) {\n                        if (ob.hasProperty(key, namespace)) {\n                            const value = ob.getProperty(key, namespace);\n                            if (!isNaN(+value)) {\n                                return +value !== +valueInputValue;\n                            } else {\n                                //return value !== valueInputValue;\n                                return value.toString().toLowerCase() !== valueInputValue.toLowerCase();\n                            }\n                        }\n                        return false;\n                    };\n                }\n                if (operator === 'contains') {\n                    searchCriterion.searchFunction = function(ob) {\n                        // - TODO: I really should use a JavaScript symbol or something instead of \"searchModalSearchAllFields\"\n                        if (key === 'searchModalSearchAllFields') {\n                            for (const [key, val] of Object.entries(ob.getProperties(namespace))) {\n                                if (val.toString().toLowerCase().includes(valueInputValue.toLowerCase()) || key.toString().toLowerCase().includes(valueInputValue.toLowerCase())) {\n                                    return true;\n                                }\n                            }\n                            if (ob.getProperty('treeKey', 'meta').toString().toLowerCase().includes(valueInputValue.toLowerCase())) {\n                                return true;\n                            }\n                        } else if (ob.hasProperty(key, namespace)) {\n                            return ob.getProperty(key, namespace).toString().toLowerCase().includes(valueInputValue.toLowerCase());\n                        }\n                        return false;\n                    }\n                }\n                if (operator === '! contains') {\n                    searchCriterion.searchFunction = function(ob) {\n                        if (key === 'searchModalSearchAllFields') {\n                            for (const [key, val] of Object.entries(ob.getProperties(namespace))) {\n                                if (val.toString().toLowerCase().includes(valueInputValue.toLowerCase()) || key.toString().toLowerCase().includes(valueInputValue.toLowerCase())) {\n                                    return false;\n                                }\n                            }\n                            if (ob.getProperty('treeKey', 'meta').toString().toLowerCase().includes(valueInputValue.toLowerCase())) {\n                                return false;\n                            }\n                            return true;\n                        } else if (ob.hasProperty(key, namespace)) {\n                            return !ob.getProperty(key, namespace).toString().toLowerCase().includes(valueInputValue.toLowerCase());\n                        }\n                        return false;\n                    }\n                }\n                if (operator === '<') {\n                    searchCriterion.searchFunction = function(ob) {\n                        if (ob.hasProperty(key, namespace)) {\n                            return +ob.getProperty(key, namespace) < +valueInputValue;\n                        }\n                        return false;\n                    }\n                }\n                if (operator === '<=') {\n                    searchCriterion.searchFunction = function(ob) {\n                        if (ob.hasProperty(key, namespace)) {\n                            return +ob.getProperty(key, namespace) <= +valueInputValue;\n                        }\n                        return false;\n                    }\n                }\n                if (operator === '>') {\n                    searchCriterion.searchFunction = function(ob) {\n                        if (ob.hasProperty(key, namespace)) {\n                            return +ob.getProperty(key, namespace) > +valueInputValue;\n                        }\n                        return false;\n                    }\n                }\n                if (operator === '>=') {\n                    searchCriterion.searchFunction = function(ob) {\n                        if (ob.hasProperty(key, namespace)) {\n                            return +ob.getProperty(key, namespace) >= +valueInputValue;\n                        }\n                        return false;\n                    }\n                }\n                searchCriteria.push(searchCriterion);\n            }\n        }\n        // - Run the search for normal features\n        if (this.#observables[0] instanceof FeatureGraph) {\n            this.#searchResults = this.#observables[0].getObservables(this.#getSearchFunction(searchCriteria));\n        // - Run the search for components\n        } else {\n            this.#searchResults = this.#observables.filter(this.#getSearchFunction(searchCriteria));\n        }\n        // - Don't attach event handlers here because then I'll be adding a new event handler after every search!\n        const {configs, nodes, lines} = this.#getCategorizedSearchResults();\n        [\n            [this.#configDropdownDiv, configs, 'Configuration objects'],\n            [this.#nodeDropdownDiv, nodes, 'Nodes'],\n            [this.#lineDropdownDiv, lines, 'Lines']\n        ].forEach(ary => {\n            ary[0].setButton(`${ary[2]}: ${ary[1].length}`, true);\n            if (ary[0].isExpanded() && ary[0].contentDivElement.children.length === 0) {\n                this.#appendFeatureDropdownDivs(ary[0], ary[1]);\n            }\n        });\n    }\n}\n\n/**\n * - https://www.svgrepo.com\n */\nfunction getEyeGlassSvg() {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg','svg');\n    svg.setAttribute('width', '22px');\n    svg.setAttribute('height', '22px');\n    svg.setAttribute('viewBox', '0 0 24 24'); \n    svg.setAttribute('fill', 'none'); \n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttribute('d', \"M4 11C4 7.13401 7.13401 4 11 4C14.866 4 18 7.13401 18 11C18 14.866 14.866 18 11 18C7.13401 18 4 14.866 4 11ZM11 2C6.02944 2 2 6.02944 2 11C2 15.9706 6.02944 20 11 20C13.125 20 15.078 19.2635 16.6177 18.0319L20.2929 21.7071C20.6834 22.0976 21.3166 22.0976 21.7071 21.7071C22.0976 21.3166 22.0976 20.6834 21.7071 20.2929L18.0319 16.6177C19.2635 15.078 20 13.125 20 11C20 6.02944 15.9706 2 11 2Z\");\n    path.setAttribute('fill-rule', 'evenodd');\n    path.setAttribute('clip-rule', 'evenodd');\n    path.setAttribute('fill', '#FFFFFF');\n    path.setAttribute('stroke-width', '1.5');\n    path.setAttribute('stroke-width', '1.5');\n    path.setAttribute('stroke-linecap', 'round');\n    path.setAttribute('stroke-linejoin', 'round');\n    svg.appendChild(path);\n    return svg\n}\n\n/**\n * - https://www.svgrepo.com\n */\nfunction getGearSvg() {\n    const svg = document.createElementNS('http://www.w3.org/2000/svg','svg');\n    svg.setAttribute('width', '22px');\n    svg.setAttribute('height', '22px');\n    svg.setAttribute('viewBox', '0 0 32 32');\n    svg.setAttribute('fill', 'none');\n    const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n    path.setAttribute('d', 'M29 11.756h-1.526c-0.109-0.295-0.229-0.584-0.361-0.87l1.087-1.076c0.441-0.389 0.717-0.956 0.717-1.587 0-0.545-0.206-1.042-0.545-1.417l0.002 0.002-3.178-3.178c-0.373-0.338-0.87-0.544-1.415-0.544-0.632 0-1.199 0.278-1.587 0.718l-0.002 0.002-1.081 1.080c-0.285-0.131-0.573-0.251-0.868-0.36l0.008-1.526c0.003-0.042 0.005-0.091 0.005-0.141 0-1.128-0.884-2.049-1.997-2.109l-0.005-0h-4.496c-1.119 0.059-2.004 0.981-2.004 2.11 0 0.049 0.002 0.098 0.005 0.147l-0-0.007v1.524c-0.295 0.109-0.584 0.229-0.87 0.361l-1.074-1.084c-0.389-0.443-0.957-0.722-1.589-0.722-0.545 0-1.042 0.206-1.416 0.545l0.002-0.002-3.179 3.179c-0.338 0.373-0.544 0.87-0.544 1.415 0 0.633 0.278 1.2 0.719 1.587l0.002 0.002 1.078 1.079c-0.132 0.287-0.252 0.576-0.362 0.872l-1.525-0.007c-0.042-0.003-0.091-0.005-0.14-0.005-1.128 0-2.050 0.885-2.11 1.998l-0 0.005v4.495c0.059 1.119 0.982 2.005 2.111 2.005 0.049 0 0.098-0.002 0.146-0.005l-0.007 0h1.525c0.109 0.295 0.229 0.584 0.361 0.87l-1.084 1.071c-0.443 0.39-0.721 0.958-0.721 1.592 0 0.545 0.206 1.043 0.545 1.418l-0.002-0.002 3.179 3.178c0.339 0.337 0.806 0.545 1.322 0.545 0.007 0 0.014-0 0.021-0h-0.001c0.653-0.013 1.24-0.287 1.662-0.722l0.001-0.001 1.079-1.079c0.287 0.132 0.577 0.252 0.873 0.362l-0.007 1.524c-0.003 0.042-0.005 0.091-0.005 0.14 0 1.128 0.885 2.050 1.998 2.11l0.005 0h4.496c1.118-0.060 2.003-0.981 2.003-2.109 0-0.050-0.002-0.099-0.005-0.147l0 0.007v-1.526c0.296-0.11 0.585-0.23 0.872-0.362l1.069 1.079c0.423 0.435 1.009 0.709 1.66 0.723l0.002 0h0.002c0.006 0 0.014 0 0.021 0 0.515 0 0.982-0.207 1.323-0.541l3.177-3.177c0.335-0.339 0.541-0.805 0.541-1.32 0-0.009-0-0.018-0-0.028l0 0.001c-0.013-0.651-0.285-1.236-0.718-1.658l-0.001-0-1.080-1.081c0.131-0.285 0.251-0.573 0.36-0.868l1.525 0.007c0.042 0.003 0.090 0.005 0.139 0.005 1.129 0 2.051-0.885 2.11-1.999l0-0.005v-4.495c-0.060-1.119-0.981-2.004-2.11-2.004-0.049 0-0.098 0.002-0.147 0.005l0.007-0zM28.75 17.749l-2.162-0.011c-0.026 0-0.048 0.013-0.074 0.015-0.093 0.009-0.179 0.026-0.261 0.053l0.008-0.002c-0.31 0.068-0.565 0.263-0.711 0.527l-0.003 0.005c-0.048 0.071-0.091 0.152-0.124 0.238l-0.003 0.008c-0.008 0.024-0.027 0.041-0.034 0.066-0.23 0.804-0.527 1.503-0.898 2.155l0.025-0.048c-0.014 0.025-0.013 0.054-0.026 0.080-0.029 0.063-0.053 0.138-0.071 0.215l-0.001 0.008c-0.023 0.072-0.040 0.156-0.048 0.242l-0 0.005c-0.002 0.027-0.004 0.058-0.004 0.089 0 0.209 0.061 0.404 0.166 0.568l-0.003-0.004c0.045 0.088 0.096 0.163 0.154 0.232l-0.001-0.002c0.017 0.019 0.022 0.043 0.040 0.061l1.529 1.531-2.469 2.467-1.516-1.529c-0.020-0.021-0.048-0.027-0.069-0.046-0.060-0.050-0.128-0.096-0.2-0.135l-0.006-0.003c-0.195-0.109-0.429-0.173-0.677-0.173-0.002 0-0.004 0-0.006 0h0c-0.076 0.008-0.145 0.022-0.211 0.040l0.009-0.002c-0.102 0.020-0.192 0.050-0.276 0.089l0.007-0.003c-0.022 0.011-0.047 0.010-0.069 0.022-0.606 0.346-1.307 0.644-2.043 0.859l-0.070 0.017c-0.027 0.008-0.045 0.027-0.071 0.037-0.084 0.033-0.157 0.071-0.224 0.116l0.004-0.003c-0.075 0.041-0.139 0.085-0.199 0.135l0.002-0.002c-0.053 0.052-0.102 0.11-0.145 0.171l-0.003 0.004c-0.103 0.113-0.176 0.254-0.206 0.411l-0.001 0.005c-0.024 0.074-0.043 0.16-0.051 0.249l-0 0.005c-0.002 0.026-0.015 0.048-0.015 0.075l-0.001 2.162h-3.491l0.011-2.156c0-0.028-0.014-0.052-0.016-0.079-0.008-0.092-0.026-0.177-0.052-0.258l0.002 0.008c-0.068-0.313-0.265-0.57-0.531-0.717l-0.006-0.003c-0.070-0.047-0.15-0.089-0.235-0.122l-0.008-0.003c-0.024-0.008-0.042-0.027-0.067-0.034-0.806-0.23-1.507-0.528-2.161-0.9l0.048 0.025c-0.023-0.013-0.050-0.012-0.073-0.023-0.072-0.033-0.156-0.061-0.244-0.079l-0.008-0.001c-0.092-0.029-0.198-0.045-0.308-0.045-0.221 0-0.426 0.066-0.597 0.18l0.004-0.002c-0.076 0.040-0.141 0.084-0.201 0.134l0.002-0.002c-0.021 0.019-0.048 0.025-0.068 0.045l-1.529 1.529-2.47-2.469 1.532-1.516c0.020-0.020 0.027-0.047 0.045-0.067 0.053-0.063 0.101-0.134 0.142-0.209l0.003-0.006c0.037-0.058 0.071-0.124 0.099-0.194l0.003-0.008c0.038-0.14 0.062-0.301 0.066-0.467l0-0.003c-0.008-0.083-0.023-0.158-0.044-0.231l0.002 0.009c-0.020-0.094-0.047-0.177-0.083-0.255l0.003 0.007c-0.012-0.025-0.011-0.052-0.025-0.076-0.347-0.605-0.645-1.305-0.858-2.041l-0.017-0.068c-0.007-0.026-0.027-0.045-0.036-0.070-0.034-0.086-0.072-0.16-0.118-0.228l0.003 0.005c-0.040-0.074-0.084-0.138-0.133-0.197l0.002 0.002c-0.052-0.053-0.109-0.101-0.169-0.144l-0.004-0.003c-0.060-0.051-0.128-0.097-0.2-0.136l-0.006-0.003c-0.057-0.026-0.126-0.049-0.196-0.066l-0.008-0.002c-0.077-0.026-0.167-0.045-0.259-0.053l-0.005-0c-0.026-0.002-0.047-0.015-0.073-0.015l-2.162-0.001v-3.492l2.162 0.011c0.16-0.002 0.311-0.035 0.45-0.092l-0.008 0.003c0.054-0.024 0.099-0.048 0.142-0.075l-0.005 0.003c0.090-0.047 0.168-0.1 0.239-0.16l-0.002 0.001c0.043-0.039 0.082-0.079 0.118-0.122l0.002-0.002c0.056-0.065 0.106-0.138 0.147-0.215l0.003-0.007c0.027-0.047 0.054-0.102 0.076-0.159l0.003-0.008c0.010-0.028 0.029-0.050 0.037-0.078 0.23-0.805 0.527-1.506 0.899-2.159l-0.025 0.048c0.014-0.024 0.013-0.052 0.025-0.076 0.031-0.067 0.057-0.147 0.075-0.229l0.001-0.008c0.020-0.086 0.032-0.185 0.032-0.287 0-0.317-0.113-0.607-0.3-0.834l0.002 0.002c-0.017-0.020-0.023-0.045-0.042-0.063l-1.527-1.529 2.469-2.469 1.518 1.531c0.055 0.045 0.116 0.087 0.18 0.122l0.006 0.003c0.042 0.033 0.089 0.065 0.138 0.094l0.006 0.003c0.16 0.088 0.35 0.142 0.551 0.148l0.002 0 0.005 0.001c0.012 0 0.023-0.009 0.034-0.009 0.186-0.008 0.359-0.056 0.513-0.135l-0.007 0.003c0.022-0.011 0.047-0.006 0.070-0.018 0.605-0.346 1.305-0.645 2.041-0.858l0.069-0.017c0.025-0.007 0.042-0.026 0.066-0.034 0.091-0.035 0.17-0.076 0.243-0.125l-0.004 0.003c0.069-0.038 0.128-0.079 0.183-0.124l-0.002 0.002c0.058-0.056 0.11-0.117 0.156-0.183l0.003-0.004c0.046-0.056 0.089-0.119 0.126-0.185l0.003-0.006c0.028-0.062 0.053-0.135 0.070-0.21l0.002-0.008c0.024-0.073 0.042-0.158 0.050-0.247l0-0.005c0.002-0.027 0.015-0.049 0.015-0.076l0.001-2.162h3.491l-0.011 2.156c-0 0.028 0.014 0.051 0.015 0.079 0.008 0.093 0.026 0.178 0.052 0.26l-0.002-0.008c0.019 0.084 0.044 0.157 0.075 0.227l-0.003-0.008c0.040 0.073 0.082 0.136 0.13 0.194l-0.002-0.002c0.048 0.070 0.101 0.131 0.158 0.187l0 0c0.053 0.044 0.112 0.084 0.174 0.12l0.006 0.003c0.068 0.046 0.147 0.087 0.23 0.119l0.008 0.003c0.025 0.009 0.043 0.028 0.069 0.035 0.804 0.229 1.503 0.527 2.155 0.899l-0.047-0.025c0.022 0.012 0.046 0.007 0.068 0.018 0.147 0.076 0.32 0.124 0.503 0.132l0.003 0c0.012 0 0.024 0.009 0.036 0.009l0.028-0.008c0.193-0.008 0.372-0.059 0.531-0.143l-0.007 0.003c0.059-0.033 0.109-0.066 0.156-0.104l-0.003 0.002c0.068-0.037 0.127-0.076 0.181-0.12l-0.002 0.002 1.531-1.528 2.469 2.47-1.531 1.516c-0.020 0.020-0.027 0.047-0.046 0.068-0.053 0.063-0.101 0.134-0.142 0.209l-0.003 0.006c-0.084 0.123-0.138 0.272-0.148 0.434l-0 0.002c-0.013 0.056-0.020 0.121-0.020 0.187 0 0.097 0.016 0.19 0.045 0.277l-0.002-0.006c0.020 0.094 0.047 0.176 0.083 0.254l-0.003-0.007c0.012 0.025 0.011 0.053 0.025 0.078 0.347 0.604 0.645 1.303 0.858 2.038l0.017 0.068c0.008 0.030 0.028 0.052 0.038 0.080 0.024 0.062 0.049 0.113 0.077 0.163l-0.003-0.006c0.211 0.397 0.619 0.665 1.090 0.674l0.001 0 2.162 0.001zM16 10.75c-2.899 0-5.25 2.351-5.25 5.25s2.351 5.25 5.25 5.25c2.899 0 5.25-2.351 5.25-5.25v0c-0.004-2.898-2.352-5.246-5.25-5.25h-0zM16 18.75c-1.519 0-2.75-1.231-2.75-2.75s1.231-2.75 2.75-2.75c1.519 0 2.75 1.231 2.75 2.75v0c-0.002 1.518-1.232 2.748-2.75 2.75h-0z');\n    path.setAttribute('fill', '#FFFFFF');\n    path.setAttribute('stroke-width', '1.5');\n    path.setAttribute('stroke-width', '1.5');\n    path.setAttribute('stroke-linecap', 'round');\n    path.setAttribute('stroke-linejoin', 'round');\n    svg.appendChild(path);\n    return svg;\n}\n</script>\n<script>\n\"use strict\";\n\nclass FeatureGraph {\n    #graph;         // - This points to the actual graph data structure. I'm using the Graphology library\n    #keyToFeature;  // - Graphology graphs allow nodes and lines to have the same key. This is great for representing lines with children, but is annoying when trying to retrieve a feature by its key\n    #nameToKey;     // - Names are not unique, so I potentially need to map one name to multiple keys\n    #observers;     // - A FeatureGraph implements ObservableInterface\n\n    /**\n     * - Create an empty graph that will connect all Feature instances (regular features, components, parent-child lines, etc.) as Observables and\n     *   Observers\n     * @returns {Object} graph\n     */\n    constructor() {\n        const options = {\n            // - Do NOT allow self-loops. Even if a line starts and ends on the same node, the graph models it as two nodes connected by two edges\n            //   (i.e. a multi-edge)\n            allowSelfLoops: false,   \n            // - Allow multiple edges between nodes (OMDs have them)\n            multi: true,            \n            // - Restrict to an undirected graph type\n            type: 'undirected'      \n        };\n        this.#graph = new graphology.Graph(options);\n        this.#keyToFeature = {};\n        this.#nameToKey = {};\n        this.#observers = [];\n    }\n\n    // *********************************\n    // ** ObservableInterface methods **\n    // *********************************\n\n    deleteProperty(propertyKey, namespace='treeProps') {\n        throw new UnsupportedOperationError();\n    }\n\n    // - TODO: call handleDeletedObservable() on the observers of this graph in handleDeletedObservable()\n    deleteObservable() {\n        throw new UnsupportedOperationError();\n    }\n\n    getCoordinates() {\n        throw new UnsupportedOperationError();\n    }\n\n    /**\n     * @param {string} key - the key of the ObservableInterface object that I want\n     * @returns {Feature} an instance of my Feature class\n     */\n    getObservable(key) {\n        if (typeof key !== 'string') {\n            throw TypeError('\"key\" argument must be a string.');\n        }\n        if (!this.#keyToFeature.hasOwnProperty(key)) {\n            throw new FeatureNotFoundError(key);\n        }\n        return this.#keyToFeature[key];\n    }\n\n    /**\n     * @param {Function} [func=null] - a function that filters features so that only the desired features are returned. The function should take a\n     * single argument (a feature), and should return a boolean depending on whether to include the feature in the array\n     * - I could argue that the logic executed in Feature.getObservableExportData() could be provided via a function argument, as it is here, so while\n     *   the different method signatures violate the interface, I could make both conform to it\n     * @returns {Object} a GeoJSON FeatureCollection object\n     */\n    getObservableExportData(func=null) {\n        if (func !== null && typeof func !== 'function') {\n            throw TypeError('The \"func\" argument must be null or a typeof \"function\".');\n        }\n        if (func === null) {\n            func = function(f) {\n                if (f.getProperty('treeKey', 'meta') === 'omd') {\n                    return true;\n                } else {\n                    return isNaN(+f.getProperty('treeKey', 'meta')) ? false : true;\n                }\n            }\n        }\n        return { \n            'type': 'FeatureCollection',\n            'features': this.getObservables(func).map(f => f.getObservableExportData())\n        };\n    }\n\n    /**\n     * @param {Function} func - a function that filters features so that only the desired features are returned. The function should take a single\n     * argument (a feature), and should return a boolean depending on whether to include the feature in the array\n     * @returns {Array} - an array of ObservableInterface instances, where each instance met the filtering criteria\n     */\n    getObservables(func) {\n        if (typeof func !== 'undefined') {\n            return Object.values(this.#keyToFeature).filter(f => func(f));\n        }\n        return Object.values(this.#keyToFeature);\n    }\n\n    getObservers() {\n        throw new UnsupportedOperationError();\n    }\n\n    getProperties(namespace) {\n        throw new UnsupportedOperationError();\n    }\n\n    getProperty(propertyKey, namespace='treeProps') {\n        throw new UnsupportedOperationError();\n    }\n\n    hasCoordinates() {\n        throw new UnsupportedOperationError();\n    }\n\n    hasGraph() {\n        throw new UnsupportedOperationError();\n    }\n\n    hasProperty(propertyKey, namespace='treeProps') {\n        throw new UnsupportedOperationError();\n    }\n\n    /**\n     * @param {Feature} observable - the observable that was just added to this graph\n     * @returns {undefined}\n     */\n    notifyObserversOfNewObservable(observable) {\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be an instance of my Feature class.');\n        }\n        this.#observers.forEach(ob => ob.handleNewObservable(observable));\n    }\n\n    /**\n     * @param {Object} observer - an instance of ObserverInterface that wants to observer this ObservableInterface instance\n     *  - E.g. a SearchModal wants to observe this FeatureGraph\n     * @returns {undefined}\n     */\n    registerObserver(observer) {\n        // - The function signature above is part of the ObservableInterface API. The implementation below is not\n        if (observer instanceof Feature) {\n            throw new ObserverError();\n        }\n        this.#observers.push(observer);\n    }\n\n    /**\n     * @param {Object} observer - an instance of ObserverInterface that no longer should observe this ObservableInterface instance\n     * @returns {undefined}\n     */\n    removeObserver(observer) {\n        // - The function signature above is part of the ObservableInterface API. The implementation below is not\n        if (observer instanceof Feature) {\n            throw new ObserverError();\n        }\n        const index = this.#observers.indexOf(observer);\n        if (index > -1) {\n            this.#observers.splice(index, 1);\n        } else {\n            throw Error('The observer was not found in this.#observers');\n        }\n    }\n\n    setCoordinates(coordinates) {\n        throw new UnsupportedOperationError();\n    }\n\n    setGraph(graph) {\n        throw new UnsupportedOperationError();\n    }\n\n    setProperty(propertyKey, propertyValue, namespace='treeProps') {\n        throw new UnsupportedOperationError();\n    }\n\n    /**\n     *\n     */\n    updateCoordinatesOfObservers(oldCoordinates) {\n        this.#observers.forEach(ob => ob.handleUpdatedCoordinates(this, oldCoordinates))\n    }\n\n    /**\n     *\n     */\n    updatePropertyOfObservers(propertyKey, oldPropertyValue, namespace='treeProps') {\n        this.#observers.forEach(ob => ob.handleUpdatedProperty(this, propertyKey, oldPropertyValue, namespace));\n    }\n\n    // *******************************\n    // ** ObserverInterface methods ** \n    // *******************************\n\n    /**\n     * - Remove this ObserverInterface instance (i.e. \"this\") from the ObservableInterface instance (i.e. \"observable\") that has been deleted, and\n     *   perform other actions as needed\n     * @param {Feature} observable - an ObservableInterface instance\n     * @returns {undefined}\n     */\n    handleDeletedObservable(observable) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(observable instanceof Feature)) {\n            throw TypeError('The \"observable\" argument must be instanceof Feature.');\n        }\n        const observableKey = observable.getProperty('treeKey', 'meta');\n        this.#graph.setNodeAttribute(observableKey, 'visited', true);\n        if (this.#graph.hasNode(observableKey)) {\n            // - If a node is deleted, all of its attached lines need to be deleted too\n            if (observable.isNode()) {\n                this.#graph.edges(observableKey).forEach(edgeKey => {\n                    const observerKey = this.#getObserverKey(observableKey, edgeKey);\n                    const observer = this.getObservable(observerKey);\n                    if (observer.isLine()) {\n                        if (this.#graph.getNodeAttribute(observerKey, 'visited') !== true) {\n                            observer.deleteObservable();\n                        }\n                    } else {\n                        throw new GraphNodeEdgeError(observableKey, observerKey);\n                    }\n                });\n            // - If a line is deleted, any attached lines also need to be deleted\n            //  - TODO: only the line(s) that have a \"from\" or \"to\" value that matches the name of the line being deleted should also be deleted,\n            //    otherwise creating a triangle of lines and deleting the bracing line deletes the other two lines\n            } else if (observable.isLine()) {\n                this.#graph.edges(observableKey).forEach(edgeKey => {\n                    const observerKey = this.#getObserverKey(observableKey, edgeKey);\n                    const observer = this.getObservable(observerKey);\n                    // - If the observable is a parent-child line, delete the child and any attached lines\n                    if (observable.isParentChildLine()) {\n                        const childName = observable.getProperty('to');\n                        if (observer.getProperty('name') === childName) { \n                            if (this.#graph.getNodeAttribute(observerKey, 'visited') !== true) {\n                                observer.deleteObservable();\n                            }\n                        }\n                    // - If the observable is not a parent-child line, just delete any attached lines\n                    } else if (observer.isLine()) { \n                        if (this.#graph.getNodeAttribute(observerKey, 'visited') !== true) {\n                            observer.deleteObservable();\n                        }\n                    }\n                });\n            }\n            this.#graph.dropNode(observableKey);\n            this.#removeObservableFromNameToKey(observable, observable.getProperty('name'));\n            this.#removeObservableFromKeytoFeature(observable);\n            this.#observers.forEach(ob => ob.handleDeletedObservable(observable));\n        } else {\n            throw new FeatureNotFoundError(key);\n        }\n    }\n\n    /**\n     *\n     */\n    handleNewObservable(observable) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        throw new UnsupportedOperationError();\n    }\n\n    /**\n     * - Update this ObserverInterface instance (i.e. \"this\") based on the coordinates of the ObservableInterface instance (i.e. \"observable\") that\n     *   have just changed and perform other actions as needed\n     *  - E.g. update the line observer's coordinates to match the node observable's coordinates if the line was connected to the node\n     * @param {Object} observable - an instance of ObservableInterface that this Observer is observing\n     * @param {Array} oldCoordinates - the old coordinates of the observable prior to the change in coordinates\n     * @returns {undefined}\n     */\n    handleUpdatedCoordinates(observable, oldCoordinates) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(oldCoordinates instanceof Array)) {\n            throw TypeError('\"oldCoordinates\" argument must be an array.')\n        }\n        const observableKey = observable.getProperty('treeKey', 'meta');\n        // - Mark this node as visited to prevent infinite recursion\n        this.#graph.setNodeAttribute(observableKey, 'visited', true);\n        // - Redraw attached lines. That's all I need to do for now\n        if (this.#graph.hasNode(observableKey)) {\n            this.#graph.edges(observableKey).forEach(edgeKey => {\n                const observerKey = this.#getObserverKey(observableKey, edgeKey);                \n                const observer = this.getObservable(observerKey);\n                if (this.#graph.getNodeAttribute(observerKey, 'visited') !== true) {\n                    if (observer.isLine()) {\n                        observer.handleUpdatedCoordinates(observable, oldCoordinates);\n                    } else if (observable.isNode() && observer.isNode()) {\n                        throw new GraphNodeEdgeError(observableKey, observerKey);\n                    }\n                }\n            });\n            this.updateCoordinatesOfObservers(oldCoordinates);\n        } else {\n            throw new FeatureNotFoundError(observableKey);\n        }\n    }\n\n    /**\n     * - Update this ObserverInstance (i.e. \"this\") based on the property of the ObservableInterface instance (i.e. \"observable\") that has just\n     *   changed and perform other actions as needed\n     *  - E.g. update this line's \"to\" and/or \"from\" property to match the \"name\" property of the node that was just changed\n     * @param {Object} observable - the observable that this observer is observing\n     * @param {string} propertyKey - the property key of the property that has been created/changed/deleted in the observable\n     * @param {(string|Object)} oldPropertyValue - the previous value of the property that has been created/changed/deleted in the observable\n     * @param {string} namespace - the namespace of the property that has been created/changed/deleted in the observable\n     * @returns {undefined}\n     */\n    handleUpdatedProperty(observable, propertyKey, oldPropertyValue, namespace='treeProps') {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be a string.');\n        }\n        if (typeof namespace !== 'string') {\n            throw TypeError('\"namespace\" argument must be a string.');\n        }\n        const observableKey = observable.getProperty('treeKey', 'meta');\n        // - I don't think I need to mark nodes as visited since there's no recursion\n        //this.#graph.setNodeAttribute(observableKey, 'visited', true);\n        if (this.#graph.hasNode(observableKey)) {\n            // - Deal with property updates that don't affect the connectivity of the graph\n            if (propertyKey === 'name') {\n                this.#removeObservableFromNameToKey(observable, oldPropertyValue);\n                this.#insertObservableIntoNameToKey(observable);\n                this.#graph.forEachNode((node, attributes) => {\n                    this.getObservable(node).handleUpdatedProperty(observable, propertyKey, oldPropertyValue, namespace);\n                });    \n            // - Deal with property updates that affect the connectivity of the graph\n            } else if (['from', 'to', 'parent'].includes(propertyKey)) {\n                for (const edgeKey of this.#graph.edges(observableKey)) {\n                    const observer1Key = this.#getObserverKey(observableKey, edgeKey);\n                    const observer1 = this.getObservable(observer1Key);\n                    // - If true, observable is a line and observer1 is one of the two nodes that is connected to it\n                    if (['from', 'to'].includes(propertyKey)) {\n                        if (oldPropertyValue === observer1.getProperty('name')) {\n                            this.#graph.dropEdge(edgeKey);\n                            this.#graph.addEdge(observableKey, this.getKey(observable.getProperty(propertyKey), observableKey));\n                            // - For most lines, this break won't do anything since \"from\" and \"to\" are not the same so only one observer's name will\n                            //   match the oldPropertyValue\n                            // - For lines whose \"from\" and \"to\" values are the same, this break is necessary because without it, changing either \"from\"\n                            //   or \"to\" of the looped line will make the graph drop all edges between the line and the node when only one edge should be\n                            //   dropped\n                            break;\n                        }\n                    }\n                    // - If true, observable is a child node and observer1 is the line that connects the child and the parent\n                    if (propertyKey === 'parent') {\n                        // - Currently, nodes can only have a single parent, so I don't have to deal with multiple parent-child lines going to one\n                        //   (child) node. That means that this entire if-statement below should only execute one time even though the outer for-loop\n                        //   continues to run once edges are dropped and added\n                        if (observer1.isParentChildLine()) {\n                            for (const edgeKey2 of this.#graph.edges(observer1Key)) {\n                                const observer2Key = this.#getObserverKey(observer1Key, edgeKey2);\n                                const observer2 = this.getObservable(observer2Key);\n                                // - If true, observer2 is the old parent node\n                                if (oldPropertyValue === observer2.getProperty('name')) {\n                                    this.#graph.dropEdge(edgeKey2);\n                                    this.#graph.addEdge(observer1Key, this.getKey(observable.getProperty(propertyKey), observer1Key));\n                                    // - I need to update the parent-child line to have the correct \"from\" and \"to\" treeProps properties \n                                    ['from', 'to'].forEach(prop => {\n                                        if (observer1.getProperty(prop) === oldPropertyValue) {\n                                            observer1.setProperty(prop, observable.getProperty(propertyKey));\n                                        }\n                                    });\n                                    // - Break in case a node has its own name as a parent and I just changed the \"parent\" value?\n                                    break;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n            this.updatePropertyOfObservers(propertyKey, oldPropertyValue, namespace);\n        } else {\n            throw new FeatureNotFoundError(observableKey);\n        }\n    }\n\n    // ********************\n    // ** Public methods ** \n    // ********************\n\n    /**\n     * - TODO: could I have a single getKey() function for features and components that takes the \"object\" property of the requesting feature, instead\n     *   of requesting the entire feature?\n     * @param {string} name - the name of the feature that I want to retrieve the key for\n     * @param {string} featureKey - the key of an instance of my Feature class that is requesting the key\n     * @returns {string} The correct tree key of the feature with the given name, depending on which object requested it, else throw an exception if\n     *      there is no matching tree key\n     */\n    getKey(name, featureKey) {\n        if (typeof name !== 'string') {\n            throw TypeError('\"name\" argument must be typeof string.');\n        }\n        if (typeof featureKey !== 'string') {\n            throw TypeError('\"feature\" argument must be typeof string.');\n        }\n        const feature = this.getObservable(featureKey);\n        const keys = this.#nameToKey[name];\n        if (keys === undefined) {\n            throw new FeatureNameNotFoundError(name);\n        } else if (keys.length === 1) {\n            return keys[0];\n        }\n        // - For recorders, return the first line with the given name. Is this right?\n        const objectsWithLineParents = ['recorder'];\n        if (objectsWithLineParents.includes(feature.getProperty('object'))) {\n            const lineKeys = keys.filter(k => this.getObservable(k).isLine());\n            if (lineKeys.length === 1) {\n                return lineKeys[0];\n            } else {\n                throw Error(`This FeatureGraph could not unambiguously find a line for the object named \"${feature.getProperty('name')}\".`);\n            }\n        } else {\n            const nodeKeys = keys.filter(k => this.getObservable(k).isNode());\n            if (nodeKeys.length === 1) {\n                return nodeKeys[0];\n            } else {\n                //throw Error(`This FeatureGraph could not unambiguously find a node for the object named \"${feature.getProperty('name')}\".`);\n                // - HACK (David): How to deal with circuit vs. bus object with same name, or duplicate bus objects with same name?\n                //  - Always assume that the line or child wants the \"bus\" object, not the \"circuit\" object\n                //  - If two buses have identical names, just choose the first bus arbitrarily\n                const busKeys = nodeKeys.filter(k => this.getObservable(k).getProperty('object') === 'bus');\n                if (busKeys.length > 0) {\n                    return busKeys[0];\n                } else {\n                    // - In really weird situations, such as a case of multiple circuit objects with the same name, just return the first object\n                    return nodeKeys[0];\n                }\n            }\n        }\n    }\n\n    /**\n     * @param {string} name - the name of the feature that I want to retrieve the key for\n     * @returns {string} The correct tree key of the feature with the given name. If there are multiple keys, return the first one. Throw an exception\n     * if there is no matching tree key.\n     */\n    getKeyForComponent(name) {\n        if (typeof name !== 'string') {\n            throw TypeError('\"name\" argument must be a string.');\n        }\n        const keys = this.#nameToKey[name];\n        if (keys === undefined) {\n            throw new FeatureNameNotFoundError(name);\n        } else {\n            return keys[0];\n        }\n    }\n\n    /**\n     * @param {string} sourceKey - the key of an instance of my Feature class that has a line going from it (i.e. the parent)\n     * @param {string} targetKey - the key of an instance of my Feature class that has a line going to it (i.e. the child)\n     * @returns {Object} An object containing floating-point values for \"sourceLat\", \"sourceLon\", \"targetLat\", \"targetLon\"\n     */\n    getLineLatLon(sourceKey, targetKey) {\n        let sourceLon, sourceLat, targetLon, targetLat;\n        for (let i = 0; i < arguments.length; i++) {\n            const observable = this.getObservable(arguments[i]);\n            const coordinates = observable.getCoordinates();\n            // - TODO: round coordinates?\n            let lon, lat;\n            if (observable.isLine()) {\n                lon = (coordinates[0][0] + coordinates[1][0]) / 2;\n                lat = (coordinates[0][1] + coordinates[1][1]) / 2;\n            } else if (observable.isNode()) {\n                lon = coordinates[0];\n                lat = coordinates[1];\n            } else {\n                throw TypeError(`The feature \"${observable.getProperty('name')}\" is neither a line nor a node.`);\n            }\n            if (i === 0) {\n                sourceLon = lon;\n                sourceLat = lat;\n            } else if (i === 1) {\n                targetLon = lon;\n                targetLat = lat;\n            }\n        }\n        return {\n            'sourceLat': sourceLat,\n            'sourceLon': sourceLon,\n            'targetLat': targetLat,\n            'targetLon': targetLon\n        }\n    }\n\n    /**\n     * @param {string} namespace - the namespace of keys I'm interested in (e.g. \"default\" for normal keys and \"parentChild\" for parent-child lines)\n     * @returns {number} the current maximum tree key in this FeatureGraph\n     */\n    getMaxKey(namespace='default') {\n        let keys = [];\n        for (let k of Object.keys(this.#keyToFeature)) {\n            if (namespace === 'default') {\n                k = +k;\n                if (!isNaN(k)) {\n                    keys.push(k);\n                }\n            } else if (['parentChild'].includes(namespace)) {\n                if (k.startsWith(namespace)) {\n                    k = +k.split(':')[1];\n                    if (!isNaN(k)) {\n                        keys.push(k);\n                    }\n                }\n            } else {\n                throw ReferenceError(`The key namespace \"${namespace}\" does not exist in this FeatureGraph. Leave the \"namespace\" argument empty to use the \"default\" key namespace.`);\n            }\n        }\n        // Math.max.apply(null, []) === -Infinity, so I start with 0\n        if (keys.length === 0) {\n            keys = [0];\n        }\n        return Math.max.apply(null, keys);\n    }\n\n    /**\n     * @param {string} childKey - the treeKey of the child that I want the line for\n     * @returns {Feature} - the parent-child line of the child\n     */\n    getParentChildLine(childKey) {\n        if (this.#graph.hasNode(childKey)) {\n            for (const edgeKey of this.#graph.edges(childKey)) {\n                const observerKey = this.#getObserverKey(childKey, edgeKey);\n                const observer = this.getObservable(observerKey);\n                if (observer.isLine()) {\n                    // - Currently, a node can only have a single parent, so I don't need to check any other properties of either object to confirm\n                    //   that this is the correct parent-child line\n                    if (observer.isParentChildLine()) {\n                        return observer;\n                    }\n                } else {\n                    throw new GraphNodeEdgeError(childKey, observerKey);\n                }\n            }\n        } else {\n            throw new FeatureNotFoundError(childKey);\n        }\n        throw Error(`A parent-child line could not be found for the feature \"${childKey}\".`);\n    }\n\n    /**\n     * @param {string} parentKey - the key of an instance of my Feature class\n     * @param {string} childKey - the key of an instance of my Feature class\n     * @returns {Feature} - an instance of my Feature class\n     */\n    getParentChildLineFeature(parentKey, childKey) {\n        const {sourceLat, sourceLon, targetLat, targetLon} = this.getLineLatLon(parentKey, childKey);\n        const parentChildLineKey = `parentChild:${this.getMaxKey('parentChild') + 1}`;\n        const parentName = this.getObservable(parentKey).getProperty('name');\n        const childName = this.getObservable(childKey).getProperty('name');\n        const parentChildLineFeature = new Feature({\n            geometry: {\n                coordinates: [[sourceLon, sourceLat], [targetLon, targetLat]],\n                type: 'LineString'\n            },\n            properties: {\n                treeKey: parentChildLineKey,\n                treeProps: {\n                    object: 'line',\n                    name: parentChildLineKey,\n                    phases: 1,\n                    type: 'parentChild',\n                    from: parentName,\n                    to: childName\n                }\n            },\n            type: 'Feature'\n        });\n        return parentChildLineFeature;\n    }\n\n    /**\n     * - This function accepts an ObservableInterface instance, rather than a basic GeoJSON feature, because I need to rely on the ObservableInterface\n     *   API for getting properties. I don't want to assume I'll always be working with true GeoJSON features. All nodes must be inserted before all\n     *   lines. If a line is inserted and its nodes don't exist, a ReferencError is thrown.\n     * @param {Feature} observable - an ObservableInterface instance\n     * @returns {undefined}\n     */\n    insertObservable(observable) {\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be an instance of Feature class.');\n        }\n        this.#insertObservableIntoKeyToFeature(observable);\n        const observableKey = observable.getProperty('treeKey', 'meta');\n        this.#graph.addNode(observableKey);\n        // - Insert the feature into the nameToKey map\n        // - The following objects SOMETIMES lack the \"name\" property: recorder, player, and sometimes other regular objects!\n        //  - By far, the easiest thing to do is give them a name. I can strip it out on export if needed\n        if (!observable.hasProperty('name')) {\n            if (observable.hasProperty('object')) {\n                const object = observable.getProperty('object');\n                if (['recorder', 'player'].includes(object) || !observable.isConfigurationObject()) {\n                    const name = `${object}:${observableKey}:addedName`;\n                    observable.setProperty('name', name);\n                }\n            }\n        }\n        // - !CMD objects need to be able to have the same command, but the name of the !CMD object is the command. Get around this by creating a new\n        //   \"CMD_command\" property whose value replaces the \"name\" property value on export\n        if (observable.hasProperty('object')) {\n            const object = observable.getProperty('object');\n            if (object === '!CMD') {\n                observable.setProperty('CMD_command', observable.getProperty('name'));\n                const name = `${object}:${observableKey}:addedName`;\n                observable.setProperty('name', name);\n            }\n        }\n        // - Give the feature a pointer to this graph, which effectively makes the feature Observable to all other features and an Observer of all\n        //   other features. This needs to be set after recorders and players are given names\n        observable.setGraph(this);\n        // - Configuration objects aren't pointed to by \"to\", \"from\", or \"parent\", so they don't need names\n        this.#insertObservableIntoNameToKey(observable);\n        // - Insert the feature into the actual graph\n        //  - This logic assumes the following insertion order: (1) all nodes nodes, (2) all lines\n        //  - Parent-child lines must be created and inserted with the other lines. They are not automatically created here\n        // - All nodes and all lines are treated as nodes in the graph.\n        //  - E.g. a node and two lines are modeled as three nodes, one of which (the actual node) is connected via edges to the other two (line)\n        //    nodes\n        if (observable.isLine()) {\n            const sourceName = observable.getProperty('from');\n            const sourceKey = this.getKey(sourceName, observableKey);\n            // - <Graph>.addEdge() does throw an error for non-existent nodes, which is what I want\n            this.#graph.addEdge(sourceKey, observableKey);\n            const targetName = observable.getProperty('to');\n            const targetKey = this.getKey(targetName, observableKey);\n            this.#graph.addEdge(observableKey, targetKey);\n            const sourceObservable = this.getObservable(sourceKey);\n            //const targetObservable = this.getObservable(targetKey);\n            if (sourceObservable.isChild()) {\n                if (sourceObservable.getProperty('parent') === targetName) {\n                    // - If these conditions are met, this line (which is modeled as a node in this graph) has \"from\" and \"to\" mixed up and I need to\n                    //   check my parent-child line creation code\n                    throw Error(`Parent-child lines should always go from parent (source) to child (target), but the line \"${observableKey}\" has a source node \"${sourceKey}\" that is a child.`);\n                }\n                // - If both conditions are not met, then this line is not a parent-child line, but it is connected to a node that is also a child\n                //   node (with a separate parent-child line). This is weird but valid.\n            }\n            // - I don't need to add a special \"isParentChild\" attribute to edges anymore. When I inspect the node neighbors of a graph node, all the\n            //   information about whether the neighbor node is a another node, a line, a parent-child line, etc. is already present in the\n            //   ObservableInterface instance\n        }\n        this.notifyObserversOfNewObservable(observable);\n    }\n\n    /**\n     * - Mark all nodes as unvisted. The ObservableController instance needs to call this function after calling <Observable>.setCoordinates()\n     * @returns {undefined}\n     */\n    markNodesAsUnvisited() {\n        this.#graph.forEachNode((node, attrs) => {\n            this.#graph.setNodeAttribute(node, 'visited', false);\n        });\n    }\n\n    // *********************\n    // ** Private methods ** \n    // *********************\n\n    /**\n     * - Return the ID of the graph node attached to the edge, as long as the ID != observableKey\n     *  - E.g. if I'm examining the edge between a node and a line, and the node was changed, I don't want to be given back the node ID. I want the\n     *    line ID\n     * @param {string} observableKey - the ID of the ObservableInterface instance that changed in some way\n     * @param {string} edgeKey - The edge ID of one edge that is connected to the graph node that represents the ObservableInterface instance\n     */\n    #getObserverKey(observableKey, edgeKey) {\n        const sourceKey = this.#graph.source(edgeKey);\n        const targetKey = this.#graph.target(edgeKey);\n        if (sourceKey === targetKey) {\n            throw Error(`This FeatureGraph instance does not allow self-loops, but one exists on node \"${sourceKey}\".`);\n        }\n        if (sourceKey !== observableKey) {\n            return sourceKey;\n        } else {\n            return targetKey;\n        }\n    }\n\n    /**\n     * \n     */\n    #insertObservableIntoKeyToFeature(observable) {\n        const observableKey = observable.getProperty('treeKey', 'meta');\n        if (this.#keyToFeature.hasOwnProperty(observableKey)) {\n            throw Error(`The key \"${observableKey}\" already exists in this.#keyToFeature.`);\n        }\n        this.#keyToFeature[observableKey] = observable;\n    }\n\n    /**\n     * - Insert an ObservableInterface instance into the nameToKey map\n     * @param {Feature} observable - an ObservableInterface instance\n     * @returns {undefined}\n     */\n    #insertObservableIntoNameToKey(observable) {\n        const key = observable.getProperty('treeKey', 'meta');\n        if (observable.hasProperty('name')) {\n            const name = observable.getProperty('name');\n            if (!this.#nameToKey.hasOwnProperty(name)) {\n                this.#nameToKey[name] = [key];\n            } else {\n                if (this.#nameToKey[name].includes(key)) {\n                    throw Error(`The key \"${key}\" is already mapped to the name \"${name}\".`);\n                }\n                this.#nameToKey[name].push(key);\n            }\n        }\n    }\n\n    /**\n     *\n     */\n    #removeObservableFromKeytoFeature(observable) {\n        const observableKey = observable.getProperty('treeKey', 'meta');\n        if (this.#keyToFeature.hasOwnProperty(observableKey)) {\n            delete this.#keyToFeature[observableKey];\n        } else {\n            throw Error(`The key \"${observableKey}\" does not exist in this.#keyToFeature.`);\n        }\n    }\n\n    /**\n     * - Remove an ObservableInterface instance from the nameToKey map\n     * @param {Feature} observable - an ObservableInterface instance\n     * @param {string} oldName - the previous name of the ObservableInterface instance\n     * @returns {undefined}\n     */\n    #removeObservableFromNameToKey(observable, oldName) {\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be an instanceof Feature');\n        }\n        if (typeof oldName !== 'string') {\n            throw TypeError('\"oldName\" argument must be a string.');\n        }\n        const key = observable.getProperty('treeKey', 'meta');\n        // - The \"name\" property cannot be deleted from ObservableInterface instances, so I shouldn't have to deal with a situation where an\n        //   observable no longer has a name but its old name is still in this.#nameToKey\n        if (observable.hasProperty('name')) {\n            if (!this.#nameToKey.hasOwnProperty(oldName)) { \n                // - This function should throw an exception if the ObservableInterface instance's name never existed in this.#nameToKey because that\n                //   would only happen if an object that never had a name has been given a name, which isn't allowed (actually recorders and players\n                //   are given names\n                throw Error(`The name \"${oldName}\" does not exist in the this.#nameToKey.`);\n            }\n            if (this.#nameToKey[oldName].includes(key)) {\n                this.#nameToKey[oldName] = this.#nameToKey[oldName].filter(k => k !== key);\n                if (this.#nameToKey[oldName].length === 0) {\n                    delete this.#nameToKey[oldName];\n                }\n            } else {\n                throw Error(`The name \"${oldName}\" exists in this.#nameToKey, but the key \"${key}\" does not exist in the array for that name.`);\n            }\n        }\n    }\n}\n\nclass FeatureNotFoundError extends Error {\n\n    constructor(key) {\n        // - After this call to the Error constructor, \"message\" is undefined but that's okay because I set it immediately after\n        super();\n        this.message = `This FeatureGraph instance does not have a graph node with the key \"${key}\".`;\n        this.name = 'FeatureNotFoundError';\n    }\n}\n\nclass FeatureNameNotFoundError extends Error {\n\n    constructor(name) {\n        super();\n        this.message = `This FeatureGraph instance could not find a key for the object named \"${name}\".`;\n        this.name = 'FeatureNameNotFoundError';\n    }\n}\n\nclass GraphNodeEdgeError extends Error {\n    \n    constructor(node1Key, node2Key) {\n        super();\n        this.message = `This FeatureGraph instance does not currently support edges between nodes, but an edge exists between nodes \"${node1Key}\" and \"${node2Key}\".`;\n        this.name = 'GraphNodeEdgeError';\n    }\n}\n</script>\n<script>\n\"use strict\";\n\nclass Modal {\n    divElement;         // - The divElement is the outermost div that contains the modal's content\n    #bannerElement;     // - The bannerElement contains the banner text. It's usually empty unless the user needs to be notified of something\n    #containerElement;  // - The containerElement contains optional elements (e.g. buttons)\n    #tableElement;      // - The table element is an actual table\n    #titleElement;      // - The title element contains the optional title text\n\n    /**\n     * @returns {undefined}\n     */\n    constructor() {\n        this.divElement = document.createElement('div');\n        this.divElement.classList.add('js-div--modal');\n        this.divElement.addEventListener('click', function(e) {\n            // - Don't let clicks on the divElement cause the modalInsert to close\n            e.stopPropagation();\n        });\n        this.#bannerElement = null;\n        this.#containerElement = null;\n        this.#tableElement = null;\n        this.#titleElement = null;\n    }\n    \n    /******************/\n    /* Public methods */\n    /******************/\n\n    /**\n     * @param {(string|Node)} banner - the banner to display\n     * @param {Array} [styles=null] - any styles that should be applied to the banner\n     * @returns {undefined}\n     */\n    setBanner(banner, styles=null) {\n        if (this.#bannerElement === null) {\n            this.#bannerElement = document.createElement('div');\n            this.#bannerElement.classList.add('div--modalBanner');\n            this.divElement.prepend(this.#bannerElement);\n        }\n        if (typeof banner === 'string') {\n            const span = document.createElement('span');\n            span.textContent = banner;\n            this.#bannerElement.replaceChildren(span);\n        } else if (banner instanceof Node) {\n            this.#bannerElement.replaceChildren(banner);\n        } else {\n            throw TypeError('The \"banner\" argument must be a string or Node.');\n        }\n        if (!(styles instanceof Array) && styles !== null) {\n            throw TypeError('The \"styles\" argumet must be an array or null.');\n        }\n        if (styles !== null) {\n            this.#bannerElement.classList.value = `div--modalBanner ${styles.join(' ')}`;\n        } else {\n            this.#bannerElement.classList.value = 'div--modalBanner';\n        }\n    }\n\n    /**\n     * @param {(string|Node)} title - the title to display\n     * @param {Array} [styles=null] - any styles that should be applied to the title\n     * @returns {undefined}\n     */\n    setTitle(title, styles=null) {\n        if (this.#titleElement === null) {\n            this.#titleElement = document.createElement('div');\n            this.#titleElement.classList.add('div--modalTitle');\n        }\n        if (this.#bannerElement === null) {\n            this.divElement.prepend(this.#titleElement);\n        } else {\n            this.#bannerElement.after(this.#titleElement);\n        }\n        if (typeof title === 'string') {\n            const span = document.createElement('span');\n            span.textContent = title;\n            this.#titleElement.replaceChildren(span);\n        } else if (title instanceof Node) {\n            this.#titleElement.replaceChildren(title);\n        } else {\n            throw TypeError('The \"title\" argument must be a string or Node.');\n        }\n        if (!(styles instanceof Array) && styles !== null) {\n            throw TypeError('The \"styles\" argument must be an array or null.');\n        }\n        if (styles !== null) {\n            this.#titleElement.classList.add(...styles);\n        } else {\n            this.#titleElement.classList.value = 'div--modalTitle';\n        }\n    }\n\n    /**\n     * @param {Array} elements - an array of elements that should occupy a table body row. null elements just append empty <td>/<td> elements\n     * @param {string} [position='append'] - the location to insert the tBody row. Can be \"prepend\", \"beforeEnd\", or \"append\"\n     * @param {(Array|null)} [styles=null] - any styles that should be applied to the row\n     * @returns {undefined}\n     */\n    insertTBodyRow(elements, position='append', styles=null) {\n        if (!(styles instanceof Array) && styles !== null) {\n            throw TypeError('The \"styles\" argument must be an array or null.');\n        }\n        if (this.#tableElement === null) {\n            this.#createTableElement();    \n        }\n        const tr = document.createElement('tr');\n        if (styles !== null) {\n            tr.classList.add(...styles);\n        }\n        elements.forEach(e => {\n            const td = document.createElement('td');\n            const div = document.createElement('div');\n            if (typeof e === 'string') {\n                const span = document.createElement('span');\n                span.textContent = e;\n                div.appendChild(span);\n                td.appendChild(div)\n            } else if (e instanceof Node) {\n                div.appendChild(e);\n                td.appendChild(div);\n            } else if (e !== null) {\n                throw TypeError(`The Table class only accepts arrays of null, Node, or string.`)\n            }\n            tr.appendChild(td);\n        });\n        if (position === 'prepend') {\n            this.#tableElement.tBodies[0].prepend(tr);\n        } else if (position === 'beforeEnd') {\n            const lastNodeIndex = this.#tableElement.tBodies[0].children.length - 1;\n            const lastNode = this.#tableElement.tBodies[0].children.item(lastNodeIndex);\n            this.#tableElement.tBodies[0].insertBefore(tr, lastNode)\n        } else if (position === 'append') {\n            this.#tableElement.tBodies[0].appendChild(tr);\n        } else {\n            throw Error('Please specify a valid value for the \"position\" parameter: \"prepend\", \"beforeEnd\", or \"append\".');\n        }\n    }\n\n    /**\n     * @param {Array} elements - an array of elements that should occupy a table header row. null elements just append empty <td>/<td> elements\n     * @param {string} [position='append'] - the location to insert the tHead row. Can be \"prepend\", \"beforeEnd\", or \"append\"\n     * @param {Array} [styles=null] - any styles that should be applied to the row\n     * @returns {undefined}\n     */\n    insertTHeadRow(elements, position='append', styles=null) {\n        if (!(styles instanceof Array) && styles !== null) {\n            throw TypeError('The \"styles\" argumet must be an array or null.');\n        }\n        if (this.#tableElement === null) {\n            this.#createTableElement();\n        }\n        const tr = document.createElement('tr');\n        if (styles !== null) {\n            tr.classList.add(...styles);\n        }\n        elements.forEach(e => { \n            const th = document.createElement('th');\n            const div = document.createElement('div');\n            if (typeof e === 'string') {\n                const span = document.createElement('span');\n                span.textContent = e;\n                div.appendChild(span);\n                th.appendChild(div);\n            } else if (e instanceof Node) {\n                div.appendChild(e);\n                th.appendChild(div);\n            } else if (e !== null) {\n                throw TypeError(`The Table class only accepts arrays of null, Node, or string.`);\n            }\n            tr.appendChild(th);\n        });\n        if (position === 'prepend') {\n            this.#tableElement.tHead.prepend(tr);\n        } else if (position === 'beforeEnd') {\n            const lastNodeIndex = this.#tableElement.tHead.children.length - 1;\n            const lastNode = this.#tableElement.tHead.children.item(lastNodeIndex);\n            this.#tableElement.tHead.insertBefore(tr, lastNode)\n        } else if (position === 'append') {\n            this.#tableElement.tHead.appendChild(tr);\n        } else {\n            throw Error('Please specify a valid value for the \"position\" parameter: \"prepend\", \"beforeEnd\", or \"append\".');\n        }\n    }\n\n    /**\n     * @param {Array} styles\n     * @param {string} elementName\n     * @returns {undefined}\n     */\n    addStyleClasses(styles, elementName) {\n        if (!(styles instanceof Array)) {\n            throw TypeError('The \"styles\" argument must be an array.');\n        }\n        if (typeof elementName !== 'string') {\n            throw TypeError('The \"elementName\" argument must be a string.');\n        }\n        switch (elementName) {\n            case 'divElement':\n                if (this.divElement !== null) {\n                    this.divElement.classList.add(...styles);\n                }\n                break;\n            case 'bannerElement':\n                if (this.#bannerElement !== null) {\n                    this.#bannerElement.classList.add(...styles);\n                }\n                break;\n            case 'containerElement':\n                if (this.#containerElement !== null) {\n                    this.#containerElement.classList.add(...styles);\n                }\n                break;\n            case 'tableElement':\n                if (this.#tableElement !== null) {\n                    this.#tableElement.classList.add(...styles);\n                }\n                break;\n            case 'titleElement':\n                if (this.#titleElement !== null) {\n                    this.#titleElement.classList.add(...styles);\n                }\n                break;\n            default:\n                throw Error('The \"elementName\" argument must be \"divElement\", \"bannerElement\", \"containerElement\", \"tableElement\", or \"titleElement\".');\n        }\n    }\n\n    /**\n     * @param {Array} styles\n     * @param {string} elementName\n     * @returns {undefined}\n     */\n    removeStyleClass(styles, elementName) {\n        if (!(styles instanceof Array)) {\n            throw TypeError('The \"styles\" argument must be an array.');\n        }\n        if (typeof elementName !== 'string') {\n            throw TypeError('The \"elementName\" argument must be a string.');\n        }\n        switch (elementName) {\n            case 'divElement':\n                if (this.divElement !== null) {\n                    this.divElement.classList.remove(...styles);\n                }\n                break;\n            case 'bannerElement':\n                if (this.#bannerElement !== null) {\n                    this.#bannerElement.classList.remove(...styles);\n                }\n                break;\n            case 'containerElement':\n                if (this.#containerElement !== null) {\n                    this.#containerElement.classList.remove(...styles);\n                }\n                break;\n            case 'tableElement':\n                if (this.#tableElement !== null) {\n                    this.#tableElement.classList.remove(...styles);\n                }\n                break;\n            case 'titleElement':\n                if (this.#titleElement !== null) {\n                    this.#titleElement.classList.remove(...styles);\n                }\n                break;\n            default:\n                throw Error('The \"elementName\" argument must be \"divElement\", \"bannerElement\", \"containerElement\", \"tableElement\", or \"titleElement\".');\n        }\n    }\n\n   /**\n    * @param {Node} e - an element to append to the element div\n    * @param {string} [position='append'] - the location to insert the element row. Can be \"prepend\", \"beforeEnd\", or \"append\"\n    * @param {Array} [styles=null] - any styles that should be applied to the element\n    * @returns {undefined}\n    */\n    insertElement(e, position='append', styles=null) {\n        if (!(e instanceof Node)) {\n            throw TypeError('\"e\" argument must be instanceof Node');\n        }\n        if (!(styles instanceof Array) && styles !== null) {\n            throw TypeError('The \"styles\" argumet must be an array or null.');\n        }\n        if (styles !== null) {\n            e.classList.add(...styles);\n        }\n        if (this.#containerElement === null) {\n            this.#createContainerElement();\n        }\n        if (position === 'prepend') {\n            this.#containerElement.prepend(e);\n        } else if (position === 'beforeEnd') {\n            const lastNodeIndex = this.#containerElement.children.length - 1;\n            const lastNode = this.#containerElement.children.item(lastNodeIndex);\n            this.#containerElement.insertBefore(e, lastNode)\n        } else if (position === 'append') {\n            this.#containerElement.appendChild(e);\n        } else {\n            throw Error('Please specify a valid value for the \"position\" parameter: \"prepend\", \"beforeEnd\", or \"append\".')\n        } \n    }\n\n    /**\n     * @param {boolean} [spinner=true] - whether to show the spinner\n     * @param {string} [bannerText=null] - the centered text to display below the spinnner, if the spinner exists\n     * @param {Array} [styles=null] - any styles that should be applied to the title and banner\n     * @returns {undefined}\n     */\n    showProgress(showSpinner=true, bannerText=null, styles=null) {\n        if (typeof showSpinner !== 'boolean') {\n            throw TypeError('The \"showSpinner\" argument must be a boolean.');\n        }\n        if (typeof bannerText !== 'string' && bannerText !== null) {\n            throw TypeError('The \"bannerText\" argument must be a string or null.');\n        }\n        if (!(styles instanceof Array) && styles !== null) {\n            throw TypeError('The \"styles\" argument must be an Array or null.');\n        }\n        const outerDiv = document.createElement('div');\n        if (showSpinner) {\n            const img = document.createElement('img');\n            img.src = '/static/geoJsonMap/v3/spinner.gif';\n            outerDiv.appendChild(img);\n        }\n        if (bannerText !== null) {\n            const innerDiv = document.createElement('div');\n            // - I don't want a span. A span gives me regular-sized font. I want banner-sized font\n            //const span = document.createElement('span');\n            //span.textContent = bannerText;\n            innerDiv.textContent = bannerText;\n            //innerDiv.appendChild(span);\n            outerDiv.appendChild(innerDiv);\n        }\n        this.setBanner(outerDiv, styles);\n    }\n\n    // *********************\n    // ** Private methods ** \n    // *********************\n\n    #createTableElement() {\n        this.#tableElement = document.createElement('table');\n        this.#tableElement.classList.add('table--modal');\n        this.#tableElement.appendChild(document.createElement('thead'));\n        this.#tableElement.appendChild(document.createElement('tbody'));\n        this.divElement.appendChild(this.#tableElement);\n    }\n\n    #createContainerElement() {\n        this.#containerElement = document.createElement('div');\n        this.#containerElement.classList.add('div--modalElementContainer');\n        this.divElement.appendChild(this.#containerElement);\n    }\n}\n</script>\n<script>\n\"use strict\";\n\n// - Test data can be found at omf/scratch/CIGAR/geoJsonLeaflet\n\nclass GeojsonModal { // implements ModalInterface, ObserverInterface\n    #controller;            // - ControllerInterface instance\n    #filenameToLayerGroup;  // - Container for LayerGroups\n    #modal;                 // - Modal instance\n    #observables;           // - An array of ObservableInterface instances\n    #removed;               // - Whether this ColorModal instance has already been deleted\n\n    /**\n     * @param {Array} observables - an array of ObservableInterface instances \n     * @param {FeatureController} controller - a ControllerInterface instance\n     */\n    constructor(observables, controller) {\n        if (!(observables instanceof Array)) {\n            throw TypeError('\"observables\" argumnet must be an Array.');\n        }\n        if (!(controller instanceof FeatureController)) {\n            throw Error('\"controller\" argument must be instanceof FeatureController.');\n        }\n        this.#controller = controller;\n        this.#filenameToLayerGroup = {};\n        this.#modal = null;\n        this.#observables = observables;\n        this.#observables.forEach(ob => ob.registerObserver(this));\n        this.#removed = false;\n        this.renderContent();\n        this.refreshContent();\n    }\n\n    // *******************************\n    // ** ObserverInterface methods **\n    // *******************************\n\n    /**\n     * - Remove this ObserverInterface instance (i.e. \"this\") from the ObservableInterface instance (i.e. \"observable\") that has been deleted, and\n     *   perform other actions as needed\n     * @param {Feature} observable - an ObservableInterface instance\n     * @returns {undefined}\n     */\n    handleDeletedObservable(observable) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature.');\n        }\n        if (!this.#removed) {\n            observable.removeObserver(this);\n            const index = this.#observables.indexOf(observable);\n            if (index > -1) {\n                this.#observables.splice(index, 1);\n            } else {\n                throw Error('The observable was not found in this.#observables.');\n            }\n            if (this.#observables.length === 0) {\n                this.remove();\n            } else {\n                this.#updateLayerGroups();\n                this.refreshContent();\n            }\n        }\n    }\n\n    /**\n     *\n     */\n    handleNewObservable(observable) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        throw new UnsupportedOperationError();\n    }\n\n    /**\n     * - Update this ObserverInterface instance (i.e. \"this\") based on the coordinates of the ObservableInterface instance (i.e. \"observable\") that\n     *   have just changed and perform other actions as needed\n     * @param {Feature} observable - an ObservableInterface instance\n     * @param {Array} oldCoordinates - the old coordinates of the observable prior to the change in coordinates\n     * @returns {undefined}\n     */\n    handleUpdatedCoordinates(observable, oldCoordinates) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature.');\n        }\n        if (!(oldCoordinates instanceof Array)) {\n            throw TypeError('\"oldCoordinates\" argument must be an array.');\n        }\n        this.#updateLayerGroups();\n        this.refreshContent();\n    }\n\n    /**\n     * - Update this ObserverInstance (i.e. \"this\") based on the property of the ObservableInterface instance (i.e. \"observable\") that has just\n     *   changed and perform other actions as needed\n     * @param {Feature} observable - an ObservableInterface instance\n     * @param {string} propertyKey - the property key of the property that has been created/changed/deleted in the observable\n     * @param {(string|Object)} oldPropertyValue - the previous value of the property that has been created/changed/deleted in the observable\n     * @param {string} namespace - the namespace of the property that has been created/changed/deleted in the observable\n     * @returns {undefined}\n     */\n    handleUpdatedProperty(observable, propertyKey, oldPropertyValue, namespace='treeProps') {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature.');\n        }\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be a string.');\n        }\n        if (typeof namespace !== 'string') {\n            throw TypeError('\"namespace\" argument must be a string.');\n        }\n        this.#updateLayerGroups();\n        this.refreshContent();\n    }\n\n    // ****************************\n    // ** ModalInterface methods **\n    // ****************************\n\n    getDOMElement() {\n        return this.#modal.divElement;\n    }\n\n    /**\n     * @returns {boolean}\n     */\n    isRemoved() {\n        return this.#removed;\n    }\n\n    // - Go through the attachments object and display existing GeoJSON files\n\n    /**\n     * @returns {undefined}\n     */\n    refreshContent() {\n        const fileListModal = new Modal();\n        fileListModal.addStyleClasses(['colorModal'], 'divElement');\n        if (Object.values(this.#filenameToLayerGroup).length > 0) {\n            fileListModal.insertTHeadRow(['Filename', 'Show GeoJSON on Page Load']);\n            fileListModal.addStyleClasses(['centeredTable'], 'tableElement');\n        }\n        const that = this;\n        const attachments = this.#controller.observableGraph.getObservable('omd').getProperty('attachments', 'meta');\n        for (const filename of Object.keys(this.#filenameToLayerGroup)) {\n            const checkbox = document.createElement('input');\n            checkbox.type = 'checkbox';\n            checkbox.name = 'displayOnLoad';\n            checkbox.addEventListener('change', function() {\n                for (const [fname, obj] of Object.entries(attachments.geojsonFiles)) {\n                    if (fname === filename) {\n                        if (this.checked) {\n                            obj.displayOnLoad = true;\n                        } else {\n                            delete obj.displayOnLoad\n                        }\n                    } else {\n                        // - Do nothing\n                    }\n                }\n            });\n            if (attachments.geojsonFiles[filename].displayOnLoad) {\n                checkbox.checked = true;\n            }\n            const removeButton = document.createElement('button');\n            removeButton.classList.add('horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex', 'fullWidth', 'delete');\n            const span = document.createElement('span');\n            span.textContent = 'Remove';\n            removeButton.appendChild(span);\n            removeButton.addEventListener('click', function() {\n                if (attachments.hasOwnProperty('geojsonFiles')) {\n                    delete attachments.geojsonFiles[filename];\n                    that.#filenameToLayerGroup[filename].layerGroup.remove();\n                    that.#filenameToLayerGroup[filename].layerControl.remove();\n                    delete that.#filenameToLayerGroup[filename];\n                    if (Object.keys(attachments.geojsonFiles).length === 0) {\n                        delete attachments.geojsonFiles;\n                    }\n                    that.refreshContent();\n                }\n            });\n            fileListModal.insertTBodyRow([filename, checkbox, removeButton]);\n        }\n        const containerElement = this.#modal.divElement.getElementsByClassName('div--modalElementContainer')[0];\n        const oldModal = containerElement.getElementsByClassName('js-div--modal');\n        if (oldModal.length === 0) {\n            containerElement.prepend(fileListModal.divElement);\n        } else {\n            oldModal[0].replaceWith(fileListModal.divElement);\n        }\n    }\n\n    /**\n     * @returns {undefined}\n     */\n    remove() {\n        if (!this.#removed) {\n            this.#observables.forEach(ob => ob.removeObserver(this));\n            this.#observables = null;\n            this.#modal.divElement.remove();\n            this.#removed = true;\n        }\n    }\n\n    /**\n     * - Render the modal for the first time\n     * @returns {undefined}\n     */\n    renderContent() {\n        const modal = new Modal();\n        modal.addStyleClasses(['outerModal', 'fitContent'], 'divElement');\n        modal.setTitle('Add GeoJSON');\n        modal.addStyleClasses(['horizontalFlex', 'centerMainAxisFlex', 'centerCrossAxisFlex'], 'titleElement');\n        const geojsonInput = document.createElement('input');\n        geojsonInput.type = 'file';\n        geojsonInput.accept = '.geojson';\n        geojsonInput.required = true;\n        geojsonInput.id = 'geojsonInput';\n        const that = this;\n        const attachments = this.#controller.observableGraph.getObservable('omd').getProperty('attachments', 'meta');\n        geojsonInput.addEventListener('change', async function() {\n            const file = this.files[0];\n            const text = await file.text();\n            let featureCollection;\n            try {\n                featureCollection = JSON.parse(text);\n                that.#modal.setBanner('', ['hidden']);\n                if (!attachments.hasOwnProperty('geojsonFiles')) {\n                    attachments.geojsonFiles = {};\n                }\n                attachments.geojsonFiles[file.name] = {\n                    json: JSON.stringify(featureCollection)\n                }\n                that.#updateLayerGroups();\n                that.refreshContent();\n            } catch (e) {\n                that.#modal.showProgress(false, `There was an error \"${e.message}\" when parsing the JSON file \"${file.name}\". Please double-check the JSON formatting.`, ['caution']);\n            }\n        });\n        const geojsonLabel = document.createElement('label');\n        geojsonLabel.htmlFor = 'geojsonInput';\n        geojsonLabel.innerHTML = 'Add a file containing a GeoJSON feature collection (.geojson)';\n        modal.insertTBodyRow([geojsonLabel, geojsonInput]);\n        modal.addStyleClasses(['centeredTable'], 'tableElement');\n        // - Append an empty div so the containerElement isn't null\n        const submitDiv = document.createElement('div');\n        modal.insertElement(submitDiv);\n        if (this.#modal === null) {\n            this.#modal = modal;\n        }\n        if (document.body.contains(this.#modal.divElement)) {\n            this.#modal.divElement.replaceWith(modal.divElement);\n            this.#modal = modal;\n        }\n        this.#updateLayerGroups(true);\n    }\n\n    // ********************\n    // ** Public methods **\n    // ********************\n\n    // *********************\n    // ** Private methods **\n    // *********************\n\n    /**\n     * - Iterate through the attachments.geojsonFiles object. For each file, do the following:\n     *  - Parse the json string into a GeoJSON featureCollection\n     *  - Iterate through the features of the feature collection and create Feature instances and LeafletLayer instances\n     *  - Add the LeafletLayer instances to a new LayerGroup that has the same name as the file\n     *  - Do not add the Feature instances to a FeatureGraph (at least, not yet)\n     *  - Add the LayerGroup to the map\n     *      - In order to not keep adding the same features over and over again, here's what I'll do:\n     *          - I consider filenames to be unique identifiers for a set of Features/LeafletLayers\n     *          - Have a \"geojsonFiles\" object as a property of this GeojsonModal. Keys are filenames and values are LayerGroup instances. If a file\n     *            is deleted, modify the attachments object, remove the LayerGroup from the map, and delete the LayerGroup from the geojsonFiles\n     *            object. If a file is added, modify the attachments object, create a new LayerGroup object, add the LeafletLayers to the LayerGroup,\n     *            overwrite the geojsonFiles object with the new layer group (and remove the matching LayerGroup from the map if there was one), and\n     *            add the new LayerGroup to the map\n     * - In this way, the attachments object will be synchronized with the geojsonFiles object. The user will be able to show/hide the LayerGroups via\n     *   the normal Leaflet controls\n     * - When is this function called? On renderContent(), in response to a file upload, and if a GeoJSON file is edited in the attachments modal\n     * @param {boolean} renderContent - whether this function was called on the initial renderContent() call\n     * @returns {undefined}\n     */\n    #updateLayerGroups(renderContent=false) {\n        const attachments = this.#controller.observableGraph.getObservable('omd').getProperty('attachments', 'meta');\n        if (attachments.hasOwnProperty('geojsonFiles')) {\n            const that = this;\n            for (const [filename, obj] of Object.entries(attachments.geojsonFiles)) {\n                try {\n                    const featureCollection = JSON.parse(obj.json);\n                    const layerGroup = L.featureGroup();\n                    featureCollection.features.map(f => new Feature(f)).map(f => new LeafletLayer(f, that.#controller)).forEach(ll => layerGroup.addLayer(ll.getLayer()));\n                    const layerControl = L.control.layers(null, {[filename]: layerGroup}, { position: 'topleft', collapsed: false });\n                    if (this.#filenameToLayerGroup.hasOwnProperty(filename)) {\n                        this.#filenameToLayerGroup[filename].layerGroup.remove();\n                        this.#filenameToLayerGroup[filename].layerControl.remove();\n                    }\n                    this.#filenameToLayerGroup[filename] = {\n                        layerGroup: layerGroup,\n                        layerControl: layerControl\n                    };\n                    layerControl.addTo(LeafletLayer.map);\n                    if (renderContent) {\n                        if (obj.displayOnLoad) {\n                            layerGroup.addTo(LeafletLayer.map);\n                        }\n                    } else {\n                        layerGroup.addTo(LeafletLayer.map);\n                    }\n                } catch (e) {\n                    console.log(`The GeoJSON in the attachments object could not be parsed: ${e}`);\n                }\n            }\n        }\n    }\n}\n</script>\n<script>\n\"use strict\";\n\nclass Nav {\n    sideNav;\n    sideNavNavElement;\n    sideNavDivElement;\n    sideNavArticleElement;\n    topNav;\n    topNavNavElement;\n\n    /**\n     * - Connect a SideNav and TopNav together\n     */\n    constructor() {\n        this.sideNav = new SideNav();\n        this.sideNavNavElement = this.sideNav.navElement;\n        this.sideNavDivElement = this.sideNav.divElement;\n        this.sideNavArticleElement = this.sideNav.articleElement;\n        this.topNav = new TopNav();\n        this.topNavNavElement = this.topNav.navElement;\n        //const hamburger = this.topNavNavElement.getElementsByTagName('button')[0];\n        //hamburger.addEventListener('click', function () {\n        //});\n        const that = this\n        this.sideNavDivElement.addEventListener('click', function() {\n            that.sideNavNavElement.classList.remove('open');\n            that.sideNavDivElement.classList.remove('open');\n            that.sideNavArticleElement.classList.remove('compressed');\n        });\n    }\n}\n</script>\n<script>\n\"use strict\";\n\nclass TopTab {\n    divElement;         // Container for tabDivElement and contentDivElement;\n    #contentDivElement; // Container for content. Contains other divs that contain content\n    #tabDivElement;     // Container for tabs. Contains other divs that are tabs\n    #tabMap;            // Mapping from tabs to content\n\n    constructor() {\n        this.divElement = document.createElement('div');\n        this.divElement.classList.add('div--topTab');\n        this.#tabDivElement = document.createElement('div');\n        this.#tabDivElement.classList.add('div--topTabTabContainer');\n        this.divElement.appendChild(this.#tabDivElement);\n        this.#contentDivElement = document.createElement('div');\n        this.#contentDivElement.classList.add('div--topTabContentContainer')\n        this.divElement.appendChild(this.#contentDivElement);\n        this.#tabMap = {};\n    }\n\n    /**\n     * - Add a tab and some content\n     * \n     * @param {(string|Node)} label - a string or node label a tab\n     * @param {Node} content - A node (e.g. a div) that will be displayed when the tab is clicked on\n     */\n    addTab(label, content) {\n        if (!(content instanceof Node)) {\n            throw Error('\"content\" argument must be instanceof Node.');\n        }\n        if (this.#tabMap.hasOwnProperty(label)) {\n            throw Error('The \"label\" argument must be unique across all tabs.');\n        }\n        const tab = document.createElement('div');\n        const closeButton = document.createElement('button');\n        closeButton.textContent = '\u00d7';\n        closeButton.addEventListener('click', function() {\n            document.getElementsByClassName('js-nav--sideNav')[0].classList.remove('open');\n            document.getElementsByClassName('js-div--sideNavCover')[0].classList.remove('open');\n            document.getElementsByClassName('js-article--sideNavArticle')[0].classList.remove('compressed');\n        });\n        //const that = this;\n        //tab.addEventListener('click', function() {\n        //    that.selectTab(this);\n        //});\n        tab.appendChild(closeButton);\n        const span = document.createElement('span');\n        if (typeof label === 'string') {\n            span.textContent = label;\n        } else {\n            span.appendChild(label);\n        }\n        tab.appendChild(span);\n\n        this.#tabDivElement.appendChild(tab);\n        this.#contentDivElement.appendChild(content);\n        this.#tabMap[label] = {\n            tab: tab,   \n            content: content\n        };\n    }\n\n    getTab(label) {\n        return this.#tabMap[label];\n    }\n\n    removeTab(label) {\n        if (!this.#tabMap.hasOwnProperty(label)) {\n            throw Error(`This TopTab does not have a tab with label ${label}`);\n        }\n        const {tab, content} = this.#tabMap[label];\n        tab.remove();\n        content.remove();\n        delete this.#tabMap[label];\n    }\n\n    /**\n     * - @param {HTMLDivElement} div - The <div></div> element that was clicked. The div element has the event listener instead of the inner span (or\n     *   SVG) because the whole div should be clickable, especially if I choose not to visually round off my tabs. If the inner span (or SVG) is\n     *   clicked, the event will bubble up to the div\n     */\n    selectTab(div) {\n        if (!(div instanceof HTMLDivElement)) {\n            throw TypeError('\"div\" argument must be instanceof HTMLDivElement.');\n        }\n        Object.values(this.#tabMap).forEach(obj => {\n            if (obj.tab !== div) {\n                obj.tab.classList.remove('selected');   \n                obj.content.classList.remove('selected');\n            } else if (!(obj.tab.classList.contains('selected'))) {\n                obj.tab.classList.add('selected');\n                obj.content.classList.add('selected');\n            }\n        }); \n    }\n\n    // *********************\n    // ** Private methods **\n    // *********************\n}\n</script>\n<script>\n\"use strict\";\n\nclass FeatureController { // implements ControllerInterface\n    observableGraph; // - A FeatureGraph instance. It must be public so that views can query all of the data if they need to\n\n    /**\n     * @param {FeatureGraph} observableGraph - a FeatureGraph instance that contains all of the actual data\n     */\n    constructor(observableGraph) {\n        if (!(observableGraph instanceof FeatureGraph)) {\n            throw TypeError('\"observableGraph\" argument must be instanceof FeatureGraph.')\n        }\n        this.observableGraph = observableGraph;\n    }\n\n    // *********************************\n    // ** ControllerInterface methods **\n    // *********************************\n\n    /**\n     * @param {Array} observables - an array of ObservableInterface instances that should be added to the graph\n     * @returns {undefined}\n     */\n    addObservables(observables) {\n        observables.forEach(ob => {\n            const key = (this.observableGraph.getMaxKey() + 1).toString();\n            ob.setProperty('treeKey', key, 'meta');\n            this.observableGraph.insertObservable(ob);\n            if (!ob.isConfigurationObject()) {\n                LeafletLayer.createAndGroupLayer(ob, this);\n            }\n            if (ob.isChild()) {\n                const parentKey = this.observableGraph.getKey(ob.getProperty('parent'), ob.getProperty('treeKey', 'meta'));\n                const parentChildLineFeature = this.observableGraph.getParentChildLineFeature(parentKey, key);\n                this.observableGraph.insertObservable(parentChildLineFeature);\n                LeafletLayer.createAndGroupLayer(parentChildLineFeature, this);\n            }\n        });\n    }\n\n    /**\n     * - Delete the property with the matching namespace and property key from all of the ObservableInterface instances\n     * @param {Array} observables - an array of ObservableInterface instances from which the property should be deleted\n     * @param {string} propertyKey - the property key of the property that is in the observables\n     * @param {string} [namespace='treeProps'] - the namespace of the property that is in the observables\n     * @returns {undefined}\n     */\n    deleteProperty(observables, propertyKey, namespace='treeProps') {\n        if (!(observables instanceof Array)) {\n            throw TypeError('\"observables\" argument must be instanceof Array.');\n        }\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be a string.');\n        }\n        if (typeof namespace !== 'string') {\n            throw TypeError('\"namespace\" argument must be a string.');\n        }\n        observables.forEach(ob => {\n            if (ob.hasProperty(propertyKey, namespace)) {\n                ob.deleteProperty(propertyKey, namespace);\n            }\n        });\n        // - Currently, this function is a convenience function that views could do themselves because nothing else needs to be done besides calling\n        //   deleteProperty() on the ObservableInterface instances\n    }\n\n    /**\n     * - Tell the ObservableInterface instances to delete themselves\n     * @param {Array} observables - an array of ObservableInterface instances from which the property should be deleted\n     * @returns {undefined}\n     */\n    deleteObservables(observables) {\n        if (!(observables instanceof Array)) {\n            throw TypeError('\"observables\" argument must be instanceof Array.');\n        }\n        observables.forEach(ob => {\n            ob.deleteObservable();\n        });\n        // - I shouldn't have to do this because all visited nodes are deleted\n        //this.observableGraph.markNodesAsUnvisited();\n        // - Currently, this function is a convenience function that views could do themselves because nothing else needs to be done besides calling\n        //   deleteObservable() on the ObservableInterface instances\n    }\n\n    /**\n     * @param {Array} observables - an array of ObservableInterface instances whose coordinates should be set\n     * @param {Array} coordinates - an array of coordinates for this ObservableInterface instance\n     *  - E.g. for node Feature instances this should be in [<lon>, <lat>] format\n     * @returns {undefined}\n     */\n    setCoordinates(observables, coordinates) {\n        if (!(observables instanceof Array)) {\n            throw TypeError('\"observables\" argument must be instanceof Array.');\n        }\n        if (!(coordinates instanceof Array)) {\n            throw TypeError('\"coordinates\" argument must be instanceof Array.');\n        }\n        observables.forEach(ob => {\n            ob.setCoordinates(coordinates);\n        });\n        // - I have to mark all the nodes as unvisted here because I can't do it in any of the other coordinate-related functions since they all call\n        //   each other\n        this.observableGraph.markNodesAsUnvisited();        \n    }\n\n    /**\n     * @param {Array} observables - an array of ObservableInterface instances whose property should be set\n     * @param {string} propertyKey - the property key of the property that is being created/changed in the ObservableInterface instances\n     * @param {(string|Object)} propertyValue - the property value of the property that is being created/changed in the ObservableInterface instances.\n     *  I don't like to store Objects, Arrays, etc. as property values, but it's required for certain observables like those that represent form\n     *  objects\n     * @param {string} [namespace='treeProps'] - the namespace of the property key in this observable. Whether a new namespace is created if a\n     *  non-existent namespace is passed is implementation dependent. I throw a ReferenceError because I don't want new namespaces\n     * @returns {undefined}\n     */\n    setProperty(observables, propertyKey, propertyValue, namespace='treeProps') {\n        if (!(observables instanceof Array)) {\n            throw TypeError('\"observables\" argument must be instanceof Array.');\n        }\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be a string.');\n        }\n        if (typeof namespace !== 'string') {\n            throw TypeError('\"namespace\" argument must be a string.');\n        }\n        observables.forEach(ob => {\n            ob.setProperty(propertyKey, propertyValue, namespace); \n            const obKey = ob.getProperty('treeKey', 'meta');\n            if (['from', 'to'].includes(propertyKey)) {\n                if (ob.isComponentFeature()) {\n                    // - Do nothing. There's no need to set the coordinates of a component line that hasn't been inserted yet\n                } else {\n                    const fromKey = this.observableGraph.getKey(ob.getProperty('from'), obKey);\n                    const toKey = this.observableGraph.getKey(ob.getProperty('to'), obKey);\n                    const { sourceLat, sourceLon, targetLat, targetLon } = this.observableGraph.getLineLatLon(fromKey, toKey);\n                    ob.setCoordinates([[sourceLon, sourceLat], [targetLon, targetLat]]);\n                }\n            } \n            if (propertyKey === 'parent') {\n                if (ob.isComponentFeature()) {\n                    // - Do nothing. Child components don't yet have a parent-child line\n                } else {\n                    const fromKey = this.observableGraph.getKey(ob.getProperty('parent'), obKey);\n                    const toKey = obKey;\n                    const { sourceLat, sourceLon, targetLat, targetLon } = this.observableGraph.getLineLatLon(fromKey, toKey);\n                    const parentChildLine = this.observableGraph.getParentChildLine(obKey);\n                    parentChildLine.setCoordinates([[sourceLon, sourceLat], [targetLon, targetLat]]);\n                }\n            } \n        });\n        // - <FeatureGraph>.handleUpdatedProperty() no longer marks nodes as visited, so I don't need to undo that here\n        //this.observableGraph.markNodesAsUnvisited();\n    }\n    \n    // ********************\n    // ** Public methods **\n    // ********************\n\n    /**\n     * - Send an AJAX request to the server\n     * @param {Feature} observable - the ObservableInterface instance to submit\n     * @param {ModalFeatureModal} modal\n     * @param {HTMLButtonElement} submitButton - a button to enable/disable depending on the state of the operation\n     * @param {boolean} reload - whether or not to reload the page. This is necessary when chaining multiple operations together (e.g. every rename\n     * operation must be preceeded by a save operation)\n     * @returns {undefined}\n     */\n    async submitFeature(observable, modal, submitButton=null, reload=true) {\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature.');\n        }\n        if (!(modal instanceof Modal)) {\n            throw TypeError('\"modal\" argument must be instanceof Modal.');\n        }\n        if (!(submitButton instanceof HTMLButtonElement) && !(submitButton === null)) {\n            throw TypeError('\"submitButton\" argument must be instanceof HTMLButtonElement or null');\n        }\n        if (typeof reload !== 'boolean') {\n            throw TypeError('\"reload\" argument must be a boolean.');\n        }\n        if (submitButton !== null) {\n            submitButton.disabled = true;\n        }\n        const modalInsert = document.getElementById('modalInsert');\n        let data;\n        if (observable.hasProperty('fileExistsUrl', 'urlProps')) {\n            try {\n                data = await $.ajax({\n                    type: observable.getProperty('fileExistsUrl', 'urlProps').method,\n                    url: observable.getProperty('fileExistsUrl', 'urlProps').url\n                });\n                switch (observable.getProperty('treeKey', 'meta')) {\n                    case 'modal:rename':\n                    case 'modal:opendss':\n                    case 'modal:windmil':\n                    case 'modal:cymdist':\n                    case 'modal:gridlabd':\n                        if (data.exists === true) {\n                            modal.showProgress(false, 'You already have a feeder with that name. Please choose a different name', ['caution']);\n                            if (submitButton !== null) {\n                                submitButton.disabled = false;\n                            }\n                            modalInsert.addEventListener('click', hideModalInsert);\n                            return;\n                        }\n                        break;\n                    case 'modal:loadFeeder':\n                        // - I do this to assert that data.exists is equal to true, not that it is truthy. There's an important difference\n                        if (data.exists === true) {\n                            modal.showProgress(true, 'Loading feeder from the server...', ['caution']);\n                            break;\n                        }\n                    default:\n                        if (data.exists !== true) {\n                            modal.showProgress(false, 'This feeder no longer exists on the server, so the operation failed. Please save and try again.', ['caution']);\n                            if (submitButton !== null) {\n                                submitButton.disabled = false;\n                            }\n                            modalInsert.addEventListener('click', hideModalInsert);\n                        }\n                }\n            } catch {\n                modal.showProgress(false, 'The server raised an internal exception during the operation. Please save before trying again.', ['caution']); \n                if (submitButton !== null) {\n                    submitButton.disabled = false;\n                }\n                modalInsert.addEventListener('click', hideModalInsert);\n                return;\n            }\n        }\n        const formData = new FormData(); \n        if (observable.hasProperty('formProps', 'meta')) {\n            for (const [key, val] of Object.entries(observable.getProperties('formProps'))) {\n                formData.set(key, val);\n            };\n        }\n        try {\n            data = await $.ajax({\n                type: observable.getProperty('submitUrl', 'urlProps').method,\n                url: observable.getProperty('submitUrl', 'urlProps').url,\n                data: formData,\n                processData: false,\n                contentType: false,\n            });\n        } catch {\n            modal.showProgress(false, 'The server raised an internal exception during the operation. Please save before trying again.', ['caution']); \n            if (submitButton !== null) {\n                submitButton.disabled = false;\n            }\n            modalInsert.addEventListener('click', hideModalInsert);\n            return;\n        }\n        const that = this;\n        // - We don't want to poll the server. Just reload the page.\n        if (!observable.hasProperty('pollUrl', 'urlProps')) {\n            if (data === 'Failure') {\n                modal.showProgress(false, 'The server operation failed.', ['caution']);\n                if (submitButton !== null) {\n                    submitButton.disabled = false;\n                }\n                modalInsert.addEventListener('click', hideModalInsert);\n            } else {\n                if (reload) {\n                    that.#reloadPage();\n                } else {\n                    document.getElementById('modalInsert').classList.remove('visible');\n                    if (submitButton !== null) {\n                        submitButton.disabled = false;\n                    }\n                    modalInsert.addEventListener('click', hideModalInsert);\n                }\n            }\n        } else {\n            const intervalId = setInterval(async function() {\n                try {\n                    data = await $.ajax({\n                        type: observable.getProperty('pollUrl', 'urlProps').method,\n                        url: observable.getProperty('pollUrl', 'urlProps').url\n                    });\n                    // - The server process ID file no longer exists, so the server operation completed successfully\n                    if (data.exists === false) {\n                        clearInterval(intervalId);\n                        if (reload) {\n                            that.#reloadPage();\n                        } else {\n                            document.getElementById('modalInsert').classList.remove('visible');\n                            if (submitButton !== null) {\n                                submitButton.disabled = false;\n                            }\n                            modalInsert.addEventListener('click', hideModalInsert);\n                        }\n                    } else if (data.exists === undefined) {\n                        clearInterval(intervalId);\n                        if (submitButton !== null) {\n                            submitButton.disabled = false;\n                        }\n                        modalInsert.addEventListener('click', hideModalInsert);\n                        if (data === 'milError') {\n                            modal.showProgress(false, 'The .std and .seq files used were incorrectly formatted. Please save before trying again.', ['caution']);\n                        } else if (data === 'dssError') {\n                            modal.showProgress(false, 'The .dss file used was incorrectly formatted. Please save before trying again.', ['caution']);\n                        } else if (data === 'cymeError') {\n                            modal.showProgress(false, 'The .mdb file used was incorrectly formatted. Please save before trying again.', ['caution']);\n                        } else if (data === 'glmError') {\n                            modal.showProgress(false, 'The .glm file used was incorrectly formatted. Please save before trying again.', ['caution']);\n                        } else if (data === 'amiError') {\n                            modal.showProgress(false, 'The AMI file used was incorrectly formatted. Please save before trying again.', ['caution']);\n                        } else if (data === 'anonymizeError') {\n                            modal.showProgress(false, 'The anonymization process failed. Please save before trying again.', ['caution']);\n                        } else {\n                            if (!data.endsWith('.')) {\n                                data += '.';\n                            }\n                            data += ' Please save before trying again.';\n                            modal.showProgress(false, data, ['caution']);\n                        }\n                    // - The server process is ongoing, so let setInterval keep going\n                    } else if (data.exists === true) {\n                        // - Do nothing\n                    } else {\n                        if (submitButton !== null) {\n                            submitButton.disabled = false;\n                        }\n                        modalInsert.addEventListener('click', hideModalInsert);\n                        throw Error('Undefined value returned by server during the polling process.');\n                    }\n                } catch {\n                    clearInterval(intervalId);\n                    modal.showProgress(false, 'The server raised an internal exception during the operation. Please save before trying again.', ['caution']);\n                    if (submitButton !== null) {\n                        submitButton.disabled = false;\n                    }\n                    modalInsert.addEventListener('click', hideModalInsert);\n                    return;\n                }\n            }, 10000);\n        }\n    }\n\n    // *********************\n    // ** Private methods ** \n    // *********************\n\n    /**\n     * - Force the client to always request new files from the server without using the browser cache.\n     */\n    #reloadPage() {\n        window.location.reload(true);\n        //console.log('Reloaded page');\n    }\n}\n</script>\n<script>\n\"use strict\";\n\n/**\n * - Each LeafletLayer instance is a view in the MVC pattern. Each observes an ObservableInterface instance, which is part of the model in the MVC\n *   pattern. An ObservableInterface instance does NOT observe a LeafletLayer instance. Instead, a LeafletLayer instance uses the controller to pass\n *   its own changes to the underlying ObservableInterface instance\n */\nclass LeafletLayer { // implements ObserverInterface\n    #controller;    // ControllerInterface instance\n    #layer;         // - Leaflet layer\n    #observable;    // - ObservableInterface instance\n    static map;\n    static control;\n    static nodeLayers = L.featureGroup();\n    static lineLayers = L.featureGroup();\n    static parentChildLineLayers = L.featureGroup();\n\n    /**\n     * @param {Feature} observable - an ObservableInterface instance\n     * @param {FeatureController} controller - a ControllerInterface instance\n     * @returns {undefined}\n     */\n    constructor(observable, controller) {\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instance of Feature.');\n        }\n        if (!(controller instanceof FeatureController)) {\n            throw Error('\"controller\" argument must be an instance of FeatureController.');\n        }\n        this.#controller = controller;\n        this.#observable = observable;\n        // - Here, the first observer is added to every visible feature\n        this.#observable.registerObserver(this);\n        const feature = {'type': 'Feature', 'geometry': {}};\n        if (this.#observable.isNode()) {\n            feature.geometry.type = 'Point';\n        } else if (this.#observable.isLine()) {\n            feature.geometry.type = 'LineString';\n        } else if (this.#observable.isPolygon()) {\n            feature.geometry.type = 'Polygon';\n        } else if (this.#observable.isMultiPoint()) {\n            feature.geometry.type = 'MultiPoint';\n        } else if (this.#observable.isMultiLineString()) {\n            feature.geometry.type = 'MultiLineString';\n        } else if (this.#observable.isMultiPolygon()) {\n            feature.geometry.type = 'MultiPolygon';\n        } else {\n            throw Error('The observable does not reference a valid GeoJSON feature (is it a configuration object or GeometryCollection?)');\n        }\n        feature.geometry.coordinates = structuredClone(this.#observable.getCoordinates());\n        feature.properties = structuredClone(this.#observable.getProperties('meta'));\n        // - L.geoJSON() returns an instance of https://leafletjs.com/reference.html#geojson\n        //  - A GeoJSON object extends FeatureGroup which extends LayerGroup which extends Layer\n        //  - Therefore, a GeoJSON object can contain one or more layers\n        //  - Access the underlying layer(s) with <GeoJSON>._layers, which is a map (i.e. object) that maps layer ids to actual layer objects\n        this.#layer = L.geoJSON(feature, {\n            pointToLayer: this.#pointToLayer.bind(this), \n            style: this.#styleNonPointFeatures.bind(this)\n        });\n        if (this.#observable.isNode() || this.#observable.isLine() || this.#observable.isPolygon() || this.#observable.isMultiPolygon()) {\n            const layer = Object.values(this.#layer._layers)[0];\n            let featureEditModal;\n            layer.bindPopup(() => {\n                featureEditModal = new FeatureEditModal([this.#observable], controller);\n                return featureEditModal.getDOMElement();\n            });\n            this.#layer.addEventListener('popupclose', () => this.#observable.removeObserver(featureEditModal));\n        }\n    }\n\n    // *******************************\n    // ** ObserverInterface methods ** \n    // *******************************\n\n    /**\n     * - Remove this ObserverInterface instance (i.e. \"this\") from the ObservableInterface instance (i.e. \"observable\") that has been deleted, and\n     *   perform other actions as needed\n     *  - E.g. delete this layer if its underlying feature was deleted\n     * @param {Object} observable - an instance of ObservableInterface that this Observer is observing\n     * @returns {undefined}\n     */\n    handleDeletedObservable(observable) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        observable.removeObserver(this);\n        const layer = Object.values(this.#layer._layers)[0]; \n        // - Why does this also delete the FeatureEditModal in the pop-up? I don't know but I have to deal with it\n        layer.remove();\n        // - Need to explicitly remove the underlying layer from its LayerGroup\n        if (observable.isNode()) {\n            LeafletLayer.nodeLayers.removeLayer(this.#layer);\n        } else if (observable.isLine()) {\n            if (observable.isParentChildLine()) {\n                LeafletLayer.parentChildLineLayers.removeLayer(this.#layer);\n            } else {\n                LeafletLayer.lineLayers.removeLayer(this.#layer);\n            }\n        } else if (observable.isPolygon()) {\n            // - Do nothing for now\n        } else if (observable.isMultiPoint()) {\n            // - Do nothing for now\n        } else if (observable.isMultiLineString()) {\n            // - Do nothing for now\n        } else if (observable.isMultiPolygon()) {\n            // - Do nothing for now\n        } else {\n            throw Error('The observable does not reference a valid GeoJSON feature (is it a configuration object or GeometryCollection?)');\n        }\n    }\n\n    /**\n     * - Update this ObserverInterface instance (i.e. \"this\") based on the coordinates of the ObservableInterface instance (i.e. \"observable\") that\n     *   have just changed and perform other actions as needed\n     *  - E.g. update this layer's coordinates if the coordinates of the underlying feature changed\n     * @param {Object} observable - an instance of ObservableInterface that this Observer is observing\n     * @param {Array} oldCoordinates - the old coordinates of the observable prior to the change in coordinates\n     * @param {Array} visited - an array of ObserverInterface instances. It's required to prevent infinite recursion caused by Observers updating each\n     * other\n     * @returns {undefined}\n     */\n    handleUpdatedCoordinates(observable, oldCoordinates) {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (!(oldCoordinates instanceof Array)) {\n            throw TypeError('\"oldCoordinates\" argument must be an array.')\n        }\n        const coordinates = observable.getCoordinates();\n        if (observable.isNode()) {\n            // - Object.values(this.<GeoJSON>.<mapping object>)[0] === <Layer>\n            Object.values(this.#layer._layers)[0].setLatLng([coordinates[1], coordinates[0]]);\n        } else {\n            Object.values(this.#layer._layers)[0].setLatLngs([[coordinates[0][1], coordinates[0][0]],[coordinates[1][1], coordinates[1][0]]]);\n        }\n    }\n\n    /**\n     * - Update this ObserverInstance (i.e. \"this\") based on the property of the ObservableInterface instance (i.e. \"observable\") that has just\n     *   changed and perform other actions as needed\n     *  - E.g. update this line's \"to\" and/or \"from\" property to match the \"name\" property of the node that was just changed\n     * @param {Object} observable - the observable that this observer is observing\n     * @param {string} propertyKey - the property key of the property that has been created/changed/deleted in the observable\n     * @param {(string|Object)} oldPropertyValue - the previous value of the property that has been created/changed/deleted in the observable\n     * @param {string} namespace - the namespace of the property that has been created/changed/deleted in the observable\n     * @returns {undefined}\n     */\n    handleUpdatedProperty(observable, propertyKey, oldPropertyValue, namespace='treeProps') {\n        // - The function signature above is part of the ObserverInterface API. The implementation below is not\n        if (typeof propertyKey !== 'string') {\n            throw TypeError('\"propertyKey\" argument must be a string.');\n        }\n        if (typeof namespace !== 'string') {\n            throw TypeError('\"namespace\" argument must be a string.');\n        }\n    }\n\n    // ********************\n    // ** Public methods **\n    // ********************\n\n    /**\n     * - Creating a LeafletLayer with the constructor does not automatically add the underlying layer to a layer group by design. This function must\n     *   be called explicitly, or LayerGroups must be managed outside of this function\n     * @param {LeafletLayer} - layer\n     * @returns {undefined}\n     */\n    static createAndGroupLayer(observable, controller) {\n        if (!(observable instanceof Feature)) {\n            throw TypeError('\"observable\" argument must be instanceof Feature.');\n        }\n        if (!(controller instanceof FeatureController)) {\n            throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n        }\n        const ll = new LeafletLayer(observable, controller);\n        if (observable.isNode()) {\n            LeafletLayer.nodeLayers.addLayer(ll.getLayer());\n        } else if (observable.isLine()) {\n            if (observable.isParentChildLine()) {\n                LeafletLayer.parentChildLineLayers.addLayer(ll.getLayer());\n            } else {\n                LeafletLayer.lineLayers.addLayer(ll.getLayer());\n            }\n        } else if (observable.isPolygon()) {\n            // - Do nothing for now\n        } else if (observable.isMultiPoint()) {\n            // - Do nothing for now\n        } else if (observable.isMultiLineString()) {\n            // - Do nothing for now\n        } else if (observable.isMultiPolygon()) {\n            // - Do nothing for now\n        } else {\n            throw Error('The observable does not reference a valid GeoJSON feature (is it a configuration object or GeometryCollection?)');\n        }\n    }\n\n    /**\n     * @returns {GeoJSON}\n     */\n    getLayer() {\n        return this.#layer;\n    }\n\n    // *********************\n    // ** Private methods ** \n    // *********************\n\n    #pointToLayer() {\n        let svgClass = 'gray';\n        // - TODO: verify pointColor works\n        if (this.#observable.hasProperty('pointColor')) {\n            svgClass = this.#observable.getProperty('pointColor');\n        } else if (this.#observable.hasProperty('object')) {\n            const object = this.#observable.getProperty('object');\n            if (object === 'capacitor') {\n                svgClass = 'purple';\n            }\n            if (object === 'generator') {\n                svgClass = 'red';\n            }\n            if (object == 'load') {\n                svgClass = 'blue';\n            }\n        }\n        const svgIcon = L.divIcon({\n            html: `<svg width=\"16\" height=\"16\" viewBox=\"-2 -2 20 20\">\n                <circle cx=\"8\" cy=\"8\" r=\"8\" stroke=\"black\"/>\n                </svg>`,\n            className: `svg--icon-${svgClass}`,\n            iconSize: [16, 16],\n          });\n        // - TODO: fix uneven panning speed\n        const coordinates = this.#observable.getCoordinates();\n        const marker = L.marker(\n            [coordinates[1], coordinates[0]], {\n            autoPan: true,\n            draggable: true,\n            icon: svgIcon \n        });\n        const that = this;\n        marker.on('drag', function(e) {\n            const {lat, lng} = e.target.getLatLng();\n            that.#controller.setCoordinates([that.#observable], [lng, lat]);\n        });\n        return marker;\n    }\n\n    #styleNonPointFeatures() {\n        if (this.#observable.isLine()) {\n            if (this.#observable.hasProperty('edgeColor')) {\n                return {\n                    color: this.#observable.getProperty('edgeColor')\n                }\n            } else if (this.#observable.hasProperty('object') && this.#observable.getProperty('object') === 'transformer') {\n                return {\n                    color: 'orange'\n                }\n            } else if (this.#observable.hasProperty('object') && this.#observable.getProperty('object') === 'regulator') {\n                return {\n                    color: 'red'\n                }\n            } else if (this.#observable.hasProperty('object') && this.#observable.getProperty('object') === 'underground_line') {\n                return {\n                    color: 'gray'\n                }\n            } else if (this.#observable.isParentChildLine()) {\n                return {\n                    color: 'black',\n                    // - Dashed lines are only useful if the child is reasonably far from the parent, so I need other differences in style\n                    dashArray: '.5 10',\n                    lineCap: 'square',\n                    weight: '3'\n                }\n            } else {\n                return {\n                    color: 'black'\n                }\n            }\n        } else {\n            return {\n                color: 'blue'\n            }\n        }\n    }\n}\n</script>\n<script>\n\"use strict\";\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=\"undefined\"!=typeof globalThis?globalThis:t||self).graphology=e()}(this,(function(){\"use strict\";function t(e){return t=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},t(e)}function e(t,e){t.prototype=Object.create(e.prototype),t.prototype.constructor=t,r(t,e)}function n(t){return n=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},n(t)}function r(t,e){return r=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,e){return t.__proto__=e,t},r(t,e)}function i(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}function o(t,e,n){return o=i()?Reflect.construct.bind():function(t,e,n){var i=[null];i.push.apply(i,e);var o=new(Function.bind.apply(t,i));return n&&r(o,n.prototype),o},o.apply(null,arguments)}function a(t){var e=\"function\"==typeof Map?new Map:void 0;return a=function(t){if(null===t||(i=t,-1===Function.toString.call(i).indexOf(\"[native code]\")))return t;var i;if(\"function\"!=typeof t)throw new TypeError(\"Super expression must either be null or a function\");if(void 0!==e){if(e.has(t))return e.get(t);e.set(t,a)}function a(){return o(t,arguments,n(this).constructor)}return a.prototype=Object.create(t.prototype,{constructor:{value:a,enumerable:!1,writable:!0,configurable:!0}}),r(a,t)},a(t)}function c(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}var u=function(){for(var t=arguments[0],e=1,n=arguments.length;e<n;e++)if(arguments[e])for(var r in arguments[e])t[r]=arguments[e][r];return t};function d(t,e,n,r){var i=t._nodes.get(e),o=null;return i?o=\"mixed\"===r?i.out&&i.out[n]||i.undirected&&i.undirected[n]:\"directed\"===r?i.out&&i.out[n]:i.undirected&&i.undirected[n]:o}function s(e){return\"object\"===t(e)&&null!==e&&e.constructor===Object}function h(t){var e;for(e in t)return!1;return!0}function p(t,e,n){Object.defineProperty(t,e,{enumerable:!1,configurable:!1,writable:!0,value:n})}function f(t,e,n){var r={enumerable:!0,configurable:!0};\"function\"==typeof n?r.get=n:(r.value=n,r.writable=!1),Object.defineProperty(t,e,r)}function l(t){return!!s(t)&&!(t.attributes&&!Array.isArray(t.attributes))}\"function\"==typeof Object.assign&&(u=Object.assign);var g,y={exports:{}},w=\"object\"==typeof Reflect?Reflect:null,v=w&&\"function\"==typeof w.apply?w.apply:function(t,e,n){return Function.prototype.apply.call(t,e,n)};g=w&&\"function\"==typeof w.ownKeys?w.ownKeys:Object.getOwnPropertySymbols?function(t){return Object.getOwnPropertyNames(t).concat(Object.getOwnPropertySymbols(t))}:function(t){return Object.getOwnPropertyNames(t)};var b=Number.isNaN||function(t){return t!=t};function m(){m.init.call(this)}y.exports=m,y.exports.once=function(t,e){return new Promise((function(n,r){function i(n){t.removeListener(e,o),r(n)}function o(){\"function\"==typeof t.removeListener&&t.removeListener(\"error\",i),n([].slice.call(arguments))}U(t,e,o,{once:!0}),\"error\"!==e&&function(t,e,n){\"function\"==typeof t.on&&U(t,\"error\",e,n)}(t,i,{once:!0})}))},m.EventEmitter=m,m.prototype._events=void 0,m.prototype._eventsCount=0,m.prototype._maxListeners=void 0;var k=10;function _(t){if(\"function\"!=typeof t)throw new TypeError('The \"listener\" argument must be of type Function. Received type '+typeof t)}function G(t){return void 0===t._maxListeners?m.defaultMaxListeners:t._maxListeners}function x(t,e,n,r){var i,o,a,c;if(_(n),void 0===(o=t._events)?(o=t._events=Object.create(null),t._eventsCount=0):(void 0!==o.newListener&&(t.emit(\"newListener\",e,n.listener?n.listener:n),o=t._events),a=o[e]),void 0===a)a=o[e]=n,++t._eventsCount;else if(\"function\"==typeof a?a=o[e]=r?[n,a]:[a,n]:r?a.unshift(n):a.push(n),(i=G(t))>0&&a.length>i&&!a.warned){a.warned=!0;var u=new Error(\"Possible EventEmitter memory leak detected. \"+a.length+\" \"+String(e)+\" listeners added. Use emitter.setMaxListeners() to increase limit\");u.name=\"MaxListenersExceededWarning\",u.emitter=t,u.type=e,u.count=a.length,c=u,console&&console.warn&&console.warn(c)}return t}function E(){if(!this.fired)return this.target.removeListener(this.type,this.wrapFn),this.fired=!0,0===arguments.length?this.listener.call(this.target):this.listener.apply(this.target,arguments)}function A(t,e,n){var r={fired:!1,wrapFn:void 0,target:t,type:e,listener:n},i=E.bind(r);return i.listener=n,r.wrapFn=i,i}function L(t,e,n){var r=t._events;if(void 0===r)return[];var i=r[e];return void 0===i?[]:\"function\"==typeof i?n?[i.listener||i]:[i]:n?function(t){for(var e=new Array(t.length),n=0;n<e.length;++n)e[n]=t[n].listener||t[n];return e}(i):D(i,i.length)}function S(t){var e=this._events;if(void 0!==e){var n=e[t];if(\"function\"==typeof n)return 1;if(void 0!==n)return n.length}return 0}function D(t,e){for(var n=new Array(e),r=0;r<e;++r)n[r]=t[r];return n}function U(t,e,n,r){if(\"function\"==typeof t.on)r.once?t.once(e,n):t.on(e,n);else{if(\"function\"!=typeof t.addEventListener)throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type '+typeof t);t.addEventListener(e,(function i(o){r.once&&t.removeEventListener(e,i),n(o)}))}}function N(t){if(\"function\"!=typeof t)throw new Error(\"obliterator/iterator: expecting a function!\");this.next=t}Object.defineProperty(m,\"defaultMaxListeners\",{enumerable:!0,get:function(){return k},set:function(t){if(\"number\"!=typeof t||t<0||b(t))throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received '+t+\".\");k=t}}),m.init=function(){void 0!==this._events&&this._events!==Object.getPrototypeOf(this)._events||(this._events=Object.create(null),this._eventsCount=0),this._maxListeners=this._maxListeners||void 0},m.prototype.setMaxListeners=function(t){if(\"number\"!=typeof t||t<0||b(t))throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received '+t+\".\");return this._maxListeners=t,this},m.prototype.getMaxListeners=function(){return G(this)},m.prototype.emit=function(t){for(var e=[],n=1;n<arguments.length;n++)e.push(arguments[n]);var r=\"error\"===t,i=this._events;if(void 0!==i)r=r&&void 0===i.error;else if(!r)return!1;if(r){var o;if(e.length>0&&(o=e[0]),o instanceof Error)throw o;var a=new Error(\"Unhandled error.\"+(o?\" (\"+o.message+\")\":\"\"));throw a.context=o,a}var c=i[t];if(void 0===c)return!1;if(\"function\"==typeof c)v(c,this,e);else{var u=c.length,d=D(c,u);for(n=0;n<u;++n)v(d[n],this,e)}return!0},m.prototype.addListener=function(t,e){return x(this,t,e,!1)},m.prototype.on=m.prototype.addListener,m.prototype.prependListener=function(t,e){return x(this,t,e,!0)},m.prototype.once=function(t,e){return _(e),this.on(t,A(this,t,e)),this},m.prototype.prependOnceListener=function(t,e){return _(e),this.prependListener(t,A(this,t,e)),this},m.prototype.removeListener=function(t,e){var n,r,i,o,a;if(_(e),void 0===(r=this._events))return this;if(void 0===(n=r[t]))return this;if(n===e||n.listener===e)0==--this._eventsCount?this._events=Object.create(null):(delete r[t],r.removeListener&&this.emit(\"removeListener\",t,n.listener||e));else if(\"function\"!=typeof n){for(i=-1,o=n.length-1;o>=0;o--)if(n[o]===e||n[o].listener===e){a=n[o].listener,i=o;break}if(i<0)return this;0===i?n.shift():function(t,e){for(;e+1<t.length;e++)t[e]=t[e+1];t.pop()}(n,i),1===n.length&&(r[t]=n[0]),void 0!==r.removeListener&&this.emit(\"removeListener\",t,a||e)}return this},m.prototype.off=m.prototype.removeListener,m.prototype.removeAllListeners=function(t){var e,n,r;if(void 0===(n=this._events))return this;if(void 0===n.removeListener)return 0===arguments.length?(this._events=Object.create(null),this._eventsCount=0):void 0!==n[t]&&(0==--this._eventsCount?this._events=Object.create(null):delete n[t]),this;if(0===arguments.length){var i,o=Object.keys(n);for(r=0;r<o.length;++r)\"removeListener\"!==(i=o[r])&&this.removeAllListeners(i);return this.removeAllListeners(\"removeListener\"),this._events=Object.create(null),this._eventsCount=0,this}if(\"function\"==typeof(e=n[t]))this.removeListener(t,e);else if(void 0!==e)for(r=e.length-1;r>=0;r--)this.removeListener(t,e[r]);return this},m.prototype.listeners=function(t){return L(this,t,!0)},m.prototype.rawListeners=function(t){return L(this,t,!1)},m.listenerCount=function(t,e){return\"function\"==typeof t.listenerCount?t.listenerCount(e):S.call(t,e)},m.prototype.listenerCount=S,m.prototype.eventNames=function(){return this._eventsCount>0?g(this._events):[]},\"undefined\"!=typeof Symbol&&(N.prototype[Symbol.iterator]=function(){return this}),N.of=function(){var t=arguments,e=t.length,n=0;return new N((function(){return n>=e?{done:!0}:{done:!1,value:t[n++]}}))},N.empty=function(){return new N((function(){return{done:!0}}))},N.fromSequence=function(t){var e=0,n=t.length;return new N((function(){return e>=n?{done:!0}:{done:!1,value:t[e++]}}))},N.is=function(t){return t instanceof N||\"object\"==typeof t&&null!==t&&\"function\"==typeof t.next};var O=N,j={};j.ARRAY_BUFFER_SUPPORT=\"undefined\"!=typeof ArrayBuffer,j.SYMBOL_SUPPORT=\"undefined\"!=typeof Symbol;var C=O,M=j,z=M.ARRAY_BUFFER_SUPPORT,W=M.SYMBOL_SUPPORT;var P=function(t){var e=function(t){return\"string\"==typeof t||Array.isArray(t)||z&&ArrayBuffer.isView(t)?C.fromSequence(t):\"object\"!=typeof t||null===t?null:W&&\"function\"==typeof t[Symbol.iterator]?t[Symbol.iterator]():\"function\"==typeof t.next?t:null}(t);if(!e)throw new Error(\"obliterator: target is not iterable nor a valid iterator.\");return e},R=P,K=function(t,e){for(var n,r=arguments.length>1?e:1/0,i=r!==1/0?new Array(r):[],o=0,a=R(t);;){if(o===r)return i;if((n=a.next()).done)return o!==e&&(i.length=o),i;i[o++]=n.value}},T=function(t){function n(e){var n;return(n=t.call(this)||this).name=\"GraphError\",n.message=e,n}return e(n,t),n}(a(Error)),B=function(t){function n(e){var r;return(r=t.call(this,e)||this).name=\"InvalidArgumentsGraphError\",\"function\"==typeof Error.captureStackTrace&&Error.captureStackTrace(c(r),n.prototype.constructor),r}return e(n,t),n}(T),F=function(t){function n(e){var r;return(r=t.call(this,e)||this).name=\"NotFoundGraphError\",\"function\"==typeof Error.captureStackTrace&&Error.captureStackTrace(c(r),n.prototype.constructor),r}return e(n,t),n}(T),I=function(t){function n(e){var r;return(r=t.call(this,e)||this).name=\"UsageGraphError\",\"function\"==typeof Error.captureStackTrace&&Error.captureStackTrace(c(r),n.prototype.constructor),r}return e(n,t),n}(T);function Y(t,e){this.key=t,this.attributes=e,this.clear()}function q(t,e){this.key=t,this.attributes=e,this.clear()}function J(t,e){this.key=t,this.attributes=e,this.clear()}function V(t,e,n,r,i){this.key=e,this.attributes=i,this.undirected=t,this.source=n,this.target=r}Y.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.undirectedDegree=0,this.undirectedLoops=0,this.directedLoops=0,this.in={},this.out={},this.undirected={}},q.prototype.clear=function(){this.inDegree=0,this.outDegree=0,this.directedLoops=0,this.in={},this.out={}},J.prototype.clear=function(){this.undirectedDegree=0,this.undirectedLoops=0,this.undirected={}},V.prototype.attach=function(){var t=\"out\",e=\"in\";this.undirected&&(t=e=\"undirected\");var n=this.source.key,r=this.target.key;this.source[t][r]=this,this.undirected&&n===r||(this.target[e][n]=this)},V.prototype.attachMulti=function(){var t=\"out\",e=\"in\",n=this.source.key,r=this.target.key;this.undirected&&(t=e=\"undirected\");var i=this.source[t],o=i[r];if(void 0===o)return i[r]=this,void(this.undirected&&n===r||(this.target[e][n]=this));o.previous=this,this.next=o,i[r]=this,this.target[e][n]=this},V.prototype.detach=function(){var t=this.source.key,e=this.target.key,n=\"out\",r=\"in\";this.undirected&&(n=r=\"undirected\"),delete this.source[n][e],delete this.target[r][t]},V.prototype.detachMulti=function(){var t=this.source.key,e=this.target.key,n=\"out\",r=\"in\";this.undirected&&(n=r=\"undirected\"),void 0===this.previous?void 0===this.next?(delete this.source[n][e],delete this.target[r][t]):(this.next.previous=void 0,this.source[n][e]=this.next,this.target[r][t]=this.next):(this.previous.next=this.next,void 0!==this.next&&(this.next.previous=this.previous))};function H(t,e,n,r,i,o,a){var c,u,d,s;if(r=\"\"+r,0===n){if(!(c=t._nodes.get(r)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(r,'\" node in the graph.'));d=i,s=o}else if(3===n){if(i=\"\"+i,!(u=t._edges.get(i)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(i,'\" edge in the graph.'));var h=u.source.key,p=u.target.key;if(r===h)c=u.target;else{if(r!==p)throw new F(\"Graph.\".concat(e,': the \"').concat(r,'\" node is not attached to the \"').concat(i,'\" edge (').concat(h,\", \").concat(p,\").\"));c=u.source}d=o,s=a}else{if(!(u=t._edges.get(r)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(r,'\" edge in the graph.'));c=1===n?u.source:u.target,d=i,s=o}return[c,d,s]}var Q=[{name:function(t){return\"get\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];return a.attributes[c]}}},{name:function(t){return\"get\".concat(t,\"Attributes\")},attacher:function(t,e,n){t.prototype[e]=function(t,r){return H(this,e,n,t,r)[0].attributes}}},{name:function(t){return\"has\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];return a.attributes.hasOwnProperty(c)}}},{name:function(t){return\"set\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i,o){var a=H(this,e,n,t,r,i,o),c=a[0],u=a[1],d=a[2];return c.attributes[u]=d,this.emit(\"nodeAttributesUpdated\",{key:c.key,type:\"set\",attributes:c.attributes,name:u}),this}}},{name:function(t){return\"update\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i,o){var a=H(this,e,n,t,r,i,o),c=a[0],u=a[1],d=a[2];if(\"function\"!=typeof d)throw new B(\"Graph.\".concat(e,\": updater should be a function.\"));var s=c.attributes,h=d(s[u]);return s[u]=h,this.emit(\"nodeAttributesUpdated\",{key:c.key,type:\"set\",attributes:c.attributes,name:u}),this}}},{name:function(t){return\"remove\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];return delete a.attributes[c],this.emit(\"nodeAttributesUpdated\",{key:a.key,type:\"remove\",attributes:a.attributes,name:c}),this}}},{name:function(t){return\"replace\".concat(t,\"Attributes\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];if(!s(c))throw new B(\"Graph.\".concat(e,\": provided attributes are not a plain object.\"));return a.attributes=c,this.emit(\"nodeAttributesUpdated\",{key:a.key,type:\"replace\",attributes:a.attributes}),this}}},{name:function(t){return\"merge\".concat(t,\"Attributes\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];if(!s(c))throw new B(\"Graph.\".concat(e,\": provided attributes are not a plain object.\"));return u(a.attributes,c),this.emit(\"nodeAttributesUpdated\",{key:a.key,type:\"merge\",attributes:a.attributes,data:c}),this}}},{name:function(t){return\"update\".concat(t,\"Attributes\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o=H(this,e,n,t,r,i),a=o[0],c=o[1];if(\"function\"!=typeof c)throw new B(\"Graph.\".concat(e,\": provided updater is not a function.\"));return a.attributes=c(a.attributes),this.emit(\"nodeAttributesUpdated\",{key:a.key,type:\"update\",attributes:a.attributes}),this}}}];var X=[{name:function(t){return\"get\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var o=\"\"+t,a=\"\"+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(o,'\" - \"').concat(a,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(i=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}return i.attributes[r]}}},{name:function(t){return\"get\".concat(t,\"Attributes\")},attacher:function(t,e,n){t.prototype[e]=function(t){var r;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>1){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var i=\"\"+t,o=\"\"+arguments[1];if(!(r=d(this,i,o,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(i,'\" - \"').concat(o,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(r=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}return r.attributes}}},{name:function(t){return\"has\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var o=\"\"+t,a=\"\"+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(o,'\" - \"').concat(a,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(i=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}return i.attributes.hasOwnProperty(r)}}},{name:function(t){return\"set\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>3){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var a=\"\"+t,c=\"\"+r;if(r=arguments[2],i=arguments[3],!(o=d(this,a,c,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(a,'\" - \"').concat(c,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(o=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}return o.attributes[r]=i,this.emit(\"edgeAttributesUpdated\",{key:o.key,type:\"set\",attributes:o.attributes,name:r}),this}}},{name:function(t){return\"update\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r,i){var o;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>3){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var a=\"\"+t,c=\"\"+r;if(r=arguments[2],i=arguments[3],!(o=d(this,a,c,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(a,'\" - \"').concat(c,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(o=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}if(\"function\"!=typeof i)throw new B(\"Graph.\".concat(e,\": updater should be a function.\"));return o.attributes[r]=i(o.attributes[r]),this.emit(\"edgeAttributesUpdated\",{key:o.key,type:\"set\",attributes:o.attributes,name:r}),this}}},{name:function(t){return\"remove\".concat(t,\"Attribute\")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var o=\"\"+t,a=\"\"+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(o,'\" - \"').concat(a,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(i=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}return delete i.attributes[r],this.emit(\"edgeAttributesUpdated\",{key:i.key,type:\"remove\",attributes:i.attributes,name:r}),this}}},{name:function(t){return\"replace\".concat(t,\"Attributes\")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var o=\"\"+t,a=\"\"+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(o,'\" - \"').concat(a,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(i=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}if(!s(r))throw new B(\"Graph.\".concat(e,\": provided attributes are not a plain object.\"));return i.attributes=r,this.emit(\"edgeAttributesUpdated\",{key:i.key,type:\"replace\",attributes:i.attributes}),this}}},{name:function(t){return\"merge\".concat(t,\"Attributes\")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var o=\"\"+t,a=\"\"+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(o,'\" - \"').concat(a,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(i=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}if(!s(r))throw new B(\"Graph.\".concat(e,\": provided attributes are not a plain object.\"));return u(i.attributes,r),this.emit(\"edgeAttributesUpdated\",{key:i.key,type:\"merge\",attributes:i.attributes,data:r}),this}}},{name:function(t){return\"update\".concat(t,\"Attributes\")},attacher:function(t,e,n){t.prototype[e]=function(t,r){var i;if(\"mixed\"!==this.type&&\"mixed\"!==n&&n!==this.type)throw new I(\"Graph.\".concat(e,\": cannot find this type of edges in your \").concat(this.type,\" graph.\"));if(arguments.length>2){if(this.multi)throw new I(\"Graph.\".concat(e,\": cannot use a {source,target} combo when asking about an edge's attributes in a MultiGraph since we cannot infer the one you want information about.\"));var o=\"\"+t,a=\"\"+r;if(r=arguments[2],!(i=d(this,o,a,n)))throw new F(\"Graph.\".concat(e,': could not find an edge for the given path (\"').concat(o,'\" - \"').concat(a,'\").'))}else{if(\"mixed\"!==n)throw new I(\"Graph.\".concat(e,\": calling this method with only a key (vs. a source and target) does not make sense since an edge with this key could have the other type.\"));if(t=\"\"+t,!(i=this._edges.get(t)))throw new F(\"Graph.\".concat(e,': could not find the \"').concat(t,'\" edge in the graph.'))}if(\"function\"!=typeof r)throw new B(\"Graph.\".concat(e,\": provided updater is not a function.\"));return i.attributes=r(i.attributes),this.emit(\"edgeAttributesUpdated\",{key:i.key,type:\"update\",attributes:i.attributes}),this}}}];var Z=O,$=P,tt=function(){var t=arguments,e=null,n=-1;return new Z((function(){for(var r=null;;){if(null===e){if(++n>=t.length)return{done:!0};e=$(t[n])}if(!0!==(r=e.next()).done)break;e=null}return r}))},et=[{name:\"edges\",type:\"mixed\"},{name:\"inEdges\",type:\"directed\",direction:\"in\"},{name:\"outEdges\",type:\"directed\",direction:\"out\"},{name:\"inboundEdges\",type:\"mixed\",direction:\"in\"},{name:\"outboundEdges\",type:\"mixed\",direction:\"out\"},{name:\"directedEdges\",type:\"directed\"},{name:\"undirectedEdges\",type:\"undirected\"}];function nt(t,e,n,r){var i=!1;for(var o in e)if(o!==r){var a=e[o];if(i=n(a.key,a.attributes,a.source.key,a.target.key,a.source.attributes,a.target.attributes,a.undirected),t&&i)return a.key}}function rt(t,e,n,r){var i,o,a,c=!1;for(var u in e)if(u!==r){i=e[u];do{if(o=i.source,a=i.target,c=n(i.key,i.attributes,o.key,a.key,o.attributes,a.attributes,i.undirected),t&&c)return i.key;i=i.next}while(void 0!==i)}}function it(t,e){var n,r=Object.keys(t),i=r.length,o=0;return new O((function(){do{if(n)n=n.next;else{if(o>=i)return{done:!0};var a=r[o++];if(a===e){n=void 0;continue}n=t[a]}}while(!n);return{done:!1,value:{edge:n.key,attributes:n.attributes,source:n.source.key,target:n.target.key,sourceAttributes:n.source.attributes,targetAttributes:n.target.attributes,undirected:n.undirected}}}))}function ot(t,e,n,r){var i=e[n];if(i){var o=i.source,a=i.target;return r(i.key,i.attributes,o.key,a.key,o.attributes,a.attributes,i.undirected)&&t?i.key:void 0}}function at(t,e,n,r){var i=e[n];if(i){var o=!1;do{if(o=r(i.key,i.attributes,i.source.key,i.target.key,i.source.attributes,i.target.attributes,i.undirected),t&&o)return i.key;i=i.next}while(void 0!==i)}}function ct(t,e){var n=t[e];return void 0!==n.next?new O((function(){if(!n)return{done:!0};var t={edge:n.key,attributes:n.attributes,source:n.source.key,target:n.target.key,sourceAttributes:n.source.attributes,targetAttributes:n.target.attributes,undirected:n.undirected};return n=n.next,{done:!1,value:t}})):O.of({edge:n.key,attributes:n.attributes,source:n.source.key,target:n.target.key,sourceAttributes:n.source.attributes,targetAttributes:n.target.attributes,undirected:n.undirected})}function ut(t,e){if(0===t.size)return[];if(\"mixed\"===e||e===t.type)return\"function\"==typeof Array.from?Array.from(t._edges.keys()):K(t._edges.keys(),t._edges.size);for(var n,r,i=\"undirected\"===e?t.undirectedSize:t.directedSize,o=new Array(i),a=\"undirected\"===e,c=t._edges.values(),u=0;!0!==(n=c.next()).done;)(r=n.value).undirected===a&&(o[u++]=r.key);return o}function dt(t,e,n,r){if(0!==e.size)for(var i,o,a=\"mixed\"!==n&&n!==e.type,c=\"undirected\"===n,u=!1,d=e._edges.values();!0!==(i=d.next()).done;)if(o=i.value,!a||o.undirected===c){var s=o,h=s.key,p=s.attributes,f=s.source,l=s.target;if(u=r(h,p,f.key,l.key,f.attributes,l.attributes,o.undirected),t&&u)return h}}function st(t,e){if(0===t.size)return O.empty();var n=\"mixed\"!==e&&e!==t.type,r=\"undirected\"===e,i=t._edges.values();return new O((function(){for(var t,e;;){if((t=i.next()).done)return t;if(e=t.value,!n||e.undirected===r)break}return{value:{edge:e.key,attributes:e.attributes,source:e.source.key,target:e.target.key,sourceAttributes:e.source.attributes,targetAttributes:e.target.attributes,undirected:e.undirected},done:!1}}))}function ht(t,e,n,r,i,o){var a,c=e?rt:nt;if(\"undirected\"!==n){if(\"out\"!==r&&(a=c(t,i.in,o),t&&a))return a;if(\"in\"!==r&&(a=c(t,i.out,o,r?void 0:i.key),t&&a))return a}if(\"directed\"!==n&&(a=c(t,i.undirected,o),t&&a))return a}function pt(t,e,n,r){var i=[];return ht(!1,t,e,n,r,(function(t){i.push(t)})),i}function ft(t,e,n){var r=O.empty();return\"undirected\"!==t&&(\"out\"!==e&&void 0!==n.in&&(r=tt(r,it(n.in))),\"in\"!==e&&void 0!==n.out&&(r=tt(r,it(n.out,e?void 0:n.key)))),\"directed\"!==t&&void 0!==n.undirected&&(r=tt(r,it(n.undirected))),r}function lt(t,e,n,r,i,o,a){var c,u=n?at:ot;if(\"undirected\"!==e){if(void 0!==i.in&&\"out\"!==r&&(c=u(t,i.in,o,a),t&&c))return c;if(void 0!==i.out&&\"in\"!==r&&(r||i.key!==o)&&(c=u(t,i.out,o,a),t&&c))return c}if(\"directed\"!==e&&void 0!==i.undirected&&(c=u(t,i.undirected,o,a),t&&c))return c}function gt(t,e,n,r,i){var o=[];return lt(!1,t,e,n,r,i,(function(t){o.push(t)})),o}function yt(t,e,n,r){var i=O.empty();return\"undirected\"!==t&&(void 0!==n.in&&\"out\"!==e&&r in n.in&&(i=tt(i,ct(n.in,r))),void 0!==n.out&&\"in\"!==e&&r in n.out&&(e||n.key!==r)&&(i=tt(i,ct(n.out,r)))),\"directed\"!==t&&void 0!==n.undirected&&r in n.undirected&&(i=tt(i,ct(n.undirected,r))),i}var wt=[{name:\"neighbors\",type:\"mixed\"},{name:\"inNeighbors\",type:\"directed\",direction:\"in\"},{name:\"outNeighbors\",type:\"directed\",direction:\"out\"},{name:\"inboundNeighbors\",type:\"mixed\",direction:\"in\"},{name:\"outboundNeighbors\",type:\"mixed\",direction:\"out\"},{name:\"directedNeighbors\",type:\"directed\"},{name:\"undirectedNeighbors\",type:\"undirected\"}];function vt(){this.A=null,this.B=null}function bt(t,e,n,r,i){for(var o in r){var a=r[o],c=a.source,u=a.target,d=c===n?u:c;if(!e||!e.has(d.key)){var s=i(d.key,d.attributes);if(t&&s)return d.key}}}function mt(t,e,n,r,i){if(\"mixed\"!==e){if(\"undirected\"===e)return bt(t,null,r,r.undirected,i);if(\"string\"==typeof n)return bt(t,null,r,r[n],i)}var o,a=new vt;if(\"undirected\"!==e){if(\"out\"!==n){if(o=bt(t,null,r,r.in,i),t&&o)return o;a.wrap(r.in)}if(\"in\"!==n){if(o=bt(t,a,r,r.out,i),t&&o)return o;a.wrap(r.out)}}if(\"directed\"!==e&&(o=bt(t,a,r,r.undirected,i),t&&o))return o}function kt(t,e,n){var r=Object.keys(n),i=r.length,o=0;return new O((function(){var a=null;do{if(o>=i)return t&&t.wrap(n),{done:!0};var c=n[r[o++]],u=c.source,d=c.target;a=u===e?d:u,t&&t.has(a.key)&&(a=null)}while(null===a);return{done:!1,value:{neighbor:a.key,attributes:a.attributes}}}))}function _t(t,e){var n=e.name,r=e.type,i=e.direction;t.prototype[n]=function(t){if(\"mixed\"!==r&&\"mixed\"!==this.type&&r!==this.type)return[];t=\"\"+t;var e=this._nodes.get(t);if(void 0===e)throw new F(\"Graph.\".concat(n,': could not find the \"').concat(t,'\" node in the graph.'));return function(t,e,n){if(\"mixed\"!==t){if(\"undirected\"===t)return Object.keys(n.undirected);if(\"string\"==typeof e)return Object.keys(n[e])}var r=[];return mt(!1,t,e,n,(function(t){r.push(t)})),r}(\"mixed\"===r?this.type:r,i,e)}}function Gt(t,e){var n=e.name,r=e.type,i=e.direction,o=n.slice(0,-1)+\"Entries\";t.prototype[o]=function(t){if(\"mixed\"!==r&&\"mixed\"!==this.type&&r!==this.type)return O.empty();t=\"\"+t;var e=this._nodes.get(t);if(void 0===e)throw new F(\"Graph.\".concat(o,': could not find the \"').concat(t,'\" node in the graph.'));return function(t,e,n){if(\"mixed\"!==t){if(\"undirected\"===t)return kt(null,n,n.undirected);if(\"string\"==typeof e)return kt(null,n,n[e])}var r=O.empty(),i=new vt;return\"undirected\"!==t&&(\"out\"!==e&&(r=tt(r,kt(i,n,n.in))),\"in\"!==e&&(r=tt(r,kt(i,n,n.out)))),\"directed\"!==t&&(r=tt(r,kt(i,n,n.undirected))),r}(\"mixed\"===r?this.type:r,i,e)}}function xt(t,e,n,r,i){for(var o,a,c,u,d,s,h,p=r._nodes.values(),f=r.type;!0!==(o=p.next()).done;){var l=!1;if(a=o.value,\"undirected\"!==f)for(c in u=a.out){d=u[c];do{if(s=d.target,l=!0,h=i(a.key,s.key,a.attributes,s.attributes,d.key,d.attributes,d.undirected),t&&h)return d;d=d.next}while(d)}if(\"directed\"!==f)for(c in u=a.undirected)if(!(e&&a.key>c)){d=u[c];do{if((s=d.target).key!==c&&(s=d.source),l=!0,h=i(a.key,s.key,a.attributes,s.attributes,d.key,d.attributes,d.undirected),t&&h)return d;d=d.next}while(d)}if(n&&!l&&(h=i(a.key,null,a.attributes,null,null,null,null),t&&h))return null}}function Et(t){if(!s(t))throw new B('Graph.import: invalid serialized node. A serialized node should be a plain object with at least a \"key\" property.');if(!(\"key\"in t))throw new B(\"Graph.import: serialized node is missing its key.\");if(\"attributes\"in t&&(!s(t.attributes)||null===t.attributes))throw new B(\"Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.\")}function At(t){if(!s(t))throw new B('Graph.import: invalid serialized edge. A serialized edge should be a plain object with at least a \"source\" & \"target\" property.');if(!(\"source\"in t))throw new B(\"Graph.import: serialized edge is missing its source.\");if(!(\"target\"in t))throw new B(\"Graph.import: serialized edge is missing its target.\");if(\"attributes\"in t&&(!s(t.attributes)||null===t.attributes))throw new B(\"Graph.import: invalid attributes. Attributes should be a plain object, null or omitted.\");if(\"undirected\"in t&&\"boolean\"!=typeof t.undirected)throw new B(\"Graph.import: invalid undirectedness information. Undirected should be boolean or omitted.\")}vt.prototype.wrap=function(t){null===this.A?this.A=t:null===this.B&&(this.B=t)},vt.prototype.has=function(t){return null!==this.A&&t in this.A||null!==this.B&&t in this.B};var Lt,St=(Lt=255&Math.floor(256*Math.random()),function(){return Lt++}),Dt=new Set([\"directed\",\"undirected\",\"mixed\"]),Ut=new Set([\"domain\",\"_events\",\"_eventsCount\",\"_maxListeners\"]),Nt={allowSelfLoops:!0,multi:!1,type:\"mixed\"};function Ot(t,e,n){var r=new t.NodeDataClass(e,n);return t._nodes.set(e,r),t.emit(\"nodeAdded\",{key:e,attributes:n}),r}function jt(t,e,n,r,i,o,a,c){if(!r&&\"undirected\"===t.type)throw new I(\"Graph.\".concat(e,\": you cannot add a directed edge to an undirected graph. Use the #.addEdge or #.addUndirectedEdge instead.\"));if(r&&\"directed\"===t.type)throw new I(\"Graph.\".concat(e,\": you cannot add an undirected edge to a directed graph. Use the #.addEdge or #.addDirectedEdge instead.\"));if(c&&!s(c))throw new B(\"Graph.\".concat(e,': invalid attributes. Expecting an object but got \"').concat(c,'\"'));if(o=\"\"+o,a=\"\"+a,c=c||{},!t.allowSelfLoops&&o===a)throw new I(\"Graph.\".concat(e,': source & target are the same (\"').concat(o,\"\\\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.\"));var u=t._nodes.get(o),d=t._nodes.get(a);if(!u)throw new F(\"Graph.\".concat(e,': source node \"').concat(o,'\" not found.'));if(!d)throw new F(\"Graph.\".concat(e,': target node \"').concat(a,'\" not found.'));var h={key:null,undirected:r,source:o,target:a,attributes:c};if(n)i=t._edgeKeyGenerator();else if(i=\"\"+i,t._edges.has(i))throw new I(\"Graph.\".concat(e,': the \"').concat(i,'\" edge already exists in the graph.'));if(!t.multi&&(r?void 0!==u.undirected[a]:void 0!==u.out[a]))throw new I(\"Graph.\".concat(e,': an edge linking \"').concat(o,'\" to \"').concat(a,\"\\\" already exists. If you really want to add multiple edges linking those nodes, you should create a multi graph by using the 'multi' option.\"));var p=new V(r,i,u,d,c);t._edges.set(i,p);var f=o===a;return r?(u.undirectedDegree++,d.undirectedDegree++,f&&(u.undirectedLoops++,t._undirectedSelfLoopCount++)):(u.outDegree++,d.inDegree++,f&&(u.directedLoops++,t._directedSelfLoopCount++)),t.multi?p.attachMulti():p.attach(),r?t._undirectedSize++:t._directedSize++,h.key=i,t.emit(\"edgeAdded\",h),i}function Ct(t,e,n,r,i,o,a,c,d){if(!r&&\"undirected\"===t.type)throw new I(\"Graph.\".concat(e,\": you cannot merge/update a directed edge to an undirected graph. Use the #.mergeEdge/#.updateEdge or #.addUndirectedEdge instead.\"));if(r&&\"directed\"===t.type)throw new I(\"Graph.\".concat(e,\": you cannot merge/update an undirected edge to a directed graph. Use the #.mergeEdge/#.updateEdge or #.addDirectedEdge instead.\"));if(c)if(d){if(\"function\"!=typeof c)throw new B(\"Graph.\".concat(e,': invalid updater function. Expecting a function but got \"').concat(c,'\"'))}else if(!s(c))throw new B(\"Graph.\".concat(e,': invalid attributes. Expecting an object but got \"').concat(c,'\"'));var h;if(o=\"\"+o,a=\"\"+a,d&&(h=c,c=void 0),!t.allowSelfLoops&&o===a)throw new I(\"Graph.\".concat(e,': source & target are the same (\"').concat(o,\"\\\"), thus creating a loop explicitly forbidden by this graph 'allowSelfLoops' option set to false.\"));var p,f,l=t._nodes.get(o),g=t._nodes.get(a);if(!n&&(p=t._edges.get(i))){if(!(p.source.key===o&&p.target.key===a||r&&p.source.key===a&&p.target.key===o))throw new I(\"Graph.\".concat(e,': inconsistency detected when attempting to merge the \"').concat(i,'\" edge with \"').concat(o,'\" source & \"').concat(a,'\" target vs. (\"').concat(p.source.key,'\", \"').concat(p.target.key,'\").'));f=p}if(f||t.multi||!l||(f=r?l.undirected[a]:l.out[a]),f){var y=[f.key,!1,!1,!1];if(d?!h:!c)return y;if(d){var w=f.attributes;f.attributes=h(w),t.emit(\"edgeAttributesUpdated\",{type:\"replace\",key:f.key,attributes:f.attributes})}else u(f.attributes,c),t.emit(\"edgeAttributesUpdated\",{type:\"merge\",key:f.key,attributes:f.attributes,data:c});return y}c=c||{},d&&h&&(c=h(c));var v={key:null,undirected:r,source:o,target:a,attributes:c};if(n)i=t._edgeKeyGenerator();else if(i=\"\"+i,t._edges.has(i))throw new I(\"Graph.\".concat(e,': the \"').concat(i,'\" edge already exists in the graph.'));var b=!1,m=!1;l||(l=Ot(t,o,{}),b=!0,o===a&&(g=l,m=!0)),g||(g=Ot(t,a,{}),m=!0),p=new V(r,i,l,g,c),t._edges.set(i,p);var k=o===a;return r?(l.undirectedDegree++,g.undirectedDegree++,k&&(l.undirectedLoops++,t._undirectedSelfLoopCount++)):(l.outDegree++,g.inDegree++,k&&(l.directedLoops++,t._directedSelfLoopCount++)),t.multi?p.attachMulti():p.attach(),r?t._undirectedSize++:t._directedSize++,v.key=i,t.emit(\"edgeAdded\",v),[i,!0,b,m]}function Mt(t,e){t._edges.delete(e.key);var n=e.source,r=e.target,i=e.attributes,o=e.undirected,a=n===r;o?(n.undirectedDegree--,r.undirectedDegree--,a&&(n.undirectedLoops--,t._undirectedSelfLoopCount--)):(n.outDegree--,r.inDegree--,a&&(n.directedLoops--,t._directedSelfLoopCount--)),t.multi?e.detachMulti():e.detach(),o?t._undirectedSize--:t._directedSize--,t.emit(\"edgeDropped\",{key:e.key,attributes:i,source:n.key,target:r.key,undirected:o})}var zt=function(n){function r(t){var e;if(e=n.call(this)||this,\"boolean\"!=typeof(t=u({},Nt,t)).multi)throw new B(\"Graph.constructor: invalid 'multi' option. Expecting a boolean but got \\\"\".concat(t.multi,'\".'));if(!Dt.has(t.type))throw new B('Graph.constructor: invalid \\'type\\' option. Should be one of \"mixed\", \"directed\" or \"undirected\" but got \"'.concat(t.type,'\".'));if(\"boolean\"!=typeof t.allowSelfLoops)throw new B(\"Graph.constructor: invalid 'allowSelfLoops' option. Expecting a boolean but got \\\"\".concat(t.allowSelfLoops,'\".'));var r=\"mixed\"===t.type?Y:\"directed\"===t.type?q:J;p(c(e),\"NodeDataClass\",r);var i=\"geid_\"+St()+\"_\",o=0;return p(c(e),\"_attributes\",{}),p(c(e),\"_nodes\",new Map),p(c(e),\"_edges\",new Map),p(c(e),\"_directedSize\",0),p(c(e),\"_undirectedSize\",0),p(c(e),\"_directedSelfLoopCount\",0),p(c(e),\"_undirectedSelfLoopCount\",0),p(c(e),\"_edgeKeyGenerator\",(function(){var t;do{t=i+o++}while(e._edges.has(t));return t})),p(c(e),\"_options\",t),Ut.forEach((function(t){return p(c(e),t,e[t])})),f(c(e),\"order\",(function(){return e._nodes.size})),f(c(e),\"size\",(function(){return e._edges.size})),f(c(e),\"directedSize\",(function(){return e._directedSize})),f(c(e),\"undirectedSize\",(function(){return e._undirectedSize})),f(c(e),\"selfLoopCount\",(function(){return e._directedSelfLoopCount+e._undirectedSelfLoopCount})),f(c(e),\"directedSelfLoopCount\",(function(){return e._directedSelfLoopCount})),f(c(e),\"undirectedSelfLoopCount\",(function(){return e._undirectedSelfLoopCount})),f(c(e),\"multi\",e._options.multi),f(c(e),\"type\",e._options.type),f(c(e),\"allowSelfLoops\",e._options.allowSelfLoops),f(c(e),\"implementation\",(function(){return\"graphology\"})),e}e(r,n);var i=r.prototype;return i._resetInstanceCounters=function(){this._directedSize=0,this._undirectedSize=0,this._directedSelfLoopCount=0,this._undirectedSelfLoopCount=0},i.hasNode=function(t){return this._nodes.has(\"\"+t)},i.hasDirectedEdge=function(t,e){if(\"undirected\"===this.type)return!1;if(1===arguments.length){var n=\"\"+t,r=this._edges.get(n);return!!r&&!r.undirected}if(2===arguments.length){t=\"\"+t,e=\"\"+e;var i=this._nodes.get(t);return!!i&&i.out.hasOwnProperty(e)}throw new B(\"Graph.hasDirectedEdge: invalid arity (\".concat(arguments.length,\", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.\"))},i.hasUndirectedEdge=function(t,e){if(\"directed\"===this.type)return!1;if(1===arguments.length){var n=\"\"+t,r=this._edges.get(n);return!!r&&r.undirected}if(2===arguments.length){t=\"\"+t,e=\"\"+e;var i=this._nodes.get(t);return!!i&&i.undirected.hasOwnProperty(e)}throw new B(\"Graph.hasDirectedEdge: invalid arity (\".concat(arguments.length,\", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.\"))},i.hasEdge=function(t,e){if(1===arguments.length){var n=\"\"+t;return this._edges.has(n)}if(2===arguments.length){t=\"\"+t,e=\"\"+e;var r=this._nodes.get(t);return!!r&&(void 0!==r.out&&r.out.hasOwnProperty(e)||void 0!==r.undirected&&r.undirected.hasOwnProperty(e))}throw new B(\"Graph.hasEdge: invalid arity (\".concat(arguments.length,\", instead of 1 or 2). You can either ask for an edge id or for the existence of an edge between a source & a target.\"))},i.directedEdge=function(t,e){if(\"undirected\"!==this.type){if(t=\"\"+t,e=\"\"+e,this.multi)throw new I(\"Graph.directedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.directedEdges instead.\");var n=this._nodes.get(t);if(!n)throw new F('Graph.directedEdge: could not find the \"'.concat(t,'\" source node in the graph.'));if(!this._nodes.has(e))throw new F('Graph.directedEdge: could not find the \"'.concat(e,'\" target node in the graph.'));var r=n.out&&n.out[e]||void 0;return r?r.key:void 0}},i.undirectedEdge=function(t,e){if(\"directed\"!==this.type){if(t=\"\"+t,e=\"\"+e,this.multi)throw new I(\"Graph.undirectedEdge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.undirectedEdges instead.\");var n=this._nodes.get(t);if(!n)throw new F('Graph.undirectedEdge: could not find the \"'.concat(t,'\" source node in the graph.'));if(!this._nodes.has(e))throw new F('Graph.undirectedEdge: could not find the \"'.concat(e,'\" target node in the graph.'));var r=n.undirected&&n.undirected[e]||void 0;return r?r.key:void 0}},i.edge=function(t,e){if(this.multi)throw new I(\"Graph.edge: this method is irrelevant with multigraphs since there might be multiple edges between source & target. See #.edges instead.\");t=\"\"+t,e=\"\"+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.edge: could not find the \"'.concat(t,'\" source node in the graph.'));if(!this._nodes.has(e))throw new F('Graph.edge: could not find the \"'.concat(e,'\" target node in the graph.'));var r=n.out&&n.out[e]||n.undirected&&n.undirected[e]||void 0;if(r)return r.key},i.areDirectedNeighbors=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areDirectedNeighbors: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"!==this.type&&(e in n.in||e in n.out)},i.areOutNeighbors=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areOutNeighbors: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"!==this.type&&e in n.out},i.areInNeighbors=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areInNeighbors: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"!==this.type&&e in n.in},i.areUndirectedNeighbors=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areUndirectedNeighbors: could not find the \"'.concat(t,'\" node in the graph.'));return\"directed\"!==this.type&&e in n.undirected},i.areNeighbors=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areNeighbors: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"!==this.type&&(e in n.in||e in n.out)||\"directed\"!==this.type&&e in n.undirected},i.areInboundNeighbors=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areInboundNeighbors: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"!==this.type&&e in n.in||\"directed\"!==this.type&&e in n.undirected},i.areOutboundNeighbors=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._nodes.get(t);if(!n)throw new F('Graph.areOutboundNeighbors: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"!==this.type&&e in n.out||\"directed\"!==this.type&&e in n.undirected},i.inDegree=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.inDegree: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"===this.type?0:e.inDegree},i.outDegree=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.outDegree: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"===this.type?0:e.outDegree},i.directedDegree=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.directedDegree: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"===this.type?0:e.inDegree+e.outDegree},i.undirectedDegree=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.undirectedDegree: could not find the \"'.concat(t,'\" node in the graph.'));return\"directed\"===this.type?0:e.undirectedDegree},i.inboundDegree=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.inboundDegree: could not find the \"'.concat(t,'\" node in the graph.'));var n=0;return\"directed\"!==this.type&&(n+=e.undirectedDegree),\"undirected\"!==this.type&&(n+=e.inDegree),n},i.outboundDegree=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.outboundDegree: could not find the \"'.concat(t,'\" node in the graph.'));var n=0;return\"directed\"!==this.type&&(n+=e.undirectedDegree),\"undirected\"!==this.type&&(n+=e.outDegree),n},i.degree=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.degree: could not find the \"'.concat(t,'\" node in the graph.'));var n=0;return\"directed\"!==this.type&&(n+=e.undirectedDegree),\"undirected\"!==this.type&&(n+=e.inDegree+e.outDegree),n},i.inDegreeWithoutSelfLoops=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.inDegreeWithoutSelfLoops: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"===this.type?0:e.inDegree-e.directedLoops},i.outDegreeWithoutSelfLoops=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.outDegreeWithoutSelfLoops: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"===this.type?0:e.outDegree-e.directedLoops},i.directedDegreeWithoutSelfLoops=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.directedDegreeWithoutSelfLoops: could not find the \"'.concat(t,'\" node in the graph.'));return\"undirected\"===this.type?0:e.inDegree+e.outDegree-2*e.directedLoops},i.undirectedDegreeWithoutSelfLoops=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.undirectedDegreeWithoutSelfLoops: could not find the \"'.concat(t,'\" node in the graph.'));return\"directed\"===this.type?0:e.undirectedDegree-2*e.undirectedLoops},i.inboundDegreeWithoutSelfLoops=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.inboundDegreeWithoutSelfLoops: could not find the \"'.concat(t,'\" node in the graph.'));var n=0,r=0;return\"directed\"!==this.type&&(n+=e.undirectedDegree,r+=2*e.undirectedLoops),\"undirected\"!==this.type&&(n+=e.inDegree,r+=e.directedLoops),n-r},i.outboundDegreeWithoutSelfLoops=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.outboundDegreeWithoutSelfLoops: could not find the \"'.concat(t,'\" node in the graph.'));var n=0,r=0;return\"directed\"!==this.type&&(n+=e.undirectedDegree,r+=2*e.undirectedLoops),\"undirected\"!==this.type&&(n+=e.outDegree,r+=e.directedLoops),n-r},i.degreeWithoutSelfLoops=function(t){t=\"\"+t;var e=this._nodes.get(t);if(!e)throw new F('Graph.degreeWithoutSelfLoops: could not find the \"'.concat(t,'\" node in the graph.'));var n=0,r=0;return\"directed\"!==this.type&&(n+=e.undirectedDegree,r+=2*e.undirectedLoops),\"undirected\"!==this.type&&(n+=e.inDegree+e.outDegree,r+=2*e.directedLoops),n-r},i.source=function(t){t=\"\"+t;var e=this._edges.get(t);if(!e)throw new F('Graph.source: could not find the \"'.concat(t,'\" edge in the graph.'));return e.source.key},i.target=function(t){t=\"\"+t;var e=this._edges.get(t);if(!e)throw new F('Graph.target: could not find the \"'.concat(t,'\" edge in the graph.'));return e.target.key},i.extremities=function(t){t=\"\"+t;var e=this._edges.get(t);if(!e)throw new F('Graph.extremities: could not find the \"'.concat(t,'\" edge in the graph.'));return[e.source.key,e.target.key]},i.opposite=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._edges.get(e);if(!n)throw new F('Graph.opposite: could not find the \"'.concat(e,'\" edge in the graph.'));var r=n.source.key,i=n.target.key;if(t===r)return i;if(t===i)return r;throw new F('Graph.opposite: the \"'.concat(t,'\" node is not attached to the \"').concat(e,'\" edge (').concat(r,\", \").concat(i,\").\"))},i.hasExtremity=function(t,e){t=\"\"+t,e=\"\"+e;var n=this._edges.get(t);if(!n)throw new F('Graph.hasExtremity: could not find the \"'.concat(t,'\" edge in the graph.'));return n.source.key===e||n.target.key===e},i.isUndirected=function(t){t=\"\"+t;var e=this._edges.get(t);if(!e)throw new F('Graph.isUndirected: could not find the \"'.concat(t,'\" edge in the graph.'));return e.undirected},i.isDirected=function(t){t=\"\"+t;var e=this._edges.get(t);if(!e)throw new F('Graph.isDirected: could not find the \"'.concat(t,'\" edge in the graph.'));return!e.undirected},i.isSelfLoop=function(t){t=\"\"+t;var e=this._edges.get(t);if(!e)throw new F('Graph.isSelfLoop: could not find the \"'.concat(t,'\" edge in the graph.'));return e.source===e.target},i.addNode=function(t,e){var n=function(t,e,n){if(n&&!s(n))throw new B('Graph.addNode: invalid attributes. Expecting an object but got \"'.concat(n,'\"'));if(e=\"\"+e,n=n||{},t._nodes.has(e))throw new I('Graph.addNode: the \"'.concat(e,'\" node already exist in the graph.'));var r=new t.NodeDataClass(e,n);return t._nodes.set(e,r),t.emit(\"nodeAdded\",{key:e,attributes:n}),r}(this,t,e);return n.key},i.mergeNode=function(t,e){if(e&&!s(e))throw new B('Graph.mergeNode: invalid attributes. Expecting an object but got \"'.concat(e,'\"'));t=\"\"+t,e=e||{};var n=this._nodes.get(t);return n?(e&&(u(n.attributes,e),this.emit(\"nodeAttributesUpdated\",{type:\"merge\",key:t,attributes:n.attributes,data:e})),[t,!1]):(n=new this.NodeDataClass(t,e),this._nodes.set(t,n),this.emit(\"nodeAdded\",{key:t,attributes:e}),[t,!0])},i.updateNode=function(t,e){if(e&&\"function\"!=typeof e)throw new B('Graph.updateNode: invalid updater function. Expecting a function but got \"'.concat(e,'\"'));t=\"\"+t;var n=this._nodes.get(t);if(n){if(e){var r=n.attributes;n.attributes=e(r),this.emit(\"nodeAttributesUpdated\",{type:\"replace\",key:t,attributes:n.attributes})}return[t,!1]}var i=e?e({}):{};return n=new this.NodeDataClass(t,i),this._nodes.set(t,n),this.emit(\"nodeAdded\",{key:t,attributes:i}),[t,!0]},i.dropNode=function(t){t=\"\"+t;var e,n=this._nodes.get(t);if(!n)throw new F('Graph.dropNode: could not find the \"'.concat(t,'\" node in the graph.'));if(\"undirected\"!==this.type){for(var r in n.out){e=n.out[r];do{Mt(this,e),e=e.next}while(e)}for(var i in n.in){e=n.in[i];do{Mt(this,e),e=e.next}while(e)}}if(\"directed\"!==this.type)for(var o in n.undirected){e=n.undirected[o];do{Mt(this,e),e=e.next}while(e)}this._nodes.delete(t),this.emit(\"nodeDropped\",{key:t,attributes:n.attributes})},i.dropEdge=function(t){var e;if(arguments.length>1){var n=\"\"+arguments[0],r=\"\"+arguments[1];if(!(e=d(this,n,r,this.type)))throw new F('Graph.dropEdge: could not find the \"'.concat(n,'\" -> \"').concat(r,'\" edge in the graph.'))}else if(t=\"\"+t,!(e=this._edges.get(t)))throw new F('Graph.dropEdge: could not find the \"'.concat(t,'\" edge in the graph.'));return Mt(this,e),this},i.dropDirectedEdge=function(t,e){if(arguments.length<2)throw new I(\"Graph.dropDirectedEdge: it does not make sense to try and drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.\");if(this.multi)throw new I(\"Graph.dropDirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.\");var n=d(this,t=\"\"+t,e=\"\"+e,\"directed\");if(!n)throw new F('Graph.dropDirectedEdge: could not find a \"'.concat(t,'\" -> \"').concat(e,'\" edge in the graph.'));return Mt(this,n),this},i.dropUndirectedEdge=function(t,e){if(arguments.length<2)throw new I(\"Graph.dropUndirectedEdge: it does not make sense to drop a directed edge by key. What if the edge with this key is undirected? Use #.dropEdge for this purpose instead.\");if(this.multi)throw new I(\"Graph.dropUndirectedEdge: cannot use a {source,target} combo when dropping an edge in a MultiGraph since we cannot infer the one you want to delete as there could be multiple ones.\");var n=d(this,t,e,\"undirected\");if(!n)throw new F('Graph.dropUndirectedEdge: could not find a \"'.concat(t,'\" -> \"').concat(e,'\" edge in the graph.'));return Mt(this,n),this},i.clear=function(){this._edges.clear(),this._nodes.clear(),this._resetInstanceCounters(),this.emit(\"cleared\")},i.clearEdges=function(){for(var t,e=this._nodes.values();!0!==(t=e.next()).done;)t.value.clear();this._edges.clear(),this._resetInstanceCounters(),this.emit(\"edgesCleared\")},i.getAttribute=function(t){return this._attributes[t]},i.getAttributes=function(){return this._attributes},i.hasAttribute=function(t){return this._attributes.hasOwnProperty(t)},i.setAttribute=function(t,e){return this._attributes[t]=e,this.emit(\"attributesUpdated\",{type:\"set\",attributes:this._attributes,name:t}),this},i.updateAttribute=function(t,e){if(\"function\"!=typeof e)throw new B(\"Graph.updateAttribute: updater should be a function.\");var n=this._attributes[t];return this._attributes[t]=e(n),this.emit(\"attributesUpdated\",{type:\"set\",attributes:this._attributes,name:t}),this},i.removeAttribute=function(t){return delete this._attributes[t],this.emit(\"attributesUpdated\",{type:\"remove\",attributes:this._attributes,name:t}),this},i.replaceAttributes=function(t){if(!s(t))throw new B(\"Graph.replaceAttributes: provided attributes are not a plain object.\");return this._attributes=t,this.emit(\"attributesUpdated\",{type:\"replace\",attributes:this._attributes}),this},i.mergeAttributes=function(t){if(!s(t))throw new B(\"Graph.mergeAttributes: provided attributes are not a plain object.\");return u(this._attributes,t),this.emit(\"attributesUpdated\",{type:\"merge\",attributes:this._attributes,data:t}),this},i.updateAttributes=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.updateAttributes: provided updater is not a function.\");return this._attributes=t(this._attributes),this.emit(\"attributesUpdated\",{type:\"update\",attributes:this._attributes}),this},i.updateEachNodeAttributes=function(t,e){if(\"function\"!=typeof t)throw new B(\"Graph.updateEachNodeAttributes: expecting an updater function.\");if(e&&!l(e))throw new B(\"Graph.updateEachNodeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}\");for(var n,r,i=this._nodes.values();!0!==(n=i.next()).done;)(r=n.value).attributes=t(r.key,r.attributes);this.emit(\"eachNodeAttributesUpdated\",{hints:e||null})},i.updateEachEdgeAttributes=function(t,e){if(\"function\"!=typeof t)throw new B(\"Graph.updateEachEdgeAttributes: expecting an updater function.\");if(e&&!l(e))throw new B(\"Graph.updateEachEdgeAttributes: invalid hints. Expecting an object having the following shape: {attributes?: [string]}\");for(var n,r,i,o,a=this._edges.values();!0!==(n=a.next()).done;)i=(r=n.value).source,o=r.target,r.attributes=t(r.key,r.attributes,i.key,o.key,i.attributes,o.attributes,r.undirected);this.emit(\"eachEdgeAttributesUpdated\",{hints:e||null})},i.forEachAdjacencyEntry=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.forEachAdjacencyEntry: expecting a callback.\");xt(!1,!1,!1,this,t)},i.forEachAdjacencyEntryWithOrphans=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.forEachAdjacencyEntryWithOrphans: expecting a callback.\");xt(!1,!1,!0,this,t)},i.forEachAssymetricAdjacencyEntry=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.forEachAssymetricAdjacencyEntry: expecting a callback.\");xt(!1,!0,!1,this,t)},i.forEachAssymetricAdjacencyEntryWithOrphans=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.forEachAssymetricAdjacencyEntryWithOrphans: expecting a callback.\");xt(!1,!0,!0,this,t)},i.nodes=function(){return\"function\"==typeof Array.from?Array.from(this._nodes.keys()):K(this._nodes.keys(),this._nodes.size)},i.forEachNode=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.forEachNode: expecting a callback.\");for(var e,n,r=this._nodes.values();!0!==(e=r.next()).done;)t((n=e.value).key,n.attributes)},i.findNode=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.findNode: expecting a callback.\");for(var e,n,r=this._nodes.values();!0!==(e=r.next()).done;)if(t((n=e.value).key,n.attributes))return n.key},i.mapNodes=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.mapNode: expecting a callback.\");for(var e,n,r=this._nodes.values(),i=new Array(this.order),o=0;!0!==(e=r.next()).done;)n=e.value,i[o++]=t(n.key,n.attributes);return i},i.someNode=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.someNode: expecting a callback.\");for(var e,n,r=this._nodes.values();!0!==(e=r.next()).done;)if(t((n=e.value).key,n.attributes))return!0;return!1},i.everyNode=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.everyNode: expecting a callback.\");for(var e,n,r=this._nodes.values();!0!==(e=r.next()).done;)if(!t((n=e.value).key,n.attributes))return!1;return!0},i.filterNodes=function(t){if(\"function\"!=typeof t)throw new B(\"Graph.filterNodes: expecting a callback.\");for(var e,n,r=this._nodes.values(),i=[];!0!==(e=r.next()).done;)t((n=e.value).key,n.attributes)&&i.push(n.key);return i},i.reduceNodes=function(t,e){if(\"function\"!=typeof t)throw new B(\"Graph.reduceNodes: expecting a callback.\");if(arguments.length<2)throw new B(\"Graph.reduceNodes: missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.\");for(var n,r,i=e,o=this._nodes.values();!0!==(n=o.next()).done;)i=t(i,(r=n.value).key,r.attributes);return i},i.nodeEntries=function(){var t=this._nodes.values();return new O((function(){var e=t.next();if(e.done)return e;var n=e.value;return{value:{node:n.key,attributes:n.attributes},done:!1}}))},i.export=function(){var t=this,e=new Array(this._nodes.size),n=0;this._nodes.forEach((function(t,r){e[n++]=function(t,e){var n={key:t};return h(e.attributes)||(n.attributes=u({},e.attributes)),n}(r,t)}));var r=new Array(this._edges.size);return n=0,this._edges.forEach((function(e,i){r[n++]=function(t,e,n){var r={key:e,source:n.source.key,target:n.target.key};return h(n.attributes)||(r.attributes=u({},n.attributes)),\"mixed\"===t&&n.undirected&&(r.undirected=!0),r}(t.type,i,e)})),{options:{type:this.type,multi:this.multi,allowSelfLoops:this.allowSelfLoops},attributes:this.getAttributes(),nodes:e,edges:r}},i.import=function(t){var e,n,i,o,a,c=this,u=arguments.length>1&&void 0!==arguments[1]&&arguments[1];if(t instanceof r)return t.forEachNode((function(t,e){u?c.mergeNode(t,e):c.addNode(t,e)})),t.forEachEdge((function(t,e,n,r,i,o,a){u?a?c.mergeUndirectedEdgeWithKey(t,n,r,e):c.mergeDirectedEdgeWithKey(t,n,r,e):a?c.addUndirectedEdgeWithKey(t,n,r,e):c.addDirectedEdgeWithKey(t,n,r,e)})),this;if(!s(t))throw new B(\"Graph.import: invalid argument. Expecting a serialized graph or, alternatively, a Graph instance.\");if(t.attributes){if(!s(t.attributes))throw new B(\"Graph.import: invalid attributes. Expecting a plain object.\");u?this.mergeAttributes(t.attributes):this.replaceAttributes(t.attributes)}if(t.nodes){if(i=t.nodes,!Array.isArray(i))throw new B(\"Graph.import: invalid nodes. Expecting an array.\");for(e=0,n=i.length;e<n;e++){Et(o=i[e]);var d=o,h=d.key,p=d.attributes;u?this.mergeNode(h,p):this.addNode(h,p)}}if(t.edges){var f=!1;if(\"undirected\"===this.type&&(f=!0),i=t.edges,!Array.isArray(i))throw new B(\"Graph.import: invalid edges. Expecting an array.\");for(e=0,n=i.length;e<n;e++){At(a=i[e]);var l=a,g=l.source,y=l.target,w=l.attributes,v=l.undirected,b=void 0===v?f:v;\"key\"in a?(u?b?this.mergeUndirectedEdgeWithKey:this.mergeDirectedEdgeWithKey:b?this.addUndirectedEdgeWithKey:this.addDirectedEdgeWithKey).call(this,a.key,g,y,w):(u?b?this.mergeUndirectedEdge:this.mergeDirectedEdge:b?this.addUndirectedEdge:this.addDirectedEdge).call(this,g,y,w)}}return this},i.nullCopy=function(t){var e=new r(u({},this._options,t));return e.replaceAttributes(u({},this.getAttributes())),e},i.emptyCopy=function(t){var e=this.nullCopy(t);return this._nodes.forEach((function(t,n){var r=u({},t.attributes);t=new e.NodeDataClass(n,r),e._nodes.set(n,t)})),e},i.copy=function(t){if(\"string\"==typeof(t=t||{}).type&&t.type!==this.type&&\"mixed\"!==t.type)throw new I('Graph.copy: cannot create an incompatible copy from \"'.concat(this.type,'\" type to \"').concat(t.type,'\" because this would mean losing information about the current graph.'));if(\"boolean\"==typeof t.multi&&t.multi!==this.multi&&!0!==t.multi)throw new I(\"Graph.copy: cannot create an incompatible copy by downgrading a multi graph to a simple one because this would mean losing information about the current graph.\");if(\"boolean\"==typeof t.allowSelfLoops&&t.allowSelfLoops!==this.allowSelfLoops&&!0!==t.allowSelfLoops)throw new I(\"Graph.copy: cannot create an incompatible copy from a graph allowing self loops to one that does not because this would mean losing information about the current graph.\");for(var e,n,r=this.emptyCopy(t),i=this._edges.values();!0!==(e=i.next()).done;)jt(r,\"copy\",!1,(n=e.value).undirected,n.key,n.source.key,n.target.key,u({},n.attributes));return r},i.toJSON=function(){return this.export()},i.toString=function(){return\"[object Graph]\"},i.inspect=function(){var e=this,n={};this._nodes.forEach((function(t,e){n[e]=t.attributes}));var r={},i={};this._edges.forEach((function(t,n){var o,a=t.undirected?\"--\":\"->\",c=\"\",u=t.source.key,d=t.target.key;t.undirected&&u>d&&(o=u,u=d,d=o);var s=\"(\".concat(u,\")\").concat(a,\"(\").concat(d,\")\");n.startsWith(\"geid_\")?e.multi&&(void 0===i[s]?i[s]=0:i[s]++,c+=\"\".concat(i[s],\". \")):c+=\"[\".concat(n,\"]: \"),r[c+=s]=t.attributes}));var o={};for(var a in this)this.hasOwnProperty(a)&&!Ut.has(a)&&\"function\"!=typeof this[a]&&\"symbol\"!==t(a)&&(o[a]=this[a]);return o.attributes=this._attributes,o.nodes=n,o.edges=r,p(o,\"constructor\",this.constructor),o},r}(y.exports.EventEmitter);\"undefined\"!=typeof Symbol&&(zt.prototype[Symbol.for(\"nodejs.util.inspect.custom\")]=zt.prototype.inspect),[{name:function(t){return\"\".concat(t,\"Edge\")},generateKey:!0},{name:function(t){return\"\".concat(t,\"DirectedEdge\")},generateKey:!0,type:\"directed\"},{name:function(t){return\"\".concat(t,\"UndirectedEdge\")},generateKey:!0,type:\"undirected\"},{name:function(t){return\"\".concat(t,\"EdgeWithKey\")}},{name:function(t){return\"\".concat(t,\"DirectedEdgeWithKey\")},type:\"directed\"},{name:function(t){return\"\".concat(t,\"UndirectedEdgeWithKey\")},type:\"undirected\"}].forEach((function(t){[\"add\",\"merge\",\"update\"].forEach((function(e){var n=t.name(e),r=\"add\"===e?jt:Ct;t.generateKey?zt.prototype[n]=function(i,o,a){return r(this,n,!0,\"undirected\"===(t.type||this.type),null,i,o,a,\"update\"===e)}:zt.prototype[n]=function(i,o,a,c){return r(this,n,!1,\"undirected\"===(t.type||this.type),i,o,a,c,\"update\"===e)}}))})),function(t){Q.forEach((function(e){var n=e.name,r=e.attacher;r(t,n(\"Node\"),0),r(t,n(\"Source\"),1),r(t,n(\"Target\"),2),r(t,n(\"Opposite\"),3)}))}(zt),function(t){X.forEach((function(e){var n=e.name,r=e.attacher;r(t,n(\"Edge\"),\"mixed\"),r(t,n(\"DirectedEdge\"),\"directed\"),r(t,n(\"UndirectedEdge\"),\"undirected\")}))}(zt),function(t){et.forEach((function(e){!function(t,e){var n=e.name,r=e.type,i=e.direction;t.prototype[n]=function(t,e){if(\"mixed\"!==r&&\"mixed\"!==this.type&&r!==this.type)return[];if(!arguments.length)return ut(this,r);if(1===arguments.length){t=\"\"+t;var o=this._nodes.get(t);if(void 0===o)throw new F(\"Graph.\".concat(n,': could not find the \"').concat(t,'\" node in the graph.'));return pt(this.multi,\"mixed\"===r?this.type:r,i,o)}if(2===arguments.length){t=\"\"+t,e=\"\"+e;var a=this._nodes.get(t);if(!a)throw new F(\"Graph.\".concat(n,':  could not find the \"').concat(t,'\" source node in the graph.'));if(!this._nodes.has(e))throw new F(\"Graph.\".concat(n,':  could not find the \"').concat(e,'\" target node in the graph.'));return gt(r,this.multi,i,a,e)}throw new B(\"Graph.\".concat(n,\": too many arguments (expecting 0, 1 or 2 and got \").concat(arguments.length,\").\"))}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o=\"forEach\"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[o]=function(t,e,n){if(\"mixed\"===r||\"mixed\"===this.type||r===this.type){if(1===arguments.length)return dt(!1,this,r,n=t);if(2===arguments.length){t=\"\"+t,n=e;var a=this._nodes.get(t);if(void 0===a)throw new F(\"Graph.\".concat(o,': could not find the \"').concat(t,'\" node in the graph.'));return ht(!1,this.multi,\"mixed\"===r?this.type:r,i,a,n)}if(3===arguments.length){t=\"\"+t,e=\"\"+e;var c=this._nodes.get(t);if(!c)throw new F(\"Graph.\".concat(o,':  could not find the \"').concat(t,'\" source node in the graph.'));if(!this._nodes.has(e))throw new F(\"Graph.\".concat(o,':  could not find the \"').concat(e,'\" target node in the graph.'));return lt(!1,r,this.multi,i,c,e,n)}throw new B(\"Graph.\".concat(o,\": too many arguments (expecting 1, 2 or 3 and got \").concat(arguments.length,\").\"))}};var a=\"map\"+n[0].toUpperCase()+n.slice(1);t.prototype[a]=function(){var t,e=Array.prototype.slice.call(arguments),n=e.pop();if(0===e.length){var i=0;\"directed\"!==r&&(i+=this.undirectedSize),\"undirected\"!==r&&(i+=this.directedSize),t=new Array(i);var a=0;e.push((function(e,r,i,o,c,u,d){t[a++]=n(e,r,i,o,c,u,d)}))}else t=[],e.push((function(e,r,i,o,a,c,u){t.push(n(e,r,i,o,a,c,u))}));return this[o].apply(this,e),t};var c=\"filter\"+n[0].toUpperCase()+n.slice(1);t.prototype[c]=function(){var t=Array.prototype.slice.call(arguments),e=t.pop(),n=[];return t.push((function(t,r,i,o,a,c,u){e(t,r,i,o,a,c,u)&&n.push(t)})),this[o].apply(this,t),n};var u=\"reduce\"+n[0].toUpperCase()+n.slice(1);t.prototype[u]=function(){var t,e,n=Array.prototype.slice.call(arguments);if(n.length<2||n.length>4)throw new B(\"Graph.\".concat(u,\": invalid number of arguments (expecting 2, 3 or 4 and got \").concat(n.length,\").\"));if(\"function\"==typeof n[n.length-1]&&\"function\"!=typeof n[n.length-2])throw new B(\"Graph.\".concat(u,\": missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.\"));2===n.length?(t=n[0],e=n[1],n=[]):3===n.length?(t=n[1],e=n[2],n=[n[0]]):4===n.length&&(t=n[2],e=n[3],n=[n[0],n[1]]);var r=e;return n.push((function(e,n,i,o,a,c,u){r=t(r,e,n,i,o,a,c,u)})),this[o].apply(this,n),r}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o=\"find\"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[o]=function(t,e,n){if(\"mixed\"!==r&&\"mixed\"!==this.type&&r!==this.type)return!1;if(1===arguments.length)return dt(!0,this,r,n=t);if(2===arguments.length){t=\"\"+t,n=e;var a=this._nodes.get(t);if(void 0===a)throw new F(\"Graph.\".concat(o,': could not find the \"').concat(t,'\" node in the graph.'));return ht(!0,this.multi,\"mixed\"===r?this.type:r,i,a,n)}if(3===arguments.length){t=\"\"+t,e=\"\"+e;var c=this._nodes.get(t);if(!c)throw new F(\"Graph.\".concat(o,':  could not find the \"').concat(t,'\" source node in the graph.'));if(!this._nodes.has(e))throw new F(\"Graph.\".concat(o,':  could not find the \"').concat(e,'\" target node in the graph.'));return lt(!0,r,this.multi,i,c,e,n)}throw new B(\"Graph.\".concat(o,\": too many arguments (expecting 1, 2 or 3 and got \").concat(arguments.length,\").\"))};var a=\"some\"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[a]=function(){var t=Array.prototype.slice.call(arguments),e=t.pop();return t.push((function(t,n,r,i,o,a,c){return e(t,n,r,i,o,a,c)})),!!this[o].apply(this,t)};var c=\"every\"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[c]=function(){var t=Array.prototype.slice.call(arguments),e=t.pop();return t.push((function(t,n,r,i,o,a,c){return!e(t,n,r,i,o,a,c)})),!this[o].apply(this,t)}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o=n.slice(0,-1)+\"Entries\";t.prototype[o]=function(t,e){if(\"mixed\"!==r&&\"mixed\"!==this.type&&r!==this.type)return O.empty();if(!arguments.length)return st(this,r);if(1===arguments.length){t=\"\"+t;var n=this._nodes.get(t);if(!n)throw new F(\"Graph.\".concat(o,': could not find the \"').concat(t,'\" node in the graph.'));return ft(r,i,n)}if(2===arguments.length){t=\"\"+t,e=\"\"+e;var a=this._nodes.get(t);if(!a)throw new F(\"Graph.\".concat(o,':  could not find the \"').concat(t,'\" source node in the graph.'));if(!this._nodes.has(e))throw new F(\"Graph.\".concat(o,':  could not find the \"').concat(e,'\" target node in the graph.'));return yt(r,i,a,e)}throw new B(\"Graph.\".concat(o,\": too many arguments (expecting 0, 1 or 2 and got \").concat(arguments.length,\").\"))}}(t,e)}))}(zt),function(t){wt.forEach((function(e){_t(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o=\"forEach\"+n[0].toUpperCase()+n.slice(1,-1);t.prototype[o]=function(t,e){if(\"mixed\"===r||\"mixed\"===this.type||r===this.type){t=\"\"+t;var n=this._nodes.get(t);if(void 0===n)throw new F(\"Graph.\".concat(o,': could not find the \"').concat(t,'\" node in the graph.'));mt(!1,\"mixed\"===r?this.type:r,i,n,e)}};var a=\"map\"+n[0].toUpperCase()+n.slice(1);t.prototype[a]=function(t,e){var n=[];return this[o](t,(function(t,r){n.push(e(t,r))})),n};var c=\"filter\"+n[0].toUpperCase()+n.slice(1);t.prototype[c]=function(t,e){var n=[];return this[o](t,(function(t,r){e(t,r)&&n.push(t)})),n};var u=\"reduce\"+n[0].toUpperCase()+n.slice(1);t.prototype[u]=function(t,e,n){if(arguments.length<3)throw new B(\"Graph.\".concat(u,\": missing initial value. You must provide it because the callback takes more than one argument and we cannot infer the initial value from the first iteration, as you could with a simple array.\"));var r=n;return this[o](t,(function(t,n){r=e(r,t,n)})),r}}(t,e),function(t,e){var n=e.name,r=e.type,i=e.direction,o=n[0].toUpperCase()+n.slice(1,-1),a=\"find\"+o;t.prototype[a]=function(t,e){if(\"mixed\"===r||\"mixed\"===this.type||r===this.type){t=\"\"+t;var n=this._nodes.get(t);if(void 0===n)throw new F(\"Graph.\".concat(a,': could not find the \"').concat(t,'\" node in the graph.'));return mt(!0,\"mixed\"===r?this.type:r,i,n,e)}};var c=\"some\"+o;t.prototype[c]=function(t,e){return!!this[a](t,e)};var u=\"every\"+o;t.prototype[u]=function(t,e){return!this[a](t,(function(t,n){return!e(t,n)}))}}(t,e),Gt(t,e)}))}(zt);var Wt=function(t){function n(e){var n=u({type:\"directed\"},e);if(\"multi\"in n&&!1!==n.multi)throw new B(\"DirectedGraph.from: inconsistent indication that the graph should be multi in given options!\");if(\"directed\"!==n.type)throw new B('DirectedGraph.from: inconsistent \"'+n.type+'\" type in given options!');return t.call(this,n)||this}return e(n,t),n}(zt),Pt=function(t){function n(e){var n=u({type:\"undirected\"},e);if(\"multi\"in n&&!1!==n.multi)throw new B(\"UndirectedGraph.from: inconsistent indication that the graph should be multi in given options!\");if(\"undirected\"!==n.type)throw new B('UndirectedGraph.from: inconsistent \"'+n.type+'\" type in given options!');return t.call(this,n)||this}return e(n,t),n}(zt),Rt=function(t){function n(e){var n=u({multi:!0},e);if(\"multi\"in n&&!0!==n.multi)throw new B(\"MultiGraph.from: inconsistent indication that the graph should be simple in given options!\");return t.call(this,n)||this}return e(n,t),n}(zt),Kt=function(t){function n(e){var n=u({type:\"directed\",multi:!0},e);if(\"multi\"in n&&!0!==n.multi)throw new B(\"MultiDirectedGraph.from: inconsistent indication that the graph should be simple in given options!\");if(\"directed\"!==n.type)throw new B('MultiDirectedGraph.from: inconsistent \"'+n.type+'\" type in given options!');return t.call(this,n)||this}return e(n,t),n}(zt),Tt=function(t){function n(e){var n=u({type:\"undirected\",multi:!0},e);if(\"multi\"in n&&!0!==n.multi)throw new B(\"MultiUndirectedGraph.from: inconsistent indication that the graph should be simple in given options!\");if(\"undirected\"!==n.type)throw new B('MultiUndirectedGraph.from: inconsistent \"'+n.type+'\" type in given options!');return t.call(this,n)||this}return e(n,t),n}(zt);function Bt(t){t.from=function(e,n){var r=u({},e.options,n),i=new t(r);return i.import(e),i}}return Bt(zt),Bt(Wt),Bt(Pt),Bt(Rt),Bt(Kt),Bt(Tt),zt.Graph=zt,zt.DirectedGraph=Wt,zt.UndirectedGraph=Pt,zt.MultiGraph=Rt,zt.MultiDirectedGraph=Kt,zt.MultiUndirectedGraph=Tt,zt.InvalidArgumentsGraphError=B,zt.NotFoundGraphError=F,zt.UsageGraphError=I,zt}));\n\n\n</script>\n<script>\n\"use strict\";\n/* @license\nPapa Parse\nv5.0.2\nhttps://github.com/mholt/PapaParse\nLicense: MIT\n*/\n!function(e,t){\"function\"==typeof define&&define.amd?define([],t):\"object\"==typeof module&&\"undefined\"!=typeof exports?module.exports=t():e.Papa=t()}(this,function s(){\"use strict\";var f=\"undefined\"!=typeof self?self:\"undefined\"!=typeof window?window:void 0!==f?f:{};var n=!f.document&&!!f.postMessage,o=n&&/blob:/i.test((f.location||{}).protocol),a={},h=0,b={parse:function(e,t){var r=(t=t||{}).dynamicTyping||!1;q(r)&&(t.dynamicTypingFunction=r,r={});if(t.dynamicTyping=r,t.transform=!!q(t.transform)&&t.transform,t.worker&&b.WORKERS_SUPPORTED){var i=function(){if(!b.WORKERS_SUPPORTED)return!1;var e=(r=f.URL||f.webkitURL||null,i=s.toString(),b.BLOB_URL||(b.BLOB_URL=r.createObjectURL(new Blob([\"(\",i,\")();\"],{type:\"text/javascript\"})))),t=new f.Worker(e);var r,i;return t.onmessage=_,t.id=h++,a[t.id]=t}();return i.userStep=t.step,i.userChunk=t.chunk,i.userComplete=t.complete,i.userError=t.error,t.step=q(t.step),t.chunk=q(t.chunk),t.complete=q(t.complete),t.error=q(t.error),delete t.worker,void i.postMessage({input:e,config:t,workerId:i.id})}var n=null;b.NODE_STREAM_INPUT,\"string\"==typeof e?n=t.download?new l(t):new p(t):!0===e.readable&&q(e.read)&&q(e.on)?n=new m(t):(f.File&&e instanceof File||e instanceof Object)&&(n=new c(t));return n.stream(e)},unparse:function(e,t){var i=!1,_=!0,g=\",\",v=\"\\r\\n\",n='\"',s=n+n,r=!1,a=null;!function(){if(\"object\"!=typeof t)return;\"string\"!=typeof t.delimiter||b.BAD_DELIMITERS.filter(function(e){return-1!==t.delimiter.indexOf(e)}).length||(g=t.delimiter);(\"boolean\"==typeof t.quotes||Array.isArray(t.quotes))&&(i=t.quotes);\"boolean\"!=typeof t.skipEmptyLines&&\"string\"!=typeof t.skipEmptyLines||(r=t.skipEmptyLines);\"string\"==typeof t.newline&&(v=t.newline);\"string\"==typeof t.quoteChar&&(n=t.quoteChar);\"boolean\"==typeof t.header&&(_=t.header);if(Array.isArray(t.columns)){if(0===t.columns.length)throw new Error(\"Option columns is empty\");a=t.columns}void 0!==t.escapeChar&&(s=t.escapeChar+n)}();var o=new RegExp(U(n),\"g\");\"string\"==typeof e&&(e=JSON.parse(e));if(Array.isArray(e)){if(!e.length||Array.isArray(e[0]))return u(null,e,r);if(\"object\"==typeof e[0])return u(a||h(e[0]),e,r)}else if(\"object\"==typeof e)return\"string\"==typeof e.data&&(e.data=JSON.parse(e.data)),Array.isArray(e.data)&&(e.fields||(e.fields=e.meta&&e.meta.fields),e.fields||(e.fields=Array.isArray(e.data[0])?e.fields:h(e.data[0])),Array.isArray(e.data[0])||\"object\"==typeof e.data[0]||(e.data=[e.data])),u(e.fields||[],e.data||[],r);throw new Error(\"Unable to serialize unrecognized input\");function h(e){if(\"object\"!=typeof e)return[];var t=[];for(var r in e)t.push(r);return t}function u(e,t,r){var i=\"\";\"string\"==typeof e&&(e=JSON.parse(e)),\"string\"==typeof t&&(t=JSON.parse(t));var n=Array.isArray(e)&&0<e.length,s=!Array.isArray(t[0]);if(n&&_){for(var a=0;a<e.length;a++)0<a&&(i+=g),i+=y(e[a],a);0<t.length&&(i+=v)}for(var o=0;o<t.length;o++){var h=n?e.length:t[o].length,u=!1,f=n?0===Object.keys(t[o]).length:0===t[o].length;if(r&&!n&&(u=\"greedy\"===r?\"\"===t[o].join(\"\").trim():1===t[o].length&&0===t[o][0].length),\"greedy\"===r&&n){for(var d=[],l=0;l<h;l++){var c=s?e[l]:l;d.push(t[o][c])}u=\"\"===d.join(\"\").trim()}if(!u){for(var p=0;p<h;p++){0<p&&!f&&(i+=g);var m=n&&s?e[p]:p;i+=y(t[o][m],p)}o<t.length-1&&(!r||0<h&&!f)&&(i+=v)}}return i}function y(e,t){if(null==e)return\"\";if(e.constructor===Date)return JSON.stringify(e).slice(1,25);e=e.toString().replace(o,s);var r=\"boolean\"==typeof i&&i||Array.isArray(i)&&i[t]||function(e,t){for(var r=0;r<t.length;r++)if(-1<e.indexOf(t[r]))return!0;return!1}(e,b.BAD_DELIMITERS)||-1<e.indexOf(g)||\" \"===e.charAt(0)||\" \"===e.charAt(e.length-1);return r?n+e+n:e}}};if(b.RECORD_SEP=String.fromCharCode(30),b.UNIT_SEP=String.fromCharCode(31),b.BYTE_ORDER_MARK=\"\\ufeff\",b.BAD_DELIMITERS=[\"\\r\",\"\\n\",'\"',b.BYTE_ORDER_MARK],b.WORKERS_SUPPORTED=!n&&!!f.Worker,b.NODE_STREAM_INPUT=1,b.LocalChunkSize=10485760,b.RemoteChunkSize=5242880,b.DefaultDelimiter=\",\",b.Parser=E,b.ParserHandle=r,b.NetworkStreamer=l,b.FileStreamer=c,b.StringStreamer=p,b.ReadableStreamStreamer=m,f.jQuery){var d=f.jQuery;d.fn.parse=function(o){var r=o.config||{},h=[];return this.each(function(e){if(!(\"INPUT\"===d(this).prop(\"tagName\").toUpperCase()&&\"file\"===d(this).attr(\"type\").toLowerCase()&&f.FileReader)||!this.files||0===this.files.length)return!0;for(var t=0;t<this.files.length;t++)h.push({file:this.files[t],inputElem:this,instanceConfig:d.extend({},r)})}),e(),this;function e(){if(0!==h.length){var e,t,r,i,n=h[0];if(q(o.before)){var s=o.before(n.file,n.inputElem);if(\"object\"==typeof s){if(\"abort\"===s.action)return e=\"AbortError\",t=n.file,r=n.inputElem,i=s.reason,void(q(o.error)&&o.error({name:e},t,r,i));if(\"skip\"===s.action)return void u();\"object\"==typeof s.config&&(n.instanceConfig=d.extend(n.instanceConfig,s.config))}else if(\"skip\"===s)return void u()}var a=n.instanceConfig.complete;n.instanceConfig.complete=function(e){q(a)&&a(e,n.file,n.inputElem),u()},b.parse(n.file,n.instanceConfig)}else q(o.complete)&&o.complete()}function u(){h.splice(0,1),e()}}}function u(e){this._handle=null,this._finished=!1,this._completed=!1,this._halted=!1,this._input=null,this._baseIndex=0,this._partialLine=\"\",this._rowCount=0,this._start=0,this._nextChunk=null,this.isFirstChunk=!0,this._completeResults={data:[],errors:[],meta:{}},function(e){var t=w(e);t.chunkSize=parseInt(t.chunkSize),e.step||e.chunk||(t.chunkSize=null);this._handle=new r(t),(this._handle.streamer=this)._config=t}.call(this,e),this.parseChunk=function(e,t){if(this.isFirstChunk&&q(this._config.beforeFirstChunk)){var r=this._config.beforeFirstChunk(e);void 0!==r&&(e=r)}this.isFirstChunk=!1,this._halted=!1;var i=this._partialLine+e;this._partialLine=\"\";var n=this._handle.parse(i,this._baseIndex,!this._finished);if(!this._handle.paused()&&!this._handle.aborted()){var s=n.meta.cursor;this._finished||(this._partialLine=i.substring(s-this._baseIndex),this._baseIndex=s),n&&n.data&&(this._rowCount+=n.data.length);var a=this._finished||this._config.preview&&this._rowCount>=this._config.preview;if(o)f.postMessage({results:n,workerId:b.WORKER_ID,finished:a});else if(q(this._config.chunk)&&!t){if(this._config.chunk(n,this._handle),this._handle.paused()||this._handle.aborted())return void(this._halted=!0);n=void 0,this._completeResults=void 0}return this._config.step||this._config.chunk||(this._completeResults.data=this._completeResults.data.concat(n.data),this._completeResults.errors=this._completeResults.errors.concat(n.errors),this._completeResults.meta=n.meta),this._completed||!a||!q(this._config.complete)||n&&n.meta.aborted||(this._config.complete(this._completeResults,this._input),this._completed=!0),a||n&&n.meta.paused||this._nextChunk(),n}this._halted=!0},this._sendError=function(e){q(this._config.error)?this._config.error(e):o&&this._config.error&&f.postMessage({workerId:b.WORKER_ID,error:e,finished:!1})}}function l(e){var i;(e=e||{}).chunkSize||(e.chunkSize=b.RemoteChunkSize),u.call(this,e),this._nextChunk=n?function(){this._readChunk(),this._chunkLoaded()}:function(){this._readChunk()},this.stream=function(e){this._input=e,this._nextChunk()},this._readChunk=function(){if(this._finished)this._chunkLoaded();else{if(i=new XMLHttpRequest,this._config.withCredentials&&(i.withCredentials=this._config.withCredentials),n||(i.onload=y(this._chunkLoaded,this),i.onerror=y(this._chunkError,this)),i.open(\"GET\",this._input,!n),this._config.downloadRequestHeaders){var e=this._config.downloadRequestHeaders;for(var t in e)i.setRequestHeader(t,e[t])}if(this._config.chunkSize){var r=this._start+this._config.chunkSize-1;i.setRequestHeader(\"Range\",\"bytes=\"+this._start+\"-\"+r)}try{i.send()}catch(e){this._chunkError(e.message)}n&&0===i.status?this._chunkError():this._start+=this._config.chunkSize}},this._chunkLoaded=function(){4===i.readyState&&(i.status<200||400<=i.status?this._chunkError():(this._finished=!this._config.chunkSize||this._start>function(e){var t=e.getResponseHeader(\"Content-Range\");if(null===t)return-1;return parseInt(t.substr(t.lastIndexOf(\"/\")+1))}(i),this.parseChunk(i.responseText)))},this._chunkError=function(e){var t=i.statusText||e;this._sendError(new Error(t))}}function c(e){var i,n;(e=e||{}).chunkSize||(e.chunkSize=b.LocalChunkSize),u.call(this,e);var s=\"undefined\"!=typeof FileReader;this.stream=function(e){this._input=e,n=e.slice||e.webkitSlice||e.mozSlice,s?((i=new FileReader).onload=y(this._chunkLoaded,this),i.onerror=y(this._chunkError,this)):i=new FileReaderSync,this._nextChunk()},this._nextChunk=function(){this._finished||this._config.preview&&!(this._rowCount<this._config.preview)||this._readChunk()},this._readChunk=function(){var e=this._input;if(this._config.chunkSize){var t=Math.min(this._start+this._config.chunkSize,this._input.size);e=n.call(e,this._start,t)}var r=i.readAsText(e,this._config.encoding);s||this._chunkLoaded({target:{result:r}})},this._chunkLoaded=function(e){this._start+=this._config.chunkSize,this._finished=!this._config.chunkSize||this._start>=this._input.size,this.parseChunk(e.target.result)},this._chunkError=function(){this._sendError(i.error)}}function p(e){var r;u.call(this,e=e||{}),this.stream=function(e){return r=e,this._nextChunk()},this._nextChunk=function(){if(!this._finished){var e=this._config.chunkSize,t=e?r.substr(0,e):r;return r=e?r.substr(e):\"\",this._finished=!r,this.parseChunk(t)}}}function m(e){u.call(this,e=e||{});var t=[],r=!0,i=!1;this.pause=function(){u.prototype.pause.apply(this,arguments),this._input.pause()},this.resume=function(){u.prototype.resume.apply(this,arguments),this._input.resume()},this.stream=function(e){this._input=e,this._input.on(\"data\",this._streamData),this._input.on(\"end\",this._streamEnd),this._input.on(\"error\",this._streamError)},this._checkIsFinished=function(){i&&1===t.length&&(this._finished=!0)},this._nextChunk=function(){this._checkIsFinished(),t.length?this.parseChunk(t.shift()):r=!0},this._streamData=y(function(e){try{t.push(\"string\"==typeof e?e:e.toString(this._config.encoding)),r&&(r=!1,this._checkIsFinished(),this.parseChunk(t.shift()))}catch(e){this._streamError(e)}},this),this._streamError=y(function(e){this._streamCleanUp(),this._sendError(e)},this),this._streamEnd=y(function(){this._streamCleanUp(),i=!0,this._streamData(\"\")},this),this._streamCleanUp=y(function(){this._input.removeListener(\"data\",this._streamData),this._input.removeListener(\"end\",this._streamEnd),this._input.removeListener(\"error\",this._streamError)},this)}function r(g){var a,o,h,i=Math.pow(2,53),n=-i,s=/^\\s*-?(\\d*\\.?\\d+|\\d+\\.?\\d*)(e[-+]?\\d+)?\\s*$/i,u=/(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d\\.\\d+([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))|(\\d{4}-[01]\\d-[0-3]\\dT[0-2]\\d:[0-5]\\d([+-][0-2]\\d:[0-5]\\d|Z))/,t=this,r=0,f=0,d=!1,e=!1,l=[],c={data:[],errors:[],meta:{}};if(q(g.step)){var p=g.step;g.step=function(e){if(c=e,_())m();else{if(m(),0===c.data.length)return;r+=e.data.length,g.preview&&r>g.preview?o.abort():p(c,t)}}}function v(e){return\"greedy\"===g.skipEmptyLines?\"\"===e.join(\"\").trim():1===e.length&&0===e[0].length}function m(){if(c&&h&&(k(\"Delimiter\",\"UndetectableDelimiter\",\"Unable to auto-detect delimiting character; defaulted to '\"+b.DefaultDelimiter+\"'\"),h=!1),g.skipEmptyLines)for(var e=0;e<c.data.length;e++)v(c.data[e])&&c.data.splice(e--,1);return _()&&function(){if(!c)return;function e(e){q(g.transformHeader)&&(e=g.transformHeader(e)),l.push(e)}if(Array.isArray(c.data[0])){for(var t=0;_()&&t<c.data.length;t++)c.data[t].forEach(e);c.data.splice(0,1)}else c.data.forEach(e)}(),function(){if(!c||!g.header&&!g.dynamicTyping&&!g.transform)return c;function e(e,t){var r,i=g.header?{}:[];for(r=0;r<e.length;r++){var n=r,s=e[r];g.header&&(n=r>=l.length?\"__parsed_extra\":l[r]),g.transform&&(s=g.transform(s,n)),s=y(n,s),\"__parsed_extra\"===n?(i[n]=i[n]||[],i[n].push(s)):i[n]=s}return g.header&&(r>l.length?k(\"FieldMismatch\",\"TooManyFields\",\"Too many fields: expected \"+l.length+\" fields but parsed \"+r,f+t):r<l.length&&k(\"FieldMismatch\",\"TooFewFields\",\"Too few fields: expected \"+l.length+\" fields but parsed \"+r,f+t)),i}var t=1;!c.data[0]||Array.isArray(c.data[0])?(c.data=c.data.map(e),t=c.data.length):c.data=e(c.data,0);g.header&&c.meta&&(c.meta.fields=l);return f+=t,c}()}function _(){return g.header&&0===l.length}function y(e,t){return r=e,g.dynamicTypingFunction&&void 0===g.dynamicTyping[r]&&(g.dynamicTyping[r]=g.dynamicTypingFunction(r)),!0===(g.dynamicTyping[r]||g.dynamicTyping)?\"true\"===t||\"TRUE\"===t||\"false\"!==t&&\"FALSE\"!==t&&(function(e){if(s.test(e)){var t=parseFloat(e);if(n<t&&t<i)return!0}return!1}(t)?parseFloat(t):u.test(t)?new Date(t):\"\"===t?null:t):t;var r}function k(e,t,r,i){c.errors.push({type:e,code:t,message:r,row:i})}this.parse=function(e,t,r){var i=g.quoteChar||'\"';if(g.newline||(g.newline=function(e,t){e=e.substr(0,1048576);var r=new RegExp(U(t)+\"([^]*?)\"+U(t),\"gm\"),i=(e=e.replace(r,\"\")).split(\"\\r\"),n=e.split(\"\\n\"),s=1<n.length&&n[0].length<i[0].length;if(1===i.length||s)return\"\\n\";for(var a=0,o=0;o<i.length;o++)\"\\n\"===i[o][0]&&a++;return a>=i.length/2?\"\\r\\n\":\"\\r\"}(e,i)),h=!1,g.delimiter)q(g.delimiter)&&(g.delimiter=g.delimiter(e),c.meta.delimiter=g.delimiter);else{var n=function(e,t,r,i,n){var s,a,o,h;n=n||[\",\",\"\\t\",\"|\",\";\",b.RECORD_SEP,b.UNIT_SEP];for(var u=0;u<n.length;u++){var f=n[u],d=0,l=0,c=0;o=void 0;for(var p=new E({comments:i,delimiter:f,newline:t,preview:10}).parse(e),m=0;m<p.data.length;m++)if(r&&v(p.data[m]))c++;else{var _=p.data[m].length;l+=_,void 0!==o?0<_&&(d+=Math.abs(_-o),o=_):o=_}0<p.data.length&&(l/=p.data.length-c),(void 0===a||d<=a)&&(void 0===h||h<l)&&1.99<l&&(a=d,s=f,h=l)}return{successful:!!(g.delimiter=s),bestDelimiter:s}}(e,g.newline,g.skipEmptyLines,g.comments,g.delimitersToGuess);n.successful?g.delimiter=n.bestDelimiter:(h=!0,g.delimiter=b.DefaultDelimiter),c.meta.delimiter=g.delimiter}var s=w(g);return g.preview&&g.header&&s.preview++,a=e,o=new E(s),c=o.parse(a,t,r),m(),d?{meta:{paused:!0}}:c||{meta:{paused:!1}}},this.paused=function(){return d},this.pause=function(){d=!0,o.abort(),a=a.substr(o.getCharIndex())},this.resume=function(){t.streamer._halted?(d=!1,t.streamer.parseChunk(a,!0)):setTimeout(this.resume,3)},this.aborted=function(){return e},this.abort=function(){e=!0,o.abort(),c.meta.aborted=!0,q(g.complete)&&g.complete(c),a=\"\"}}function U(e){return e.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\")}function E(e){var O,D=(e=e||{}).delimiter,I=e.newline,T=e.comments,A=e.step,L=e.preview,F=e.fastMode,z=O=void 0===e.quoteChar?'\"':e.quoteChar;if(void 0!==e.escapeChar&&(z=e.escapeChar),(\"string\"!=typeof D||-1<b.BAD_DELIMITERS.indexOf(D))&&(D=\",\"),T===D)throw new Error(\"Comment character same as delimiter\");!0===T?T=\"#\":(\"string\"!=typeof T||-1<b.BAD_DELIMITERS.indexOf(T))&&(T=!1),\"\\n\"!==I&&\"\\r\"!==I&&\"\\r\\n\"!==I&&(I=\"\\n\");var M=0,j=!1;this.parse=function(a,r,t){if(\"string\"!=typeof a)throw new Error(\"Input must be a string\");var i=a.length,e=D.length,n=I.length,s=T.length,o=q(A),h=[],u=[],f=[],d=M=0;if(!a)return R();if(F||!1!==F&&-1===a.indexOf(O)){for(var l=a.split(I),c=0;c<l.length;c++){if(f=l[c],M+=f.length,c!==l.length-1)M+=I.length;else if(t)return R();if(!T||f.substr(0,s)!==T){if(o){if(h=[],b(f.split(D)),S(),j)return R()}else b(f.split(D));if(L&&L<=c)return h=h.slice(0,L),R(!0)}}return R()}for(var p=a.indexOf(D,M),m=a.indexOf(I,M),_=new RegExp(U(z)+U(O),\"g\"),g=a.indexOf(O,M);;)if(a[M]!==O)if(T&&0===f.length&&a.substr(M,s)===T){if(-1===m)return R();M=m+n,m=a.indexOf(I,M),p=a.indexOf(D,M)}else{if(-1!==p&&(p<m||-1===m)){if(-1===g){f.push(a.substring(M,p)),M=p+e,p=a.indexOf(D,M);continue}var v=x(p,g,m);if(v&&void 0!==v.nextDelim){p=v.nextDelim,g=v.quoteSearch,f.push(a.substring(M,p)),M=p+e,p=a.indexOf(D,M);continue}}if(-1===m)break;if(f.push(a.substring(M,m)),C(m+n),o&&(S(),j))return R();if(L&&h.length>=L)return R(!0)}else for(g=M,M++;;){if(-1===(g=a.indexOf(O,g+1)))return t||u.push({type:\"Quotes\",code:\"MissingQuotes\",message:\"Quoted field unterminated\",row:h.length,index:M}),w();if(g===i-1)return w(a.substring(M,g).replace(_,O));if(O!==z||a[g+1]!==z){if(O===z||0===g||a[g-1]!==z){var y=E(-1===m?p:Math.min(p,m));if(a[g+1+y]===D){f.push(a.substring(M,g).replace(_,O)),a[M=g+1+y+e]!==O&&(g=a.indexOf(O,M)),p=a.indexOf(D,M),m=a.indexOf(I,M);break}var k=E(m);if(a.substr(g+1+k,n)===I){if(f.push(a.substring(M,g).replace(_,O)),C(g+1+k+n),p=a.indexOf(D,M),g=a.indexOf(O,M),o&&(S(),j))return R();if(L&&h.length>=L)return R(!0);break}u.push({type:\"Quotes\",code:\"InvalidQuotes\",message:\"Trailing quote on quoted field is malformed\",row:h.length,index:M}),g++}}else g++}return w();function b(e){h.push(e),d=M}function E(e){var t=0;if(-1!==e){var r=a.substring(g+1,e);r&&\"\"===r.trim()&&(t=r.length)}return t}function w(e){return t||(void 0===e&&(e=a.substr(M)),f.push(e),M=i,b(f),o&&S()),R()}function C(e){M=e,b(f),f=[],m=a.indexOf(I,M)}function R(e,t){return{data:t||!1?h[0]:h,errors:u,meta:{delimiter:D,linebreak:I,aborted:j,truncated:!!e,cursor:d+(r||0)}}}function S(){A(R(void 0,!0)),h=[],u=[]}function x(e,t,r){var i={nextDelim:void 0,quoteSearch:void 0},n=a.indexOf(O,t+1);if(t<e&&e<n&&(n<r||-1===r)){var s=a.indexOf(D,n);if(-1===s)return i;n<s&&(n=a.indexOf(O,n+1)),i=x(s,n,r)}else i={nextDelim:e,quoteSearch:t};return i}},this.abort=function(){j=!0},this.getCharIndex=function(){return M}}function _(e){var t=e.data,r=a[t.workerId],i=!1;if(t.error)r.userError(t.error,t.file);else if(t.results&&t.results.data){var n={abort:function(){i=!0,g(t.workerId,{data:[],errors:[],meta:{aborted:!0}})},pause:v,resume:v};if(q(r.userStep)){for(var s=0;s<t.results.data.length&&(r.userStep({data:t.results.data[s],errors:t.results.errors,meta:t.results.meta},n),!i);s++);delete t.results}else q(r.userChunk)&&(r.userChunk(t.results,n,t.file),delete t.results)}t.finished&&!i&&g(t.workerId,t.results)}function g(e,t){var r=a[e];q(r.userComplete)&&r.userComplete(t),r.terminate(),delete a[e]}function v(){throw new Error(\"Not implemented.\")}function w(e){if(\"object\"!=typeof e||null===e)return e;var t=Array.isArray(e)?[]:{};for(var r in e)t[r]=w(e[r]);return t}function y(e,t){return function(){e.apply(t,arguments)}}function q(e){return\"function\"==typeof e}return o&&(f.onmessage=function(e){var t=e.data;void 0===b.WORKER_ID&&t&&(b.WORKER_ID=t.workerId);if(\"string\"==typeof t.input)f.postMessage({workerId:b.WORKER_ID,results:b.parse(t.input,t.config),finished:!0});else if(f.File&&t.input instanceof File||t.input instanceof Object){var r=b.parse(t.input,t.config);r&&f.postMessage({workerId:b.WORKER_ID,results:r,finished:!0})}}),(l.prototype=Object.create(u.prototype)).constructor=l,(c.prototype=Object.create(u.prototype)).constructor=c,(p.prototype=Object.create(p.prototype)).constructor=p,(m.prototype=Object.create(u.prototype)).constructor=m,b});\n</script>\n<script>\n\"use strict\";\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?t(exports):\"function\"==typeof define&&define.amd?define([\"exports\"],t):t((e.Leaflet=e.Leaflet||{},e.Leaflet.markercluster=e.Leaflet.markercluster||{}))}(this,function(e){\"use strict\";var t=L.MarkerClusterGroup=L.FeatureGroup.extend({options:{maxClusterRadius:80,iconCreateFunction:null,clusterPane:L.Marker.prototype.options.pane,spiderfyOnMaxZoom:!0,showCoverageOnHover:!0,zoomToBoundsOnClick:!0,singleMarkerMode:!1,disableClusteringAtZoom:null,removeOutsideVisibleBounds:!0,animate:!0,animateAddingMarkers:!1,spiderfyDistanceMultiplier:1,spiderLegPolylineOptions:{weight:1.5,color:\"#222\",opacity:.5},chunkedLoading:!1,chunkInterval:200,chunkDelay:50,chunkProgress:null,polygonOptions:{}},initialize:function(e){L.Util.setOptions(this,e),this.options.iconCreateFunction||(this.options.iconCreateFunction=this._defaultIconCreateFunction),this._featureGroup=L.featureGroup(),this._featureGroup.addEventParent(this),this._nonPointGroup=L.featureGroup(),this._nonPointGroup.addEventParent(this),this._inZoomAnimation=0,this._needsClustering=[],this._needsRemoving=[],this._currentShownBounds=null,this._queue=[],this._childMarkerEventHandlers={dragstart:this._childMarkerDragStart,move:this._childMarkerMoved,dragend:this._childMarkerDragEnd};var t=L.DomUtil.TRANSITION&&this.options.animate;L.extend(this,t?this._withAnimation:this._noAnimation),this._markerCluster=t?L.MarkerCluster:L.MarkerClusterNonAnimated},addLayer:function(e){if(e instanceof L.LayerGroup)return this.addLayers([e]);if(!e.getLatLng)return this._nonPointGroup.addLayer(e),this.fire(\"layeradd\",{layer:e}),this;if(!this._map)return this._needsClustering.push(e),this.fire(\"layeradd\",{layer:e}),this;if(this.hasLayer(e))return this;this._unspiderfy&&this._unspiderfy(),this._addLayer(e,this._maxZoom),this.fire(\"layeradd\",{layer:e}),this._topClusterLevel._recalculateBounds(),this._refreshClustersIcons();var t=e,i=this._zoom;if(e.__parent)for(;t.__parent._zoom>=i;)t=t.__parent;return this._currentShownBounds.contains(t.getLatLng())&&(this.options.animateAddingMarkers?this._animationAddLayer(e,t):this._animationAddLayerNonAnimated(e,t)),this},removeLayer:function(e){return e instanceof L.LayerGroup?this.removeLayers([e]):e.getLatLng?this._map?e.__parent?(this._unspiderfy&&(this._unspiderfy(),this._unspiderfyLayer(e)),this._removeLayer(e,!0),this.fire(\"layerremove\",{layer:e}),this._topClusterLevel._recalculateBounds(),this._refreshClustersIcons(),e.off(this._childMarkerEventHandlers,this),this._featureGroup.hasLayer(e)&&(this._featureGroup.removeLayer(e),e.clusterShow&&e.clusterShow()),this):this:(!this._arraySplice(this._needsClustering,e)&&this.hasLayer(e)&&this._needsRemoving.push({layer:e,latlng:e._latlng}),this.fire(\"layerremove\",{layer:e}),this):(this._nonPointGroup.removeLayer(e),this.fire(\"layerremove\",{layer:e}),this)},addLayers:function(e,t){if(!L.Util.isArray(e))return this.addLayer(e);var i,n=this._featureGroup,r=this._nonPointGroup,s=this.options.chunkedLoading,o=this.options.chunkInterval,a=this.options.chunkProgress,h=e.length,l=0,u=!0;if(this._map){var _=(new Date).getTime(),d=L.bind(function(){for(var c=(new Date).getTime();h>l;l++){if(s&&0===l%200){var p=(new Date).getTime()-c;if(p>o)break}if(i=e[l],i instanceof L.LayerGroup)u&&(e=e.slice(),u=!1),this._extractNonGroupLayers(i,e),h=e.length;else if(i.getLatLng){if(!this.hasLayer(i)&&(this._addLayer(i,this._maxZoom),t||this.fire(\"layeradd\",{layer:i}),i.__parent&&2===i.__parent.getChildCount())){var f=i.__parent.getAllChildMarkers(),m=f[0]===i?f[1]:f[0];n.removeLayer(m)}}else r.addLayer(i),t||this.fire(\"layeradd\",{layer:i})}a&&a(l,h,(new Date).getTime()-_),l===h?(this._topClusterLevel._recalculateBounds(),this._refreshClustersIcons(),this._topClusterLevel._recursivelyAddChildrenToMap(null,this._zoom,this._currentShownBounds)):setTimeout(d,this.options.chunkDelay)},this);d()}else for(var c=this._needsClustering;h>l;l++)i=e[l],i instanceof L.LayerGroup?(u&&(e=e.slice(),u=!1),this._extractNonGroupLayers(i,e),h=e.length):i.getLatLng?this.hasLayer(i)||c.push(i):r.addLayer(i);return this},removeLayers:function(e){var t,i,n=e.length,r=this._featureGroup,s=this._nonPointGroup,o=!0;if(!this._map){for(t=0;n>t;t++)i=e[t],i instanceof L.LayerGroup?(o&&(e=e.slice(),o=!1),this._extractNonGroupLayers(i,e),n=e.length):(this._arraySplice(this._needsClustering,i),s.removeLayer(i),this.hasLayer(i)&&this._needsRemoving.push({layer:i,latlng:i._latlng}),this.fire(\"layerremove\",{layer:i}));return this}if(this._unspiderfy){this._unspiderfy();var a=e.slice(),h=n;for(t=0;h>t;t++)i=a[t],i instanceof L.LayerGroup?(this._extractNonGroupLayers(i,a),h=a.length):this._unspiderfyLayer(i)}for(t=0;n>t;t++)i=e[t],i instanceof L.LayerGroup?(o&&(e=e.slice(),o=!1),this._extractNonGroupLayers(i,e),n=e.length):i.__parent?(this._removeLayer(i,!0,!0),this.fire(\"layerremove\",{layer:i}),r.hasLayer(i)&&(r.removeLayer(i),i.clusterShow&&i.clusterShow())):(s.removeLayer(i),this.fire(\"layerremove\",{layer:i}));return this._topClusterLevel._recalculateBounds(),this._refreshClustersIcons(),this._topClusterLevel._recursivelyAddChildrenToMap(null,this._zoom,this._currentShownBounds),this},clearLayers:function(){return this._map||(this._needsClustering=[],this._needsRemoving=[],delete this._gridClusters,delete this._gridUnclustered),this._noanimationUnspiderfy&&this._noanimationUnspiderfy(),this._featureGroup.clearLayers(),this._nonPointGroup.clearLayers(),this.eachLayer(function(e){e.off(this._childMarkerEventHandlers,this),delete e.__parent},this),this._map&&this._generateInitialClusters(),this},getBounds:function(){var e=new L.LatLngBounds;this._topClusterLevel&&e.extend(this._topClusterLevel._bounds);for(var t=this._needsClustering.length-1;t>=0;t--)e.extend(this._needsClustering[t].getLatLng());return e.extend(this._nonPointGroup.getBounds()),e},eachLayer:function(e,t){var i,n,r,s=this._needsClustering.slice(),o=this._needsRemoving;for(this._topClusterLevel&&this._topClusterLevel.getAllChildMarkers(s),n=s.length-1;n>=0;n--){for(i=!0,r=o.length-1;r>=0;r--)if(o[r].layer===s[n]){i=!1;break}i&&e.call(t,s[n])}this._nonPointGroup.eachLayer(e,t)},getLayers:function(){var e=[];return this.eachLayer(function(t){e.push(t)}),e},getLayer:function(e){var t=null;return e=parseInt(e,10),this.eachLayer(function(i){L.stamp(i)===e&&(t=i)}),t},hasLayer:function(e){if(!e)return!1;var t,i=this._needsClustering;for(t=i.length-1;t>=0;t--)if(i[t]===e)return!0;for(i=this._needsRemoving,t=i.length-1;t>=0;t--)if(i[t].layer===e)return!1;return!(!e.__parent||e.__parent._group!==this)||this._nonPointGroup.hasLayer(e)},zoomToShowLayer:function(e,t){\"function\"!=typeof t&&(t=function(){});var i=function(){!e._icon&&!e.__parent._icon||this._inZoomAnimation||(this._map.off(\"moveend\",i,this),this.off(\"animationend\",i,this),e._icon?t():e.__parent._icon&&(this.once(\"spiderfied\",t,this),e.__parent.spiderfy()))};e._icon&&this._map.getBounds().contains(e.getLatLng())?t():e.__parent._zoom<Math.round(this._map._zoom)?(this._map.on(\"moveend\",i,this),this._map.panTo(e.getLatLng())):(this._map.on(\"moveend\",i,this),this.on(\"animationend\",i,this),e.__parent.zoomToBounds())},onAdd:function(e){this._map=e;var t,i,n;if(!isFinite(this._map.getMaxZoom()))throw\"Map has no maxZoom specified\";for(this._featureGroup.addTo(e),this._nonPointGroup.addTo(e),this._gridClusters||this._generateInitialClusters(),this._maxLat=e.options.crs.projection.MAX_LATITUDE,t=0,i=this._needsRemoving.length;i>t;t++)n=this._needsRemoving[t],n.newlatlng=n.layer._latlng,n.layer._latlng=n.latlng;for(t=0,i=this._needsRemoving.length;i>t;t++)n=this._needsRemoving[t],this._removeLayer(n.layer,!0),n.layer._latlng=n.newlatlng;this._needsRemoving=[],this._zoom=Math.round(this._map._zoom),this._currentShownBounds=this._getExpandedVisibleBounds(),this._map.on(\"zoomend\",this._zoomEnd,this),this._map.on(\"moveend\",this._moveEnd,this),this._spiderfierOnAdd&&this._spiderfierOnAdd(),this._bindEvents(),i=this._needsClustering,this._needsClustering=[],this.addLayers(i,!0)},onRemove:function(e){e.off(\"zoomend\",this._zoomEnd,this),e.off(\"moveend\",this._moveEnd,this),this._unbindEvents(),this._map._mapPane.className=this._map._mapPane.className.replace(\" leaflet-cluster-anim\",\"\"),this._spiderfierOnRemove&&this._spiderfierOnRemove(),delete this._maxLat,this._hideCoverage(),this._featureGroup.remove(),this._nonPointGroup.remove(),this._featureGroup.clearLayers(),this._map=null},getVisibleParent:function(e){for(var t=e;t&&!t._icon;)t=t.__parent;return t||null},_arraySplice:function(e,t){for(var i=e.length-1;i>=0;i--)if(e[i]===t)return e.splice(i,1),!0},_removeFromGridUnclustered:function(e,t){for(var i=this._map,n=this._gridUnclustered,r=Math.floor(this._map.getMinZoom());t>=r&&n[t].removeObject(e,i.project(e.getLatLng(),t));t--);},_childMarkerDragStart:function(e){e.target.__dragStart=e.target._latlng},_childMarkerMoved:function(e){if(!this._ignoreMove&&!e.target.__dragStart){var t=e.target._popup&&e.target._popup.isOpen();this._moveChild(e.target,e.oldLatLng,e.latlng),t&&e.target.openPopup()}},_moveChild:function(e,t,i){e._latlng=t,this.removeLayer(e),e._latlng=i,this.addLayer(e)},_childMarkerDragEnd:function(e){var t=e.target.__dragStart;delete e.target.__dragStart,t&&this._moveChild(e.target,t,e.target._latlng)},_removeLayer:function(e,t,i){var n=this._gridClusters,r=this._gridUnclustered,s=this._featureGroup,o=this._map,a=Math.floor(this._map.getMinZoom());t&&this._removeFromGridUnclustered(e,this._maxZoom);var h,l=e.__parent,u=l._markers;for(this._arraySplice(u,e);l&&(l._childCount--,l._boundsNeedUpdate=!0,!(l._zoom<a));)t&&l._childCount<=1?(h=l._markers[0]===e?l._markers[1]:l._markers[0],n[l._zoom].removeObject(l,o.project(l._cLatLng,l._zoom)),r[l._zoom].addObject(h,o.project(h.getLatLng(),l._zoom)),this._arraySplice(l.__parent._childClusters,l),l.__parent._markers.push(h),h.__parent=l.__parent,l._icon&&(s.removeLayer(l),i||s.addLayer(h))):l._iconNeedsUpdate=!0,l=l.__parent;delete e.__parent},_isOrIsParent:function(e,t){for(;t;){if(e===t)return!0;t=t.parentNode}return!1},fire:function(e,t,i){if(t&&t.layer instanceof L.MarkerCluster){if(t.originalEvent&&this._isOrIsParent(t.layer._icon,t.originalEvent.relatedTarget))return;e=\"cluster\"+e}L.FeatureGroup.prototype.fire.call(this,e,t,i)},listens:function(e,t){return L.FeatureGroup.prototype.listens.call(this,e,t)||L.FeatureGroup.prototype.listens.call(this,\"cluster\"+e,t)},_defaultIconCreateFunction:function(e){var t=e.getChildCount(),i=\" marker-cluster-\";return i+=10>t?\"small\":100>t?\"medium\":\"large\",new L.DivIcon({html:\"<div><span>\"+t+\"</span></div>\",className:\"marker-cluster\"+i,iconSize:new L.Point(40,40)})},_bindEvents:function(){var e=this._map,t=this.options.spiderfyOnMaxZoom,i=this.options.showCoverageOnHover,n=this.options.zoomToBoundsOnClick;(t||n)&&this.on(\"clusterclick\",this._zoomOrSpiderfy,this),i&&(this.on(\"clustermouseover\",this._showCoverage,this),this.on(\"clustermouseout\",this._hideCoverage,this),e.on(\"zoomend\",this._hideCoverage,this))},_zoomOrSpiderfy:function(e){for(var t=e.layer,i=t;1===i._childClusters.length;)i=i._childClusters[0];i._zoom===this._maxZoom&&i._childCount===t._childCount&&this.options.spiderfyOnMaxZoom?t.spiderfy():this.options.zoomToBoundsOnClick&&t.zoomToBounds(),e.originalEvent&&13===e.originalEvent.keyCode&&this._map._container.focus()},_showCoverage:function(e){var t=this._map;this._inZoomAnimation||(this._shownPolygon&&t.removeLayer(this._shownPolygon),e.layer.getChildCount()>2&&e.layer!==this._spiderfied&&(this._shownPolygon=new L.Polygon(e.layer.getConvexHull(),this.options.polygonOptions),t.addLayer(this._shownPolygon)))},_hideCoverage:function(){this._shownPolygon&&(this._map.removeLayer(this._shownPolygon),this._shownPolygon=null)},_unbindEvents:function(){var e=this.options.spiderfyOnMaxZoom,t=this.options.showCoverageOnHover,i=this.options.zoomToBoundsOnClick,n=this._map;(e||i)&&this.off(\"clusterclick\",this._zoomOrSpiderfy,this),t&&(this.off(\"clustermouseover\",this._showCoverage,this),this.off(\"clustermouseout\",this._hideCoverage,this),n.off(\"zoomend\",this._hideCoverage,this))},_zoomEnd:function(){this._map&&(this._mergeSplitClusters(),this._zoom=Math.round(this._map._zoom),this._currentShownBounds=this._getExpandedVisibleBounds())},_moveEnd:function(){if(!this._inZoomAnimation){var e=this._getExpandedVisibleBounds();this._topClusterLevel._recursivelyRemoveChildrenFromMap(this._currentShownBounds,Math.floor(this._map.getMinZoom()),this._zoom,e),this._topClusterLevel._recursivelyAddChildrenToMap(null,Math.round(this._map._zoom),e),this._currentShownBounds=e}},_generateInitialClusters:function(){var e=Math.ceil(this._map.getMaxZoom()),t=Math.floor(this._map.getMinZoom()),i=this.options.maxClusterRadius,n=i;\"function\"!=typeof i&&(n=function(){return i}),null!==this.options.disableClusteringAtZoom&&(e=this.options.disableClusteringAtZoom-1),this._maxZoom=e,this._gridClusters={},this._gridUnclustered={};for(var r=e;r>=t;r--)this._gridClusters[r]=new L.DistanceGrid(n(r)),this._gridUnclustered[r]=new L.DistanceGrid(n(r));this._topClusterLevel=new this._markerCluster(this,t-1)},_addLayer:function(e,t){var i,n,r=this._gridClusters,s=this._gridUnclustered,o=Math.floor(this._map.getMinZoom());for(this.options.singleMarkerMode&&this._overrideMarkerIcon(e),e.on(this._childMarkerEventHandlers,this);t>=o;t--){i=this._map.project(e.getLatLng(),t);var a=r[t].getNearObject(i);if(a)return a._addChild(e),e.__parent=a,void 0;if(a=s[t].getNearObject(i)){var h=a.__parent;h&&this._removeLayer(a,!1);var l=new this._markerCluster(this,t,a,e);r[t].addObject(l,this._map.project(l._cLatLng,t)),a.__parent=l,e.__parent=l;var u=l;for(n=t-1;n>h._zoom;n--)u=new this._markerCluster(this,n,u),r[n].addObject(u,this._map.project(a.getLatLng(),n));return h._addChild(u),this._removeFromGridUnclustered(a,t),void 0}s[t].addObject(e,i)}this._topClusterLevel._addChild(e),e.__parent=this._topClusterLevel},_refreshClustersIcons:function(){this._featureGroup.eachLayer(function(e){e instanceof L.MarkerCluster&&e._iconNeedsUpdate&&e._updateIcon()})},_enqueue:function(e){this._queue.push(e),this._queueTimeout||(this._queueTimeout=setTimeout(L.bind(this._processQueue,this),300))},_processQueue:function(){for(var e=0;e<this._queue.length;e++)this._queue[e].call(this);this._queue.length=0,clearTimeout(this._queueTimeout),this._queueTimeout=null},_mergeSplitClusters:function(){var e=Math.round(this._map._zoom);this._processQueue(),this._zoom<e&&this._currentShownBounds.intersects(this._getExpandedVisibleBounds())?(this._animationStart(),this._topClusterLevel._recursivelyRemoveChildrenFromMap(this._currentShownBounds,Math.floor(this._map.getMinZoom()),this._zoom,this._getExpandedVisibleBounds()),this._animationZoomIn(this._zoom,e)):this._zoom>e?(this._animationStart(),this._animationZoomOut(this._zoom,e)):this._moveEnd()},_getExpandedVisibleBounds:function(){return this.options.removeOutsideVisibleBounds?L.Browser.mobile?this._checkBoundsMaxLat(this._map.getBounds()):this._checkBoundsMaxLat(this._map.getBounds().pad(1)):this._mapBoundsInfinite},_checkBoundsMaxLat:function(e){var t=this._maxLat;return void 0!==t&&(e.getNorth()>=t&&(e._northEast.lat=1/0),e.getSouth()<=-t&&(e._southWest.lat=-1/0)),e},_animationAddLayerNonAnimated:function(e,t){if(t===e)this._featureGroup.addLayer(e);else if(2===t._childCount){t._addToMap();var i=t.getAllChildMarkers();this._featureGroup.removeLayer(i[0]),this._featureGroup.removeLayer(i[1])}else t._updateIcon()},_extractNonGroupLayers:function(e,t){var i,n=e.getLayers(),r=0;for(t=t||[];r<n.length;r++)i=n[r],i instanceof L.LayerGroup?this._extractNonGroupLayers(i,t):t.push(i);return t},_overrideMarkerIcon:function(e){var t=e.options.icon=this.options.iconCreateFunction({getChildCount:function(){return 1},getAllChildMarkers:function(){return[e]}});return t}});L.MarkerClusterGroup.include({_mapBoundsInfinite:new L.LatLngBounds(new L.LatLng(-1/0,-1/0),new L.LatLng(1/0,1/0))}),L.MarkerClusterGroup.include({_noAnimation:{_animationStart:function(){},_animationZoomIn:function(e,t){this._topClusterLevel._recursivelyRemoveChildrenFromMap(this._currentShownBounds,Math.floor(this._map.getMinZoom()),e),this._topClusterLevel._recursivelyAddChildrenToMap(null,t,this._getExpandedVisibleBounds()),this.fire(\"animationend\")},_animationZoomOut:function(e,t){this._topClusterLevel._recursivelyRemoveChildrenFromMap(this._currentShownBounds,Math.floor(this._map.getMinZoom()),e),this._topClusterLevel._recursivelyAddChildrenToMap(null,t,this._getExpandedVisibleBounds()),this.fire(\"animationend\")},_animationAddLayer:function(e,t){this._animationAddLayerNonAnimated(e,t)}},_withAnimation:{_animationStart:function(){this._map._mapPane.className+=\" leaflet-cluster-anim\",this._inZoomAnimation++},_animationZoomIn:function(e,t){var i,n=this._getExpandedVisibleBounds(),r=this._featureGroup,s=Math.floor(this._map.getMinZoom());this._ignoreMove=!0,this._topClusterLevel._recursively(n,e,s,function(s){var o,a=s._latlng,h=s._markers;for(n.contains(a)||(a=null),s._isSingleParent()&&e+1===t?(r.removeLayer(s),s._recursivelyAddChildrenToMap(null,t,n)):(s.clusterHide(),s._recursivelyAddChildrenToMap(a,t,n)),i=h.length-1;i>=0;i--)o=h[i],n.contains(o._latlng)||r.removeLayer(o)}),this._forceLayout(),this._topClusterLevel._recursivelyBecomeVisible(n,t),r.eachLayer(function(e){e instanceof L.MarkerCluster||!e._icon||e.clusterShow()}),this._topClusterLevel._recursively(n,e,t,function(e){e._recursivelyRestoreChildPositions(t)}),this._ignoreMove=!1,this._enqueue(function(){this._topClusterLevel._recursively(n,e,s,function(e){r.removeLayer(e),e.clusterShow()}),this._animationEnd()})},_animationZoomOut:function(e,t){this._animationZoomOutSingle(this._topClusterLevel,e-1,t),this._topClusterLevel._recursivelyAddChildrenToMap(null,t,this._getExpandedVisibleBounds()),this._topClusterLevel._recursivelyRemoveChildrenFromMap(this._currentShownBounds,Math.floor(this._map.getMinZoom()),e,this._getExpandedVisibleBounds())},_animationAddLayer:function(e,t){var i=this,n=this._featureGroup;n.addLayer(e),t!==e&&(t._childCount>2?(t._updateIcon(),this._forceLayout(),this._animationStart(),e._setPos(this._map.latLngToLayerPoint(t.getLatLng())),e.clusterHide(),this._enqueue(function(){n.removeLayer(e),e.clusterShow(),i._animationEnd()})):(this._forceLayout(),i._animationStart(),i._animationZoomOutSingle(t,this._map.getMaxZoom(),this._zoom)))}},_animationZoomOutSingle:function(e,t,i){var n=this._getExpandedVisibleBounds(),r=Math.floor(this._map.getMinZoom());e._recursivelyAnimateChildrenInAndAddSelfToMap(n,r,t+1,i);var s=this;this._forceLayout(),e._recursivelyBecomeVisible(n,i),this._enqueue(function(){if(1===e._childCount){var o=e._markers[0];this._ignoreMove=!0,o.setLatLng(o.getLatLng()),this._ignoreMove=!1,o.clusterShow&&o.clusterShow()}else e._recursively(n,i,r,function(e){e._recursivelyRemoveChildrenFromMap(n,r,t+1)});s._animationEnd()})},_animationEnd:function(){this._map&&(this._map._mapPane.className=this._map._mapPane.className.replace(\" leaflet-cluster-anim\",\"\")),this._inZoomAnimation--,this.fire(\"animationend\")},_forceLayout:function(){L.Util.falseFn(document.body.offsetWidth)}}),L.markerClusterGroup=function(e){return new L.MarkerClusterGroup(e)};var i=L.MarkerCluster=L.Marker.extend({options:L.Icon.prototype.options,initialize:function(e,t,i,n){L.Marker.prototype.initialize.call(this,i?i._cLatLng||i.getLatLng():new L.LatLng(0,0),{icon:this,pane:e.options.clusterPane}),this._group=e,this._zoom=t,this._markers=[],this._childClusters=[],this._childCount=0,this._iconNeedsUpdate=!0,this._boundsNeedUpdate=!0,this._bounds=new L.LatLngBounds,i&&this._addChild(i),n&&this._addChild(n)},getAllChildMarkers:function(e,t){e=e||[];for(var i=this._childClusters.length-1;i>=0;i--)this._childClusters[i].getAllChildMarkers(e);for(var n=this._markers.length-1;n>=0;n--)t&&this._markers[n].__dragStart||e.push(this._markers[n]);return e},getChildCount:function(){return this._childCount},zoomToBounds:function(e){for(var t,i=this._childClusters.slice(),n=this._group._map,r=n.getBoundsZoom(this._bounds),s=this._zoom+1,o=n.getZoom();i.length>0&&r>s;){s++;var a=[];for(t=0;t<i.length;t++)a=a.concat(i[t]._childClusters);i=a}r>s?this._group._map.setView(this._latlng,s):o>=r?this._group._map.setView(this._latlng,o+1):this._group._map.fitBounds(this._bounds,e)},getBounds:function(){var e=new L.LatLngBounds;return e.extend(this._bounds),e},_updateIcon:function(){this._iconNeedsUpdate=!0,this._icon&&this.setIcon(this)},createIcon:function(){return this._iconNeedsUpdate&&(this._iconObj=this._group.options.iconCreateFunction(this),this._iconNeedsUpdate=!1),this._iconObj.createIcon()},createShadow:function(){return this._iconObj.createShadow()},_addChild:function(e,t){this._iconNeedsUpdate=!0,this._boundsNeedUpdate=!0,this._setClusterCenter(e),e instanceof L.MarkerCluster?(t||(this._childClusters.push(e),e.__parent=this),this._childCount+=e._childCount):(t||this._markers.push(e),this._childCount++),this.__parent&&this.__parent._addChild(e,!0)},_setClusterCenter:function(e){this._cLatLng||(this._cLatLng=e._cLatLng||e._latlng)},_resetBounds:function(){var e=this._bounds;e._southWest&&(e._southWest.lat=1/0,e._southWest.lng=1/0),e._northEast&&(e._northEast.lat=-1/0,e._northEast.lng=-1/0)},_recalculateBounds:function(){var e,t,i,n,r=this._markers,s=this._childClusters,o=0,a=0,h=this._childCount;if(0!==h){for(this._resetBounds(),e=0;e<r.length;e++)i=r[e]._latlng,this._bounds.extend(i),o+=i.lat,a+=i.lng;for(e=0;e<s.length;e++)t=s[e],t._boundsNeedUpdate&&t._recalculateBounds(),this._bounds.extend(t._bounds),i=t._wLatLng,n=t._childCount,o+=i.lat*n,a+=i.lng*n;this._latlng=this._wLatLng=new L.LatLng(o/h,a/h),this._boundsNeedUpdate=!1}},_addToMap:function(e){e&&(this._backupLatlng=this._latlng,this.setLatLng(e)),this._group._featureGroup.addLayer(this)},_recursivelyAnimateChildrenIn:function(e,t,i){this._recursively(e,this._group._map.getMinZoom(),i-1,function(e){var i,n,r=e._markers;for(i=r.length-1;i>=0;i--)n=r[i],n._icon&&(n._setPos(t),n.clusterHide())},function(e){var i,n,r=e._childClusters;for(i=r.length-1;i>=0;i--)n=r[i],n._icon&&(n._setPos(t),n.clusterHide())})},_recursivelyAnimateChildrenInAndAddSelfToMap:function(e,t,i,n){this._recursively(e,n,t,function(r){r._recursivelyAnimateChildrenIn(e,r._group._map.latLngToLayerPoint(r.getLatLng()).round(),i),r._isSingleParent()&&i-1===n?(r.clusterShow(),r._recursivelyRemoveChildrenFromMap(e,t,i)):r.clusterHide(),r._addToMap()})},_recursivelyBecomeVisible:function(e,t){this._recursively(e,this._group._map.getMinZoom(),t,null,function(e){e.clusterShow()})},_recursivelyAddChildrenToMap:function(e,t,i){this._recursively(i,this._group._map.getMinZoom()-1,t,function(n){if(t!==n._zoom)for(var r=n._markers.length-1;r>=0;r--){var s=n._markers[r];i.contains(s._latlng)&&(e&&(s._backupLatlng=s.getLatLng(),s.setLatLng(e),s.clusterHide&&s.clusterHide()),n._group._featureGroup.addLayer(s))}},function(t){t._addToMap(e)})},_recursivelyRestoreChildPositions:function(e){for(var t=this._markers.length-1;t>=0;t--){var i=this._markers[t];i._backupLatlng&&(i.setLatLng(i._backupLatlng),delete i._backupLatlng)}if(e-1===this._zoom)for(var n=this._childClusters.length-1;n>=0;n--)this._childClusters[n]._restorePosition();else for(var r=this._childClusters.length-1;r>=0;r--)this._childClusters[r]._recursivelyRestoreChildPositions(e)},_restorePosition:function(){this._backupLatlng&&(this.setLatLng(this._backupLatlng),delete this._backupLatlng)},_recursivelyRemoveChildrenFromMap:function(e,t,i,n){var r,s;this._recursively(e,t-1,i-1,function(e){for(s=e._markers.length-1;s>=0;s--)r=e._markers[s],n&&n.contains(r._latlng)||(e._group._featureGroup.removeLayer(r),r.clusterShow&&r.clusterShow())},function(e){for(s=e._childClusters.length-1;s>=0;s--)r=e._childClusters[s],n&&n.contains(r._latlng)||(e._group._featureGroup.removeLayer(r),r.clusterShow&&r.clusterShow())})},_recursively:function(e,t,i,n,r){var s,o,a=this._childClusters,h=this._zoom;if(h>=t&&(n&&n(this),r&&h===i&&r(this)),t>h||i>h)for(s=a.length-1;s>=0;s--)o=a[s],o._boundsNeedUpdate&&o._recalculateBounds(),e.intersects(o._bounds)&&o._recursively(e,t,i,n,r)},_isSingleParent:function(){return this._childClusters.length>0&&this._childClusters[0]._childCount===this._childCount}});L.Marker.include({clusterHide:function(){var e=this.options.opacity;return this.setOpacity(0),this.options.opacity=e,this},clusterShow:function(){return this.setOpacity(this.options.opacity)}}),L.DistanceGrid=function(e){this._cellSize=e,this._sqCellSize=e*e,this._grid={},this._objectPoint={}},L.DistanceGrid.prototype={addObject:function(e,t){var i=this._getCoord(t.x),n=this._getCoord(t.y),r=this._grid,s=r[n]=r[n]||{},o=s[i]=s[i]||[],a=L.Util.stamp(e);this._objectPoint[a]=t,o.push(e)},updateObject:function(e,t){this.removeObject(e),this.addObject(e,t)},removeObject:function(e,t){var i,n,r=this._getCoord(t.x),s=this._getCoord(t.y),o=this._grid,a=o[s]=o[s]||{},h=a[r]=a[r]||[];for(delete this._objectPoint[L.Util.stamp(e)],i=0,n=h.length;n>i;i++)if(h[i]===e)return h.splice(i,1),1===n&&delete a[r],!0},eachObject:function(e,t){var i,n,r,s,o,a,h,l=this._grid;for(i in l){o=l[i];for(n in o)for(a=o[n],r=0,s=a.length;s>r;r++)h=e.call(t,a[r]),h&&(r--,s--)}},getNearObject:function(e){var t,i,n,r,s,o,a,h,l=this._getCoord(e.x),u=this._getCoord(e.y),_=this._objectPoint,d=this._sqCellSize,c=null;for(t=u-1;u+1>=t;t++)if(r=this._grid[t])for(i=l-1;l+1>=i;i++)if(s=r[i])for(n=0,o=s.length;o>n;n++)a=s[n],h=this._sqDist(_[L.Util.stamp(a)],e),(d>h||d>=h&&null===c)&&(d=h,c=a);return c},_getCoord:function(e){var t=Math.floor(e/this._cellSize);return isFinite(t)?t:e},_sqDist:function(e,t){var i=t.x-e.x,n=t.y-e.y;return i*i+n*n}},function(){L.QuickHull={getDistant:function(e,t){var i=t[1].lat-t[0].lat,n=t[0].lng-t[1].lng;return n*(e.lat-t[0].lat)+i*(e.lng-t[0].lng)},findMostDistantPointFromBaseLine:function(e,t){var i,n,r,s=0,o=null,a=[];for(i=t.length-1;i>=0;i--)n=t[i],r=this.getDistant(n,e),r>0&&(a.push(n),r>s&&(s=r,o=n));return{maxPoint:o,newPoints:a}},buildConvexHull:function(e,t){var i=[],n=this.findMostDistantPointFromBaseLine(e,t);return n.maxPoint?(i=i.concat(this.buildConvexHull([e[0],n.maxPoint],n.newPoints)),i=i.concat(this.buildConvexHull([n.maxPoint,e[1]],n.newPoints))):[e[0]]},getConvexHull:function(e){var t,i=!1,n=!1,r=!1,s=!1,o=null,a=null,h=null,l=null,u=null,_=null;for(t=e.length-1;t>=0;t--){var d=e[t];(i===!1||d.lat>i)&&(o=d,i=d.lat),(n===!1||d.lat<n)&&(a=d,n=d.lat),(r===!1||d.lng>r)&&(h=d,r=d.lng),(s===!1||d.lng<s)&&(l=d,s=d.lng)}n!==i?(_=a,u=o):(_=l,u=h);var c=[].concat(this.buildConvexHull([_,u],e),this.buildConvexHull([u,_],e));return c}}}(),L.MarkerCluster.include({getConvexHull:function(){var e,t,i=this.getAllChildMarkers(),n=[];for(t=i.length-1;t>=0;t--)e=i[t].getLatLng(),n.push(e);return L.QuickHull.getConvexHull(n)}}),L.MarkerCluster.include({_2PI:2*Math.PI,_circleFootSeparation:25,_circleStartAngle:0,_spiralFootSeparation:28,_spiralLengthStart:11,_spiralLengthFactor:5,_circleSpiralSwitchover:9,spiderfy:function(){if(this._group._spiderfied!==this&&!this._group._inZoomAnimation){var e,t=this.getAllChildMarkers(null,!0),i=this._group,n=i._map,r=n.latLngToLayerPoint(this._latlng);this._group._unspiderfy(),this._group._spiderfied=this,t.length>=this._circleSpiralSwitchover?e=this._generatePointsSpiral(t.length,r):(r.y+=10,e=this._generatePointsCircle(t.length,r)),this._animationSpiderfy(t,e)}},unspiderfy:function(e){this._group._inZoomAnimation||(this._animationUnspiderfy(e),this._group._spiderfied=null)},_generatePointsCircle:function(e,t){var i,n,r=this._group.options.spiderfyDistanceMultiplier*this._circleFootSeparation*(2+e),s=r/this._2PI,o=this._2PI/e,a=[];for(s=Math.max(s,35),a.length=e,i=0;e>i;i++)n=this._circleStartAngle+i*o,a[i]=new L.Point(t.x+s*Math.cos(n),t.y+s*Math.sin(n))._round();return a},_generatePointsSpiral:function(e,t){var i,n=this._group.options.spiderfyDistanceMultiplier,r=n*this._spiralLengthStart,s=n*this._spiralFootSeparation,o=n*this._spiralLengthFactor*this._2PI,a=0,h=[];for(h.length=e,i=e;i>=0;i--)e>i&&(h[i]=new L.Point(t.x+r*Math.cos(a),t.y+r*Math.sin(a))._round()),a+=s/r+5e-4*i,r+=o/a;return h},_noanimationUnspiderfy:function(){var e,t,i=this._group,n=i._map,r=i._featureGroup,s=this.getAllChildMarkers(null,!0);for(i._ignoreMove=!0,this.setOpacity(1),t=s.length-1;t>=0;t--)e=s[t],r.removeLayer(e),e._preSpiderfyLatlng&&(e.setLatLng(e._preSpiderfyLatlng),delete e._preSpiderfyLatlng),e.setZIndexOffset&&e.setZIndexOffset(0),e._spiderLeg&&(n.removeLayer(e._spiderLeg),delete e._spiderLeg);i.fire(\"unspiderfied\",{cluster:this,markers:s}),i._ignoreMove=!1,i._spiderfied=null}}),L.MarkerClusterNonAnimated=L.MarkerCluster.extend({_animationSpiderfy:function(e,t){var i,n,r,s,o=this._group,a=o._map,h=o._featureGroup,l=this._group.options.spiderLegPolylineOptions;for(o._ignoreMove=!0,i=0;i<e.length;i++)s=a.layerPointToLatLng(t[i]),n=e[i],r=new L.Polyline([this._latlng,s],l),a.addLayer(r),n._spiderLeg=r,n._preSpiderfyLatlng=n._latlng,n.setLatLng(s),n.setZIndexOffset&&n.setZIndexOffset(1e6),h.addLayer(n);this.setOpacity(.3),o._ignoreMove=!1,o.fire(\"spiderfied\",{cluster:this,markers:e})},_animationUnspiderfy:function(){this._noanimationUnspiderfy()}}),L.MarkerCluster.include({_animationSpiderfy:function(e,t){var i,n,r,s,o,a,h=this,l=this._group,u=l._map,_=l._featureGroup,d=this._latlng,c=u.latLngToLayerPoint(d),p=L.Path.SVG,f=L.extend({},this._group.options.spiderLegPolylineOptions),m=f.opacity;for(void 0===m&&(m=L.MarkerClusterGroup.prototype.options.spiderLegPolylineOptions.opacity),p?(f.opacity=0,f.className=(f.className||\"\")+\" leaflet-cluster-spider-leg\"):f.opacity=m,l._ignoreMove=!0,i=0;i<e.length;i++)n=e[i],a=u.layerPointToLatLng(t[i]),r=new L.Polyline([d,a],f),u.addLayer(r),n._spiderLeg=r,p&&(s=r._path,o=s.getTotalLength()+.1,s.style.strokeDasharray=o,s.style.strokeDashoffset=o),n.setZIndexOffset&&n.setZIndexOffset(1e6),n.clusterHide&&n.clusterHide(),_.addLayer(n),n._setPos&&n._setPos(c);for(l._forceLayout(),l._animationStart(),i=e.length-1;i>=0;i--)a=u.layerPointToLatLng(t[i]),n=e[i],n._preSpiderfyLatlng=n._latlng,n.setLatLng(a),n.clusterShow&&n.clusterShow(),p&&(r=n._spiderLeg,s=r._path,s.style.strokeDashoffset=0,r.setStyle({opacity:m}));this.setOpacity(.3),l._ignoreMove=!1,setTimeout(function(){l._animationEnd(),l.fire(\"spiderfied\",{cluster:h,markers:e})},200)},_animationUnspiderfy:function(e){var t,i,n,r,s,o,a=this,h=this._group,l=h._map,u=h._featureGroup,_=e?l._latLngToNewLayerPoint(this._latlng,e.zoom,e.center):l.latLngToLayerPoint(this._latlng),d=this.getAllChildMarkers(null,!0),c=L.Path.SVG;for(h._ignoreMove=!0,h._animationStart(),this.setOpacity(1),i=d.length-1;i>=0;i--)t=d[i],t._preSpiderfyLatlng&&(t.closePopup(),t.setLatLng(t._preSpiderfyLatlng),delete t._preSpiderfyLatlng,o=!0,t._setPos&&(t._setPos(_),o=!1),t.clusterHide&&(t.clusterHide(),o=!1),o&&u.removeLayer(t),c&&(n=t._spiderLeg,r=n._path,s=r.getTotalLength()+.1,r.style.strokeDashoffset=s,n.setStyle({opacity:0})));h._ignoreMove=!1,setTimeout(function(){var e=0;for(i=d.length-1;i>=0;i--)t=d[i],t._spiderLeg&&e++;for(i=d.length-1;i>=0;i--)t=d[i],t._spiderLeg&&(t.clusterShow&&t.clusterShow(),t.setZIndexOffset&&t.setZIndexOffset(0),e>1&&u.removeLayer(t),l.removeLayer(t._spiderLeg),delete t._spiderLeg);h._animationEnd(),h.fire(\"unspiderfied\",{cluster:a,markers:d})},200)}}),L.MarkerClusterGroup.include({_spiderfied:null,unspiderfy:function(){this._unspiderfy.apply(this,arguments)},_spiderfierOnAdd:function(){this._map.on(\"click\",this._unspiderfyWrapper,this),this._map.options.zoomAnimation&&this._map.on(\"zoomstart\",this._unspiderfyZoomStart,this),this._map.on(\"zoomend\",this._noanimationUnspiderfy,this),L.Browser.touch||this._map.getRenderer(this)},_spiderfierOnRemove:function(){this._map.off(\"click\",this._unspiderfyWrapper,this),this._map.off(\"zoomstart\",this._unspiderfyZoomStart,this),this._map.off(\"zoomanim\",this._unspiderfyZoomAnim,this),this._map.off(\"zoomend\",this._noanimationUnspiderfy,this),this._noanimationUnspiderfy()\n},_unspiderfyZoomStart:function(){this._map&&this._map.on(\"zoomanim\",this._unspiderfyZoomAnim,this)},_unspiderfyZoomAnim:function(e){L.DomUtil.hasClass(this._map._mapPane,\"leaflet-touching\")||(this._map.off(\"zoomanim\",this._unspiderfyZoomAnim,this),this._unspiderfy(e))},_unspiderfyWrapper:function(){this._unspiderfy()},_unspiderfy:function(e){this._spiderfied&&this._spiderfied.unspiderfy(e)},_noanimationUnspiderfy:function(){this._spiderfied&&this._spiderfied._noanimationUnspiderfy()},_unspiderfyLayer:function(e){e._spiderLeg&&(this._featureGroup.removeLayer(e),e.clusterShow&&e.clusterShow(),e.setZIndexOffset&&e.setZIndexOffset(0),this._map.removeLayer(e._spiderLeg),delete e._spiderLeg)}}),L.MarkerClusterGroup.include({refreshClusters:function(e){return e?e instanceof L.MarkerClusterGroup?e=e._topClusterLevel.getAllChildMarkers():e instanceof L.LayerGroup?e=e._layers:e instanceof L.MarkerCluster?e=e.getAllChildMarkers():e instanceof L.Marker&&(e=[e]):e=this._topClusterLevel.getAllChildMarkers(),this._flagParentsIconsNeedUpdate(e),this._refreshClustersIcons(),this.options.singleMarkerMode&&this._refreshSingleMarkerModeMarkers(e),this},_flagParentsIconsNeedUpdate:function(e){var t,i;for(t in e)for(i=e[t].__parent;i;)i._iconNeedsUpdate=!0,i=i.__parent},_refreshSingleMarkerModeMarkers:function(e){var t,i;for(t in e)i=e[t],this.hasLayer(i)&&i.setIcon(this._overrideMarkerIcon(i))}}),L.Marker.include({refreshIconOptions:function(e,t){var i=this.options.icon;return L.setOptions(i,e),this.setIcon(i),t&&this.__parent&&this.__parent._group.refreshClusters(this),this}}),e.MarkerClusterGroup=t,e.MarkerCluster=i});\n//# sourceMappingURL=leaflet.markercluster.js.map\n</script>\n<script>\n\"use strict\";\n/**\n * chroma.js - JavaScript library for color conversions\n *\n * Copyright (c) 2011-2018, Gregor Aisch\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. The name Gregor Aisch may not be used to endorse or promote products\n * derived from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n * OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n * EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * -------------------------------------------------------\n *\n * chroma.js includes colors from colorbrewer2.org, which are released under\n * the following license:\n *\n * Copyright (c) 2002 Cynthia Brewer, Mark Harrower,\n * and The Pennsylvania State University.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,\n * either express or implied. See the License for the specific\n * language governing permissions and limitations under the License.\n *\n * ------------------------------------------------------\n *\n * Named colors are taken from X11 Color Names.\n * http://www.w3.org/TR/css3-color/#svg-color\n *\n * @preserve\n */\n\n!function(r,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):r.chroma=e()}(this,function(){\"use strict\";for(var t=function(r,e,t){return void 0===e&&(e=0),void 0===t&&(t=1),r<e?e:t<r?t:r},e={},r=0,n=[\"Boolean\",\"Number\",\"String\",\"Function\",\"Array\",\"Date\",\"RegExp\",\"Undefined\",\"Null\"];r<n.length;r+=1){var a=n[r];e[\"[object \"+a+\"]\"]=a.toLowerCase()}var Y=function(r){return e[Object.prototype.toString.call(r)]||\"object\"},f=Math.PI,o={clip_rgb:function(r){r._clipped=!1,r._unclipped=r.slice(0);for(var e=0;e<=3;e++)e<3?((r[e]<0||255<r[e])&&(r._clipped=!0),r[e]=t(r[e],0,255)):3===e&&(r[e]=t(r[e],0,1));return r},limit:t,type:Y,unpack:function(e,r){return void 0===r&&(r=null),3<=e.length?Array.prototype.slice.call(e):\"object\"==Y(e[0])&&r?r.split(\"\").filter(function(r){return void 0!==e[0][r]}).map(function(r){return e[0][r]}):e[0]},last:function(r){if(r.length<2)return null;var e=r.length-1;return\"string\"==Y(r[e])?r[e].toLowerCase():null},PI:f,TWOPI:2*f,PITHIRD:f/3,DEG2RAD:f/180,RAD2DEG:180/f},c={format:{},autodetect:[]},i=o.last,l=o.clip_rgb,h=o.type,u=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(\"object\"===h(r[0])&&r[0].constructor&&r[0].constructor===this.constructor)return r[0];var t=i(r),n=!1;if(!t){n=!0,c.sorted||(c.autodetect=c.autodetect.sort(function(r,e){return e.p-r.p}),c.sorted=!0);for(var a=0,f=c.autodetect;a<f.length;a+=1){var o=f[a];if(t=o.test.apply(o,r))break}}if(!c.format[t])throw new Error(\"unknown format: \"+r);var u=c.format[t].apply(null,n?r:r.slice(0,-1));this._rgb=l(u),3===this._rgb.length&&this._rgb.push(1)};u.prototype.toString=function(){return\"function\"==h(this.hex)?this.hex():\"[\"+this._rgb.join(\",\")+\"]\"};var A=u,s=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(s.Color,[null].concat(r)))};s.Color=A,s.version=\"2.0.3\";var N=s,d=o.unpack,b=Math.max,p=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t=d(r,\"rgb\"),n=t[0],a=t[1],f=t[2],o=1-b(n/=255,b(a/=255,f/=255)),u=o<1?1/(1-o):0;return[(1-n-o)*u,(1-a-o)*u,(1-f-o)*u,o]},g=o.unpack,v=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t=(r=g(r,\"cmyk\"))[0],n=r[1],a=r[2],f=r[3],o=4<r.length?r[4]:1;return 1===f?[0,0,0,o]:[1<=t?0:255*(1-t)*(1-f),1<=n?0:255*(1-n)*(1-f),1<=a?0:255*(1-a)*(1-f),o]},m=o.unpack,y=o.type;A.prototype.cmyk=function(){return p(this._rgb)},N.cmyk=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(A,[null].concat(r,[\"cmyk\"])))},c.format.cmyk=v,c.autodetect.push({p:2,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=m(r,\"cmyk\"),\"array\"===y(r)&&4===r.length)return\"cmyk\"}});var w=o.unpack,k=o.last,M=function(r){return Math.round(100*r)/100},_=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t=w(r,\"hsla\"),n=k(r)||\"lsa\";return t[0]=M(t[0]||0),t[1]=M(100*t[1])+\"%\",t[2]=M(100*t[2])+\"%\",\"hsla\"===n||3<t.length&&t[3]<1?(t[3]=3<t.length?t[3]:1,n=\"hsla\"):t.length=3,n+\"(\"+t.join(\",\")+\")\"},x=o.unpack,E=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t=(r=x(r,\"rgba\"))[0],n=r[1],a=r[2];t/=255,n/=255,a/=255;var f,o,u=Math.min(t,n,a),c=Math.max(t,n,a),i=(c+u)/2;return c===u?(f=0,o=Number.NaN):f=i<.5?(c-u)/(c+u):(c-u)/(2-c-u),t==c?o=(n-a)/(c-u):n==c?o=2+(a-t)/(c-u):a==c&&(o=4+(t-n)/(c-u)),(o*=60)<0&&(o+=360),3<r.length&&void 0!==r[3]?[o,f,i,r[3]]:[o,f,i]},P=o.unpack,F=o.last,O=Math.round,j=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t=P(r,\"rgba\"),n=F(r)||\"rgb\";return\"hsl\"==n.substr(0,3)?_(E(t),n):(t[0]=O(t[0]),t[1]=O(t[1]),t[2]=O(t[2]),(\"rgba\"===n||3<t.length&&t[3]<1)&&(t[3]=3<t.length?t[3]:1,n=\"rgba\"),n+\"(\"+t.slice(0,\"rgb\"===n?3:4).join(\",\")+\")\")},G=/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/,q=/^#?([A-Fa-f0-9]{8})$/,L=function(r){if(r.match(G)){4!==r.length&&7!==r.length||(r=r.substr(1)),3===r.length&&(r=(r=r.split(\"\"))[0]+r[0]+r[1]+r[1]+r[2]+r[2]);var e=parseInt(r,16);return[e>>16,e>>8&255,255&e,1]}if(r.match(q)){9===r.length&&(r=r.substr(1));var t=parseInt(r,16);return[t>>24&255,t>>16&255,t>>8&255,Math.round((255&t)/255*100)/100]}throw new Error(\"unknown hex color: \"+r)},R=o.unpack,I=Math.round,B=function(){for(var r,e=[],t=arguments.length;t--;)e[t]=arguments[t];var n,a,f,o=(e=R(e,\"hsl\"))[0],u=e[1],c=e[2];if(0===u)n=a=f=255*c;else{var i=[0,0,0],l=[0,0,0],h=c<.5?c*(1+u):c+u-c*u,s=2*c-h,d=o/360;i[0]=d+1/3,i[1]=d,i[2]=d-1/3;for(var b=0;b<3;b++)i[b]<0&&(i[b]+=1),1<i[b]&&(i[b]-=1),6*i[b]<1?l[b]=s+6*(h-s)*i[b]:2*i[b]<1?l[b]=h:3*i[b]<2?l[b]=s+(h-s)*(2/3-i[b])*6:l[b]=s;n=(r=[I(255*l[0]),I(255*l[1]),I(255*l[2])])[0],a=r[1],f=r[2]}return 3<e.length?[n,a,f,e[3]]:[n,a,f,1]},C={aliceblue:\"#f0f8ff\",antiquewhite:\"#faebd7\",aqua:\"#00ffff\",aquamarine:\"#7fffd4\",azure:\"#f0ffff\",beige:\"#f5f5dc\",bisque:\"#ffe4c4\",black:\"#000000\",blanchedalmond:\"#ffebcd\",blue:\"#0000ff\",blueviolet:\"#8a2be2\",brown:\"#a52a2a\",burlywood:\"#deb887\",cadetblue:\"#5f9ea0\",chartreuse:\"#7fff00\",chocolate:\"#d2691e\",coral:\"#ff7f50\",cornflower:\"#6495ed\",cornflowerblue:\"#6495ed\",cornsilk:\"#fff8dc\",crimson:\"#dc143c\",cyan:\"#00ffff\",darkblue:\"#00008b\",darkcyan:\"#008b8b\",darkgoldenrod:\"#b8860b\",darkgray:\"#a9a9a9\",darkgreen:\"#006400\",darkgrey:\"#a9a9a9\",darkkhaki:\"#bdb76b\",darkmagenta:\"#8b008b\",darkolivegreen:\"#556b2f\",darkorange:\"#ff8c00\",darkorchid:\"#9932cc\",darkred:\"#8b0000\",darksalmon:\"#e9967a\",darkseagreen:\"#8fbc8f\",darkslateblue:\"#483d8b\",darkslategray:\"#2f4f4f\",darkslategrey:\"#2f4f4f\",darkturquoise:\"#00ced1\",darkviolet:\"#9400d3\",deeppink:\"#ff1493\",deepskyblue:\"#00bfff\",dimgray:\"#696969\",dimgrey:\"#696969\",dodgerblue:\"#1e90ff\",firebrick:\"#b22222\",floralwhite:\"#fffaf0\",forestgreen:\"#228b22\",fuchsia:\"#ff00ff\",gainsboro:\"#dcdcdc\",ghostwhite:\"#f8f8ff\",gold:\"#ffd700\",goldenrod:\"#daa520\",gray:\"#808080\",green:\"#008000\",greenyellow:\"#adff2f\",grey:\"#808080\",honeydew:\"#f0fff0\",hotpink:\"#ff69b4\",indianred:\"#cd5c5c\",indigo:\"#4b0082\",ivory:\"#fffff0\",khaki:\"#f0e68c\",laserlemon:\"#ffff54\",lavender:\"#e6e6fa\",lavenderblush:\"#fff0f5\",lawngreen:\"#7cfc00\",lemonchiffon:\"#fffacd\",lightblue:\"#add8e6\",lightcoral:\"#f08080\",lightcyan:\"#e0ffff\",lightgoldenrod:\"#fafad2\",lightgoldenrodyellow:\"#fafad2\",lightgray:\"#d3d3d3\",lightgreen:\"#90ee90\",lightgrey:\"#d3d3d3\",lightpink:\"#ffb6c1\",lightsalmon:\"#ffa07a\",lightseagreen:\"#20b2aa\",lightskyblue:\"#87cefa\",lightslategray:\"#778899\",lightslategrey:\"#778899\",lightsteelblue:\"#b0c4de\",lightyellow:\"#ffffe0\",lime:\"#00ff00\",limegreen:\"#32cd32\",linen:\"#faf0e6\",magenta:\"#ff00ff\",maroon:\"#800000\",maroon2:\"#7f0000\",maroon3:\"#b03060\",mediumaquamarine:\"#66cdaa\",mediumblue:\"#0000cd\",mediumorchid:\"#ba55d3\",mediumpurple:\"#9370db\",mediumseagreen:\"#3cb371\",mediumslateblue:\"#7b68ee\",mediumspringgreen:\"#00fa9a\",mediumturquoise:\"#48d1cc\",mediumvioletred:\"#c71585\",midnightblue:\"#191970\",mintcream:\"#f5fffa\",mistyrose:\"#ffe4e1\",moccasin:\"#ffe4b5\",navajowhite:\"#ffdead\",navy:\"#000080\",oldlace:\"#fdf5e6\",olive:\"#808000\",olivedrab:\"#6b8e23\",orange:\"#ffa500\",orangered:\"#ff4500\",orchid:\"#da70d6\",palegoldenrod:\"#eee8aa\",palegreen:\"#98fb98\",paleturquoise:\"#afeeee\",palevioletred:\"#db7093\",papayawhip:\"#ffefd5\",peachpuff:\"#ffdab9\",peru:\"#cd853f\",pink:\"#ffc0cb\",plum:\"#dda0dd\",powderblue:\"#b0e0e6\",purple:\"#800080\",purple2:\"#7f007f\",purple3:\"#a020f0\",rebeccapurple:\"#663399\",red:\"#ff0000\",rosybrown:\"#bc8f8f\",royalblue:\"#4169e1\",saddlebrown:\"#8b4513\",salmon:\"#fa8072\",sandybrown:\"#f4a460\",seagreen:\"#2e8b57\",seashell:\"#fff5ee\",sienna:\"#a0522d\",silver:\"#c0c0c0\",skyblue:\"#87ceeb\",slateblue:\"#6a5acd\",slategray:\"#708090\",slategrey:\"#708090\",snow:\"#fffafa\",springgreen:\"#00ff7f\",steelblue:\"#4682b4\",tan:\"#d2b48c\",teal:\"#008080\",thistle:\"#d8bfd8\",tomato:\"#ff6347\",turquoise:\"#40e0d0\",violet:\"#ee82ee\",wheat:\"#f5deb3\",white:\"#ffffff\",whitesmoke:\"#f5f5f5\",yellow:\"#ffff00\",yellowgreen:\"#9acd32\"},D=/^rgb\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*\\)$/,S=/^rgba\\(\\s*(-?\\d+),\\s*(-?\\d+)\\s*,\\s*(-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/,$=/^rgb\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/,z=/^rgba\\(\\s*(-?\\d+(?:\\.\\d+)?)%,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/,T=/^hsl\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*\\)$/,U=/^hsla\\(\\s*(-?\\d+(?:\\.\\d+)?),\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)$/,V=Math.round,W=function(r){if(r=r.toLowerCase().trim(),C[r])return L(C[r]);var e;if(e=r.match(D)){for(var t=e.slice(1,4),n=0;n<3;n++)t[n]=+t[n];return t[3]=1,t}if(e=r.match(S)){for(var a=e.slice(1,5),f=0;f<4;f++)a[f]=+a[f];return a}if(e=r.match($)){for(var o=e.slice(1,4),u=0;u<3;u++)o[u]=V(2.55*o[u]);return o[3]=1,o}if(e=r.match(z)){for(var c=e.slice(1,5),i=0;i<3;i++)c[i]=V(2.55*c[i]);return c[3]=+c[3],c}if(e=r.match(T)){var l=e.slice(1,4);l[1]*=.01,l[2]*=.01;var h=B(l);return h[3]=1,h}if(e=r.match(U)){var s=e.slice(1,4);s[1]*=.01,s[2]*=.01;var d=B(s);return d[3]=+e[4],d}};W.test=function(r){return D.test(r)||S.test(r)||$.test(r)||z.test(r)||T.test(r)||U.test(r)};var X=W,H=o.type;A.prototype.css=function(r){return j(this._rgb,r)},N.css=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(A,[null].concat(r,[\"css\"])))},c.format.css=X,c.autodetect.push({p:5,test:function(r){for(var e=[],t=arguments.length-1;0<t--;)e[t]=arguments[t+1];if(!e.length&&\"string\"===H(r)&&X.test(r))return\"css\"}});var J=o.unpack;c.format.gl=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t=J(r,\"rgba\");return t[0]*=255,t[1]*=255,t[2]*=255,t},N.gl=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(A,[null].concat(r,[\"gl\"])))},A.prototype.gl=function(){var r=this._rgb;return[r[0]/255,r[1]/255,r[2]/255,r[3]]};var K=o.unpack,Q=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t,n=K(r,\"rgb\"),a=n[0],f=n[1],o=n[2],u=Math.min(a,f,o),c=Math.max(a,f,o),i=c-u,l=100*i/255,h=u/(255-i)*100;return 0===i?t=Number.NaN:(a===c&&(t=(f-o)/i),f===c&&(t=2+(o-a)/i),o===c&&(t=4+(a-f)/i),(t*=60)<0&&(t+=360)),[t,l,h]},Z=o.unpack,rr=Math.floor,er=function(){for(var r,e,t,n,a,f,o=[],u=arguments.length;u--;)o[u]=arguments[u];var c,i,l,h=(o=Z(o,\"hcg\"))[0],s=o[1],d=o[2];d*=255;var b=255*s;if(0===s)c=i=l=d;else{360===h&&(h=0),360<h&&(h-=360),h<0&&(h+=360);var p=rr(h/=60),g=h-p,v=d*(1-s),m=v+b*(1-g),y=v+b*g,w=v+b;switch(p){case 0:c=(r=[w,y,v])[0],i=r[1],l=r[2];break;case 1:c=(e=[m,w,v])[0],i=e[1],l=e[2];break;case 2:c=(t=[v,w,y])[0],i=t[1],l=t[2];break;case 3:c=(n=[v,m,w])[0],i=n[1],l=n[2];break;case 4:c=(a=[y,v,w])[0],i=a[1],l=a[2];break;case 5:c=(f=[w,v,m])[0],i=f[1],l=f[2]}}return[c,i,l,3<o.length?o[3]:1]},tr=o.unpack,nr=o.type;A.prototype.hcg=function(){return Q(this._rgb)},N.hcg=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(A,[null].concat(r,[\"hcg\"])))},c.format.hcg=er,c.autodetect.push({p:1,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=tr(r,\"hcg\"),\"array\"===nr(r)&&3===r.length)return\"hcg\"}});var ar=o.unpack,fr=o.last,or=Math.round,ur=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t=ar(r,\"rgba\"),n=t[0],a=t[1],f=t[2],o=t[3],u=fr(r)||\"auto\";void 0===o&&(o=1),\"auto\"===u&&(u=o<1?\"rgba\":\"rgb\");var c=\"000000\"+((n=or(n))<<16|(a=or(a))<<8|(f=or(f))).toString(16);c=c.substr(c.length-6);var i=\"0\"+or(255*o).toString(16);switch(i=i.substr(i.length-2),u.toLowerCase()){case\"rgba\":return\"#\"+c+i;case\"argb\":return\"#\"+i+c;default:return\"#\"+c}},cr=o.type;A.prototype.hex=function(r){return ur(this._rgb,r)},N.hex=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(A,[null].concat(r,[\"hex\"])))},c.format.hex=L,c.autodetect.push({p:4,test:function(r){for(var e=[],t=arguments.length-1;0<t--;)e[t]=arguments[t+1];if(!e.length&&\"string\"===cr(r)&&[3,4,6,7,8,9].includes(r.length))return\"hex\"}});var ir=o.unpack,lr=o.TWOPI,hr=Math.min,sr=Math.sqrt,dr=Math.acos,br=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t,n=ir(r,\"rgb\"),a=n[0],f=n[1],o=n[2],u=hr(a/=255,f/=255,o/=255),c=(a+f+o)/3,i=0<c?1-u/c:0;return 0===i?t=NaN:(t=(a-f+(a-o))/2,t/=sr((a-f)*(a-f)+(a-o)*(f-o)),t=dr(t),f<o&&(t=lr-t),t/=lr),[360*t,i,c]},pr=o.unpack,gr=o.limit,vr=o.TWOPI,mr=o.PITHIRD,yr=Math.cos,wr=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t,n,a,f=(r=pr(r,\"hsi\"))[0],o=r[1],u=r[2];return isNaN(f)&&(f=0),isNaN(o)&&(o=0),360<f&&(f-=360),f<0&&(f+=360),(f/=360)<1/3?n=1-((a=(1-o)/3)+(t=(1+o*yr(vr*f)/yr(mr-vr*f))/3)):f<2/3?a=1-((t=(1-o)/3)+(n=(1+o*yr(vr*(f-=1/3))/yr(mr-vr*f))/3)):t=1-((n=(1-o)/3)+(a=(1+o*yr(vr*(f-=2/3))/yr(mr-vr*f))/3)),[255*(t=gr(u*t*3)),255*(n=gr(u*n*3)),255*(a=gr(u*a*3)),3<r.length?r[3]:1]},kr=o.unpack,Mr=o.type;A.prototype.hsi=function(){return br(this._rgb)},N.hsi=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(A,[null].concat(r,[\"hsi\"])))},c.format.hsi=wr,c.autodetect.push({p:2,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=kr(r,\"hsi\"),\"array\"===Mr(r)&&3===r.length)return\"hsi\"}});var Nr=o.unpack,_r=o.type;A.prototype.hsl=function(){return E(this._rgb)},N.hsl=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(A,[null].concat(r,[\"hsl\"])))},c.format.hsl=B,c.autodetect.push({p:2,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=Nr(r,\"hsl\"),\"array\"===_r(r)&&3===r.length)return\"hsl\"}});var xr=o.unpack,Ar=Math.min,Er=Math.max,Pr=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t,n,a,f=(r=xr(r,\"rgb\"))[0],o=r[1],u=r[2],c=Ar(f,o,u),i=Er(f,o,u),l=i-c;return a=i/255,0===i?(t=Number.NaN,n=0):(n=l/i,f===i&&(t=(o-u)/l),o===i&&(t=2+(u-f)/l),u===i&&(t=4+(f-o)/l),(t*=60)<0&&(t+=360)),[t,n,a]},Fr=o.unpack,Or=Math.floor,jr=function(){for(var r,e,t,n,a,f,o=[],u=arguments.length;u--;)o[u]=arguments[u];var c,i,l,h=(o=Fr(o,\"hsv\"))[0],s=o[1],d=o[2];if(d*=255,0===s)c=i=l=d;else{360===h&&(h=0),360<h&&(h-=360),h<0&&(h+=360);var b=Or(h/=60),p=h-b,g=d*(1-s),v=d*(1-s*p),m=d*(1-s*(1-p));switch(b){case 0:c=(r=[d,m,g])[0],i=r[1],l=r[2];break;case 1:c=(e=[v,d,g])[0],i=e[1],l=e[2];break;case 2:c=(t=[g,d,m])[0],i=t[1],l=t[2];break;case 3:c=(n=[g,v,d])[0],i=n[1],l=n[2];break;case 4:c=(a=[m,g,d])[0],i=a[1],l=a[2];break;case 5:c=(f=[d,g,v])[0],i=f[1],l=f[2]}}return[c,i,l,3<o.length?o[3]:1]},Gr=o.unpack,qr=o.type;A.prototype.hsv=function(){return Pr(this._rgb)},N.hsv=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(A,[null].concat(r,[\"hsv\"])))},c.format.hsv=jr,c.autodetect.push({p:2,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=Gr(r,\"hsv\"),\"array\"===qr(r)&&3===r.length)return\"hsv\"}});var Lr=18,Rr=.95047,Ir=1,Br=1.08883,Cr=.137931034,Dr=.206896552,Sr=.12841855,$r=.008856452,Yr=o.unpack,zr=Math.pow,Tr=function(r){return(r/=255)<=.04045?r/12.92:zr((r+.055)/1.055,2.4)},Ur=function(r){return $r<r?zr(r,1/3):r/Sr+Cr},Vr=function(r,e,t){return r=Tr(r),e=Tr(e),t=Tr(t),[Ur((.4124564*r+.3575761*e+.1804375*t)/Rr),Ur((.2126729*r+.7151522*e+.072175*t)/Ir),Ur((.0193339*r+.119192*e+.9503041*t)/Br)]},Wr=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t=Yr(r,\"rgb\"),n=t[0],a=t[1],f=t[2],o=Vr(n,a,f),u=o[0],c=o[1],i=116*c-16;return[i<0?0:i,500*(u-c),200*(c-o[2])]},Xr=o.unpack,Hr=Math.pow,Jr=function(r){return 255*(r<=.00304?12.92*r:1.055*Hr(r,1/2.4)-.055)},Kr=function(r){return Dr<r?r*r*r:Sr*(r-Cr)},Qr=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t,n,a,f=(r=Xr(r,\"lab\"))[0],o=r[1],u=r[2];return n=(f+16)/116,t=isNaN(o)?n:n+o/500,a=isNaN(u)?n:n-u/200,n=Ir*Kr(n),t=Rr*Kr(t),a=Br*Kr(a),[Jr(3.2404542*t-1.5371385*n-.4985314*a),Jr(-.969266*t+1.8760108*n+.041556*a),Jr(.0556434*t-.2040259*n+1.0572252*a),3<r.length?r[3]:1]},Zr=o.unpack,re=o.type;A.prototype.lab=function(){return Wr(this._rgb)},N.lab=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(A,[null].concat(r,[\"lab\"])))},c.format.lab=Qr,c.autodetect.push({p:2,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=Zr(r,\"lab\"),\"array\"===re(r)&&3===r.length)return\"lab\"}});var ee=o.unpack,te=o.RAD2DEG,ne=Math.sqrt,ae=Math.atan2,fe=Math.round,oe=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t=ee(r,\"lab\"),n=t[0],a=t[1],f=t[2],o=ne(a*a+f*f),u=(ae(f,a)*te+360)%360;return 0===fe(1e4*o)&&(u=Number.NaN),[n,o,u]},ue=o.unpack,ce=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t=ue(r,\"rgb\"),n=t[0],a=t[1],f=t[2],o=Wr(n,a,f),u=o[0],c=o[1],i=o[2];return oe(u,c,i)},ie=o.unpack,le=o.DEG2RAD,he=Math.sin,se=Math.cos,de=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t=ie(r,\"lch\"),n=t[0],a=t[1],f=t[2];return isNaN(f)&&(f=0),[n,se(f*=le)*a,he(f)*a]},be=o.unpack,pe=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t=(r=be(r,\"lch\"))[0],n=r[1],a=r[2],f=de(t,n,a),o=f[0],u=f[1],c=f[2],i=Qr(o,u,c);return[i[0],i[1],i[2],3<r.length?r[3]:1]},ge=o.unpack,ve=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t=ge(r,\"hcl\").reverse();return pe.apply(void 0,t)},me=o.unpack,ye=o.type;A.prototype.lch=function(){return ce(this._rgb)},A.prototype.hcl=function(){return ce(this._rgb).reverse()},N.lch=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(A,[null].concat(r,[\"lch\"])))},N.hcl=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(A,[null].concat(r,[\"hcl\"])))},c.format.lch=pe,c.format.hcl=ve,[\"lch\",\"hcl\"].forEach(function(t){return c.autodetect.push({p:2,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=me(r,t),\"array\"===ye(r)&&3===r.length)return t}})});var we=o.type;A.prototype.name=function(){for(var r=ur(this._rgb,\"rgb\"),e=0,t=Object.keys(C);e<t.length;e+=1){var n=t[e];if(C[n]===r)return n.toLowerCase()}return r},c.format.named=function(r){if(r=r.toLowerCase(),C[r])return L(C[r]);throw new Error(\"unknown color name: \"+r)},c.autodetect.push({p:5,test:function(r){for(var e=[],t=arguments.length-1;0<t--;)e[t]=arguments[t+1];if(!e.length&&\"string\"===we(r)&&C[r.toLowerCase()])return\"named\"}});var ke=o.unpack,Me=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t=ke(r,\"rgb\");return(t[0]<<16)+(t[1]<<8)+t[2]},Ne=o.type,_e=function(r){if(\"number\"==Ne(r)&&0<=r&&r<=16777215)return[r>>16,r>>8&255,255&r,1];throw new Error(\"unknown num color: \"+r)},xe=o.type;A.prototype.num=function(){return Me(this._rgb)},N.num=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(A,[null].concat(r,[\"num\"])))},c.format.num=_e,c.autodetect.push({p:5,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(1===r.length&&\"number\"===xe(r[0])&&0<=r[0]&&r[0]<=16777215)return\"num\"}});var Ae=o.unpack,Ee=o.type,Pe=Math.round;A.prototype.rgb=function(r){return void 0===r&&(r=!0),!1===r?this._rgb.slice(0,3):this._rgb.slice(0,3).map(Pe)},A.prototype.rgba=function(t){return void 0===t&&(t=!0),this._rgb.slice(0,4).map(function(r,e){return e<3?!1===t?r:Pe(r):r})},N.rgb=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(A,[null].concat(r,[\"rgb\"])))},c.format.rgb=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];var t=Ae(r,\"rgba\");return void 0===t[3]&&(t[3]=1),t},c.autodetect.push({p:3,test:function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];if(r=Ae(r,\"rgba\"),\"array\"===Ee(r)&&(3===r.length||4===r.length&&\"number\"==Ee(r[3])&&0<=r[3]&&r[3]<=1))return\"rgb\"}});var Fe=Math.log,Oe=function(r){var e,t,n,a=r/100;return n=a<66?(e=255,t=-155.25485562709179-.44596950469579133*(t=a-2)+104.49216199393888*Fe(t),a<20?0:.8274096064007395*(n=a-10)-254.76935184120902+115.67994401066147*Fe(n)):(e=351.97690566805693+.114206453784165*(e=a-55)-40.25366309332127*Fe(e),t=325.4494125711974+.07943456536662342*(t=a-50)-28.0852963507957*Fe(t),255),[e,t,n,1]},je=o.unpack,Ge=Math.round,qe=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];for(var t,n=je(r,\"rgb\"),a=n[0],f=n[2],o=1e3,u=4e4;.4<u-o;){var c=Oe(t=.5*(u+o));c[2]/c[0]>=f/a?u=t:o=t}return Ge(t)};A.prototype.temp=A.prototype.kelvin=A.prototype.temperature=function(){return qe(this._rgb)},N.temp=N.kelvin=N.temperature=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];return new(Function.prototype.bind.apply(A,[null].concat(r,[\"temp\"])))},c.format.temp=c.format.kelvin=c.format.temperature=Oe;var Le=o.type;A.prototype.alpha=function(r,e){return void 0===e&&(e=!1),void 0!==r&&\"number\"===Le(r)?e?(this._rgb[3]=r,this):new A([this._rgb[0],this._rgb[1],this._rgb[2],r],\"rgb\"):this._rgb[3]},A.prototype.clipped=function(){return this._rgb._clipped||!1},A.prototype.darken=function(r){void 0===r&&(r=1);var e=this.lab();return e[0]-=Lr*r,new A(e,\"lab\").alpha(this.alpha(),!0)},A.prototype.brighten=function(r){return void 0===r&&(r=1),this.darken(-r)},A.prototype.darker=A.prototype.darken,A.prototype.brighter=A.prototype.brighten,A.prototype.get=function(r){var e=r.split(\".\"),t=e[0],n=e[1],a=this[t]();if(n){var f=t.indexOf(n);if(-1<f)return a[f];throw new Error(\"unknown channel \"+n+\" in mode \"+t)}return a};var Re=o.type,Ie=Math.pow;A.prototype.luminance=function(a){if(void 0===a||\"number\"!==Re(a))return Be.apply(void 0,this._rgb.slice(0,3));if(0===a)return new A([0,0,0,this._rgb[3]],\"rgb\");if(1===a)return new A([255,255,255,this._rgb[3]],\"rgb\");var r=this.luminance(),f=20,o=function(r,e){var t=r.interpolate(e,.5,\"rgb\"),n=t.luminance();return Math.abs(a-n)<1e-7||!f--?t:a<n?o(r,t):o(t,e)},e=(a<r?o(new A([0,0,0]),this):o(this,new A([255,255,255]))).rgb();return new A(e.concat([this._rgb[3]]))};var Be=function(r,e,t){return.2126*(r=Ce(r))+.7152*(e=Ce(e))+.0722*(t=Ce(t))},Ce=function(r){return(r/=255)<=.03928?r/12.92:Ie((r+.055)/1.055,2.4)},De={},Se=o.type,$e=function(r,e,t){void 0===t&&(t=.5);for(var n=[],a=arguments.length-3;0<a--;)n[a]=arguments[a+3];var f=n[0]||\"lrgb\";if(De[f]||n.length||(f=Object.keys(De)[0]),!De[f])throw new Error(\"interpolation mode \"+f+\" is not defined\");return\"object\"!==Se(r)&&(r=new A(r)),\"object\"!==Se(e)&&(e=new A(e)),De[f](r,e,t).alpha(r.alpha()+t*(e.alpha()-r.alpha()))};A.prototype.mix=A.prototype.interpolate=function(r,e){void 0===e&&(e=.5);for(var t=[],n=arguments.length-2;0<n--;)t[n]=arguments[n+2];return $e.apply(void 0,[this,r,e].concat(t))},A.prototype.premultiply=function(r){void 0===r&&(r=!1);var e=this._rgb,t=e[3];return r?(this._rgb=[e[0]*t,e[1]*t,e[2]*t,t],this):new A([e[0]*t,e[1]*t,e[2]*t,t],\"rgb\")},A.prototype.saturate=function(r){void 0===r&&(r=1);var e=this.lch();return e[1]+=Lr*r,e[1]<0&&(e[1]=0),new A(e,\"lch\").alpha(this.alpha(),!0)},A.prototype.desaturate=function(r){return void 0===r&&(r=1),this.saturate(-r)};var Ye=o.type;A.prototype.set=function(r,e,t){void 0===t&&(t=!1);var n=r.split(\".\"),a=n[0],f=n[1],o=this[a]();if(f){var u=a.indexOf(f);if(-1<u){if(\"string\"==Ye(e))switch(e.charAt(0)){case\"+\":case\"-\":o[u]+=+e;break;case\"*\":o[u]*=+e.substr(1);break;case\"/\":o[u]/=+e.substr(1);break;default:o[u]=+e}else{if(\"number\"!==Ye(e))throw new Error(\"unsupported value for Color.set\");o[u]=e}var c=new A(o,a);return t?(this._rgb=c._rgb,this):c}throw new Error(\"unknown channel \"+f+\" in mode \"+a)}return o};De.rgb=function(r,e,t){var n=r._rgb,a=e._rgb;return new A(n[0]+t*(a[0]-n[0]),n[1]+t*(a[1]-n[1]),n[2]+t*(a[2]-n[2]),\"rgb\")};var ze=Math.sqrt,Te=Math.pow;De.lrgb=function(r,e,t){var n=r._rgb,a=n[0],f=n[1],o=n[2],u=e._rgb,c=u[0],i=u[1],l=u[2];return new A(ze(Te(a,2)*(1-t)+Te(c,2)*t),ze(Te(f,2)*(1-t)+Te(i,2)*t),ze(Te(o,2)*(1-t)+Te(l,2)*t),\"rgb\")};De.lab=function(r,e,t){var n=r.lab(),a=e.lab();return new A(n[0]+t*(a[0]-n[0]),n[1]+t*(a[1]-n[1]),n[2]+t*(a[2]-n[2]),\"lab\")};var Ue=function(r,e,t,n){var a,f,o,u,c,i,l,h,s,d,b,p;return\"hsl\"===n?(o=r.hsl(),u=e.hsl()):\"hsv\"===n?(o=r.hsv(),u=e.hsv()):\"hcg\"===n?(o=r.hcg(),u=e.hcg()):\"hsi\"===n?(o=r.hsi(),u=e.hsi()):\"lch\"!==n&&\"hcl\"!==n||(n=\"hcl\",o=r.hcl(),u=e.hcl()),\"h\"===n.substr(0,1)&&(c=(a=o)[0],l=a[1],s=a[2],i=(f=u)[0],h=f[1],d=f[2]),isNaN(c)||isNaN(i)?isNaN(c)?isNaN(i)?p=Number.NaN:(p=i,1!=s&&0!=s||\"hsv\"==n||(b=h)):(p=c,1!=d&&0!=d||\"hsv\"==n||(b=l)):p=c+t*(c<i&&180<i-c?i-(c+360):i<c&&180<c-i?i+360-c:i-c),void 0===b&&(b=l+t*(h-l)),new A([p,b,s+t*(d-s)],n)},Ve=function(r,e,t){return Ue(r,e,t,\"lch\")};De.lch=Ve,De.hcl=Ve;De.num=function(r,e,t){var n=r.num(),a=e.num();return new A(n+t*(a-n),\"num\")};De.hcg=function(r,e,t){return Ue(r,e,t,\"hcg\")};De.hsi=function(r,e,t){return Ue(r,e,t,\"hsi\")};De.hsl=function(r,e,t){return Ue(r,e,t,\"hsl\")};De.hsv=function(r,e,t){return Ue(r,e,t,\"hsv\")};var We=o.clip_rgb,Xe=Math.pow,He=Math.sqrt,Je=Math.PI,Ke=Math.cos,Qe=Math.sin,Ze=Math.atan2,rt=function(r){for(var e=1/r.length,t=[0,0,0,0],n=0,a=r;n<a.length;n+=1){var f=a[n]._rgb;t[0]+=Xe(f[0],2)*e,t[1]+=Xe(f[1],2)*e,t[2]+=Xe(f[2],2)*e,t[3]+=f[3]*e}return t[0]=He(t[0]),t[1]=He(t[1]),t[2]=He(t[2]),.9999999<t[3]&&(t[3]=1),new A(We(t))},et=o.type,tt=Math.pow,nt=function(i){var u=\"rgb\",c=N(\"#ccc\"),e=0,l=[0,1],h=[],s=[0,0],d=!1,b=[],t=!1,p=0,g=1,n=!1,v={},m=!0,y=1,a=function(r){if((r=r||[\"#fff\",\"#000\"])&&\"string\"===et(r)&&N.brewer&&N.brewer[r.toLowerCase()]&&(r=N.brewer[r.toLowerCase()]),\"array\"===et(r)){1===r.length&&(r=[r[0],r[0]]),r=r.slice(0);for(var e=0;e<r.length;e++)r[e]=N(r[e]);for(var t=h.length=0;t<r.length;t++)h.push(t/(r.length-1))}return f(),b=r},w=function(r){return r},k=function(r,e){var t,n;if(null==e&&(e=!1),isNaN(r)||null===r)return c;e?n=r:n=d&&2<d.length?function(r){if(null==d)return 0;for(var e=d.length-1,t=0;t<e&&r>=d[t];)t++;return t-1}(r)/(d.length-2):g!==p?(r-p)/(g-p):1;e||(n=w(n)),1!==y&&(n=tt(n,y)),n=s[0]+n*(1-s[0]-s[1]),n=Math.min(1,Math.max(0,n));var a=Math.floor(1e4*n);if(m&&v[a])t=v[a];else{if(\"array\"===et(b))for(var f=0;f<h.length;f++){var o=h[f];if(n<=o){t=b[f];break}if(o<=n&&f===h.length-1){t=b[f];break}if(o<n&&n<h[f+1]){n=(n-o)/(h[f+1]-o),t=N.interpolate(b[f],b[f+1],n,u);break}}else\"function\"===et(b)&&(t=b(n));m&&(v[a]=t)}return t},f=function(){return v={}};a(i);var M=function(r){var e=N(k(r));return t&&e[t]?e[t]():e};return M.classes=function(r){if(null==r)return d;if(\"array\"===et(r))l=[(d=r)[0],r[r.length-1]];else{var e=N.analyze(l);d=0===r?[e.min,e.max]:N.limits(e,\"e\",r)}return M},M.domain=function(r){if(!arguments.length)return l;p=r[0],g=r[r.length-1],h=[];var e=b.length;if(r.length===e&&p!==g)for(var t=0,n=Array.from(r);t<n.length;t+=1){var a=n[t];h.push((a-p)/(g-p))}else for(var f=0;f<e;f++)h.push(f/(e-1));return l=[p,g],M},M.mode=function(r){return arguments.length?(u=r,f(),M):u},M.range=function(r,e){return a(r),M},M.out=function(r){return t=r,M},M.spread=function(r){return arguments.length?(e=r,M):e},M.correctLightness=function(r){return null==r&&(r=!0),n=r,f(),w=n?function(r){for(var e=k(0,!0).lab()[0],t=k(1,!0).lab()[0],n=t<e,a=k(r,!0).lab()[0],f=e+(t-e)*r,o=a-f,u=0,c=1,i=20;.01<Math.abs(o)&&0<i--;)n&&(o*=-1),r+=o<0?.5*(c-(u=r)):.5*(u-(c=r)),a=k(r,!0).lab()[0],o=a-f;return r}:function(r){return r},M},M.padding=function(r){return null!=r?(\"number\"===et(r)&&(r=[r,r]),s=r,M):s},M.colors=function(e,t){arguments.length<2&&(t=\"hex\");var r=[];if(0===arguments.length)r=b.slice(0);else if(1===e)r=[M(.5)];else if(1<e){var n=l[0],a=l[1]-n;r=function(r,e,t){for(var n=[],a=r<e,f=t?a?e+1:e-1:e,o=r;a?o<f:f<o;a?o++:o--)n.push(o);return n}(0,e,!1).map(function(r){return M(n+r/(e-1)*a)})}else{i=[];var f=[];if(d&&2<d.length)for(var o=1,u=d.length,c=1<=u;c?o<u:u<o;c?o++:o--)f.push(.5*(d[o-1]+d[o]));else f=l;r=f.map(function(r){return M(r)})}return N[t]&&(r=r.map(function(r){return r[t]()})),r},M.cache=function(r){return null!=r?(m=r,M):m},M.gamma=function(r){return null!=r?(y=r,M):y},M.nodata=function(r){return null!=r?(c=N(r),M):c},M};var at=function(r){var e,t,n,a,f,o,u;if(2===(r=r.map(function(r){return new A(r)})).length)e=r.map(function(r){return r.lab()}),f=e[0],o=e[1],a=function(e){var r=[0,1,2].map(function(r){return f[r]+e*(o[r]-f[r])});return new A(r,\"lab\")};else if(3===r.length)t=r.map(function(r){return r.lab()}),f=t[0],o=t[1],u=t[2],a=function(e){var r=[0,1,2].map(function(r){return(1-e)*(1-e)*f[r]+2*(1-e)*e*o[r]+e*e*u[r]});return new A(r,\"lab\")};else if(4===r.length){var c;n=r.map(function(r){return r.lab()}),f=n[0],o=n[1],u=n[2],c=n[3],a=function(e){var r=[0,1,2].map(function(r){return(1-e)*(1-e)*(1-e)*f[r]+3*(1-e)*(1-e)*e*o[r]+3*(1-e)*e*e*u[r]+e*e*e*c[r]});return new A(r,\"lab\")}}else if(5===r.length){var i=at(r.slice(0,3)),l=at(r.slice(2,5));a=function(r){return r<.5?i(2*r):l(2*(r-.5))}}return a},ft=function(r,e,t){if(!ft[t])throw new Error(\"unknown blend mode \"+t);return ft[t](r,e)},ot=function(a){return function(r,e){var t=N(e).rgb(),n=N(r).rgb();return N.rgb(a(t,n))}},ut=function(n){return function(r,e){var t=[];return t[0]=n(r[0],e[0]),t[1]=n(r[1],e[1]),t[2]=n(r[2],e[2]),t}};ft.normal=ot(ut(function(r){return r})),ft.multiply=ot(ut(function(r,e){return r*e/255})),ft.screen=ot(ut(function(r,e){return 255*(1-(1-r/255)*(1-e/255))})),ft.overlay=ot(ut(function(r,e){return e<128?2*r*e/255:255*(1-2*(1-r/255)*(1-e/255))})),ft.darken=ot(ut(function(r,e){return e<r?e:r})),ft.lighten=ot(ut(function(r,e){return e<r?r:e})),ft.dodge=ot(ut(function(r,e){return 255===r?255:255<(r=e/255*255/(1-r/255))?255:r})),ft.burn=ot(ut(function(r,e){return 255*(1-(1-e/255)/(r/255))}));for(var ct=ft,it=o.type,lt=o.clip_rgb,ht=o.TWOPI,st=Math.pow,dt=Math.sin,bt=Math.cos,pt=Math.floor,gt=Math.random,vt=Math.log,mt=Math.pow,yt=Math.floor,wt=Math.abs,kt=function(r,e){void 0===e&&(e=null);var t={min:Number.MAX_VALUE,max:-1*Number.MAX_VALUE,sum:0,values:[],count:0};return\"object\"===Y(r)&&(r=Object.values(r)),r.forEach(function(r){e&&\"object\"===Y(r)&&(r=r[e]),null==r||isNaN(r)||(t.values.push(r),t.sum+=r,r<t.min&&(t.min=r),r>t.max&&(t.max=r),t.count+=1)}),t.domain=[t.min,t.max],t.limits=function(r,e){return Mt(t,r,e)},t},Mt=function(r,e,t){void 0===e&&(e=\"equal\"),void 0===t&&(t=7),\"array\"==Y(r)&&(r=kt(r));var n=r.min,a=r.max,f=r.values.sort(function(r,e){return r-e});if(1===t)return[n,a];var o=[];if(\"c\"===e.substr(0,1)&&(o.push(n),o.push(a)),\"e\"===e.substr(0,1)){o.push(n);for(var u=1;u<t;u++)o.push(n+u/t*(a-n));o.push(a)}else if(\"l\"===e.substr(0,1)){if(n<=0)throw new Error(\"Logarithmic scales are only possible for values > 0\");var c=Math.LOG10E*vt(n),i=Math.LOG10E*vt(a);o.push(n);for(var l=1;l<t;l++)o.push(mt(10,c+l/t*(i-c)));o.push(a)}else if(\"q\"===e.substr(0,1)){o.push(n);for(var h=1;h<t;h++){var s=(f.length-1)*h/t,d=yt(s);if(d===s)o.push(f[d]);else{var b=s-d;o.push(f[d]*(1-b)+f[d+1]*b)}}o.push(a)}else if(\"k\"===e.substr(0,1)){var p,g=f.length,v=new Array(g),m=new Array(t),y=!0,w=0,k=null;(k=[]).push(n);for(var M=1;M<t;M++)k.push(n+M/t*(a-n));for(k.push(a);y;){for(var N=0;N<t;N++)m[N]=0;for(var _=0;_<g;_++)for(var x=f[_],A=Number.MAX_VALUE,E=void 0,P=0;P<t;P++){var F=wt(k[P]-x);F<A&&(A=F,E=P),m[E]++,v[_]=E}for(var O=new Array(t),j=0;j<t;j++)O[j]=null;for(var G=0;G<g;G++)null===O[p=v[G]]?O[p]=f[G]:O[p]+=f[G];for(var q=0;q<t;q++)O[q]*=1/m[q];y=!1;for(var L=0;L<t;L++)if(O[L]!==k[L]){y=!0;break}k=O,200<++w&&(y=!1)}for(var R={},I=0;I<t;I++)R[I]=[];for(var B=0;B<g;B++)R[p=v[B]].push(f[B]);for(var C=[],D=0;D<t;D++)C.push(R[D][0]),C.push(R[D][R[D].length-1]);C=C.sort(function(r,e){return r-e}),o.push(C[0]);for(var S=1;S<C.length;S+=2){var $=C[S];isNaN($)||-1!==o.indexOf($)||o.push($)}}return o},Nt={analyze:kt,limits:Mt},_t=Math.sqrt,xt=Math.atan2,At=Math.abs,Et=Math.cos,Pt=Math.PI,Ft={cool:function(){return nt([N.hsl(180,1,.9),N.hsl(250,.7,.4)])},hot:function(){return nt([\"#000\",\"#f00\",\"#ff0\",\"#fff\"]).mode(\"rgb\")}},Ot={OrRd:[\"#fff7ec\",\"#fee8c8\",\"#fdd49e\",\"#fdbb84\",\"#fc8d59\",\"#ef6548\",\"#d7301f\",\"#b30000\",\"#7f0000\"],PuBu:[\"#fff7fb\",\"#ece7f2\",\"#d0d1e6\",\"#a6bddb\",\"#74a9cf\",\"#3690c0\",\"#0570b0\",\"#045a8d\",\"#023858\"],BuPu:[\"#f7fcfd\",\"#e0ecf4\",\"#bfd3e6\",\"#9ebcda\",\"#8c96c6\",\"#8c6bb1\",\"#88419d\",\"#810f7c\",\"#4d004b\"],Oranges:[\"#fff5eb\",\"#fee6ce\",\"#fdd0a2\",\"#fdae6b\",\"#fd8d3c\",\"#f16913\",\"#d94801\",\"#a63603\",\"#7f2704\"],BuGn:[\"#f7fcfd\",\"#e5f5f9\",\"#ccece6\",\"#99d8c9\",\"#66c2a4\",\"#41ae76\",\"#238b45\",\"#006d2c\",\"#00441b\"],YlOrBr:[\"#ffffe5\",\"#fff7bc\",\"#fee391\",\"#fec44f\",\"#fe9929\",\"#ec7014\",\"#cc4c02\",\"#993404\",\"#662506\"],YlGn:[\"#ffffe5\",\"#f7fcb9\",\"#d9f0a3\",\"#addd8e\",\"#78c679\",\"#41ab5d\",\"#238443\",\"#006837\",\"#004529\"],Reds:[\"#fff5f0\",\"#fee0d2\",\"#fcbba1\",\"#fc9272\",\"#fb6a4a\",\"#ef3b2c\",\"#cb181d\",\"#a50f15\",\"#67000d\"],RdPu:[\"#fff7f3\",\"#fde0dd\",\"#fcc5c0\",\"#fa9fb5\",\"#f768a1\",\"#dd3497\",\"#ae017e\",\"#7a0177\",\"#49006a\"],Greens:[\"#f7fcf5\",\"#e5f5e0\",\"#c7e9c0\",\"#a1d99b\",\"#74c476\",\"#41ab5d\",\"#238b45\",\"#006d2c\",\"#00441b\"],YlGnBu:[\"#ffffd9\",\"#edf8b1\",\"#c7e9b4\",\"#7fcdbb\",\"#41b6c4\",\"#1d91c0\",\"#225ea8\",\"#253494\",\"#081d58\"],Purples:[\"#fcfbfd\",\"#efedf5\",\"#dadaeb\",\"#bcbddc\",\"#9e9ac8\",\"#807dba\",\"#6a51a3\",\"#54278f\",\"#3f007d\"],GnBu:[\"#f7fcf0\",\"#e0f3db\",\"#ccebc5\",\"#a8ddb5\",\"#7bccc4\",\"#4eb3d3\",\"#2b8cbe\",\"#0868ac\",\"#084081\"],Greys:[\"#ffffff\",\"#f0f0f0\",\"#d9d9d9\",\"#bdbdbd\",\"#969696\",\"#737373\",\"#525252\",\"#252525\",\"#000000\"],YlOrRd:[\"#ffffcc\",\"#ffeda0\",\"#fed976\",\"#feb24c\",\"#fd8d3c\",\"#fc4e2a\",\"#e31a1c\",\"#bd0026\",\"#800026\"],PuRd:[\"#f7f4f9\",\"#e7e1ef\",\"#d4b9da\",\"#c994c7\",\"#df65b0\",\"#e7298a\",\"#ce1256\",\"#980043\",\"#67001f\"],Blues:[\"#f7fbff\",\"#deebf7\",\"#c6dbef\",\"#9ecae1\",\"#6baed6\",\"#4292c6\",\"#2171b5\",\"#08519c\",\"#08306b\"],PuBuGn:[\"#fff7fb\",\"#ece2f0\",\"#d0d1e6\",\"#a6bddb\",\"#67a9cf\",\"#3690c0\",\"#02818a\",\"#016c59\",\"#014636\"],Viridis:[\"#440154\",\"#482777\",\"#3f4a8a\",\"#31678e\",\"#26838f\",\"#1f9d8a\",\"#6cce5a\",\"#b6de2b\",\"#fee825\"],Spectral:[\"#9e0142\",\"#d53e4f\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#e6f598\",\"#abdda4\",\"#66c2a5\",\"#3288bd\",\"#5e4fa2\"],RdYlGn:[\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee08b\",\"#ffffbf\",\"#d9ef8b\",\"#a6d96a\",\"#66bd63\",\"#1a9850\",\"#006837\"],RdBu:[\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#f7f7f7\",\"#d1e5f0\",\"#92c5de\",\"#4393c3\",\"#2166ac\",\"#053061\"],PiYG:[\"#8e0152\",\"#c51b7d\",\"#de77ae\",\"#f1b6da\",\"#fde0ef\",\"#f7f7f7\",\"#e6f5d0\",\"#b8e186\",\"#7fbc41\",\"#4d9221\",\"#276419\"],PRGn:[\"#40004b\",\"#762a83\",\"#9970ab\",\"#c2a5cf\",\"#e7d4e8\",\"#f7f7f7\",\"#d9f0d3\",\"#a6dba0\",\"#5aae61\",\"#1b7837\",\"#00441b\"],RdYlBu:[\"#a50026\",\"#d73027\",\"#f46d43\",\"#fdae61\",\"#fee090\",\"#ffffbf\",\"#e0f3f8\",\"#abd9e9\",\"#74add1\",\"#4575b4\",\"#313695\"],BrBG:[\"#543005\",\"#8c510a\",\"#bf812d\",\"#dfc27d\",\"#f6e8c3\",\"#f5f5f5\",\"#c7eae5\",\"#80cdc1\",\"#35978f\",\"#01665e\",\"#003c30\"],RdGy:[\"#67001f\",\"#b2182b\",\"#d6604d\",\"#f4a582\",\"#fddbc7\",\"#ffffff\",\"#e0e0e0\",\"#bababa\",\"#878787\",\"#4d4d4d\",\"#1a1a1a\"],PuOr:[\"#7f3b08\",\"#b35806\",\"#e08214\",\"#fdb863\",\"#fee0b6\",\"#f7f7f7\",\"#d8daeb\",\"#b2abd2\",\"#8073ac\",\"#542788\",\"#2d004b\"],Set2:[\"#66c2a5\",\"#fc8d62\",\"#8da0cb\",\"#e78ac3\",\"#a6d854\",\"#ffd92f\",\"#e5c494\",\"#b3b3b3\"],Accent:[\"#7fc97f\",\"#beaed4\",\"#fdc086\",\"#ffff99\",\"#386cb0\",\"#f0027f\",\"#bf5b17\",\"#666666\"],Set1:[\"#e41a1c\",\"#377eb8\",\"#4daf4a\",\"#984ea3\",\"#ff7f00\",\"#ffff33\",\"#a65628\",\"#f781bf\",\"#999999\"],Set3:[\"#8dd3c7\",\"#ffffb3\",\"#bebada\",\"#fb8072\",\"#80b1d3\",\"#fdb462\",\"#b3de69\",\"#fccde5\",\"#d9d9d9\",\"#bc80bd\",\"#ccebc5\",\"#ffed6f\"],Dark2:[\"#1b9e77\",\"#d95f02\",\"#7570b3\",\"#e7298a\",\"#66a61e\",\"#e6ab02\",\"#a6761d\",\"#666666\"],Paired:[\"#a6cee3\",\"#1f78b4\",\"#b2df8a\",\"#33a02c\",\"#fb9a99\",\"#e31a1c\",\"#fdbf6f\",\"#ff7f00\",\"#cab2d6\",\"#6a3d9a\",\"#ffff99\",\"#b15928\"],Pastel2:[\"#b3e2cd\",\"#fdcdac\",\"#cbd5e8\",\"#f4cae4\",\"#e6f5c9\",\"#fff2ae\",\"#f1e2cc\",\"#cccccc\"],Pastel1:[\"#fbb4ae\",\"#b3cde3\",\"#ccebc5\",\"#decbe4\",\"#fed9a6\",\"#ffffcc\",\"#e5d8bd\",\"#fddaec\",\"#f2f2f2\"]},jt=0,Gt=Object.keys(Ot);jt<Gt.length;jt+=1){var qt=Gt[jt];Ot[qt.toLowerCase()]=Ot[qt]}var Lt=Ot;return N.average=function(r,a){void 0===a&&(a=\"lrgb\");var e=r.length;if(r=r.map(function(r){return new A(r)}),\"lrgb\"===a)return rt(r);for(var t=r.shift(),f=t.get(a),o=[],u=0,c=0,n=0;n<f.length;n++)if(f[n]=f[n]||0,o.push(isNaN(f[n])?0:1),\"h\"===a.charAt(n)&&!isNaN(f[n])){var i=f[n]/180*Je;u+=Ke(i),c+=Qe(i)}var l=t.alpha();r.forEach(function(r){var e=r.get(a);l+=r.alpha();for(var t=0;t<f.length;t++)if(!isNaN(e[t]))if(o[t]++,\"h\"===a.charAt(t)){var n=e[t]/180*Je;u+=Ke(n),c+=Qe(n)}else f[t]+=e[t]});for(var h=0;h<f.length;h++)if(\"h\"===a.charAt(h)){for(var s=Ze(c/o[h],u/o[h])/Je*180;s<0;)s+=360;for(;360<=s;)s-=360;f[h]=s}else f[h]=f[h]/o[h];return l/=e,new A(f,a).alpha(.99999<l?1:l,!0)},N.bezier=function(r){var e=at(r);return e.scale=function(){return nt(e)},e},N.blend=ct,N.cubehelix=function(o,u,c,i,l){void 0===o&&(o=300),void 0===u&&(u=-1.5),void 0===c&&(c=1),void 0===i&&(i=1),void 0===l&&(l=[0,1]);var h,s=0;\"array\"===it(l)?h=l[1]-l[0]:(h=0,l=[l,l]);var e=function(r){var e=ht*((o+120)/360+u*r),t=st(l[0]+h*r,i),n=(0!==s?c[0]+r*s:c)*t*(1-t)/2,a=bt(e),f=dt(e);return N(lt([255*(t+n*(-.14861*a+1.78277*f)),255*(t+n*(-.29227*a-.90649*f)),255*(t+n*(1.97294*a)),1]))};return e.start=function(r){return null==r?o:(o=r,e)},e.rotations=function(r){return null==r?u:(u=r,e)},e.gamma=function(r){return null==r?i:(i=r,e)},e.hue=function(r){return null==r?c:(\"array\"===it(c=r)?0==(s=c[1]-c[0])&&(c=c[1]):s=0,e)},e.lightness=function(r){return null==r?l:(h=\"array\"===it(r)?(l=r)[1]-r[0]:(l=[r,r],0),e)},e.scale=function(){return N.scale(e)},e.hue(c),e},N.mix=N.interpolate=$e,N.random=function(){for(var r=\"#\",e=0;e<6;e++)r+=\"0123456789abcdef\".charAt(pt(16*gt()));return new A(r,\"hex\")},N.scale=nt,N.analyze=Nt.analyze,N.contrast=function(r,e){r=new A(r),e=new A(e);var t=r.luminance(),n=e.luminance();return n<t?(t+.05)/(n+.05):(n+.05)/(t+.05)},N.deltaE=function(r,e,t,n){void 0===t&&(t=1),void 0===n&&(n=1),r=new A(r),e=new A(e);for(var a=Array.from(r.lab()),f=a[0],o=a[1],u=a[2],c=Array.from(e.lab()),i=c[0],l=c[1],h=c[2],s=_t(o*o+u*u),d=_t(l*l+h*h),b=f<16?.511:.040975*f/(1+.01765*f),p=.0638*s/(1+.0131*s)+.638,g=s<1e-6?0:180*xt(u,o)/Pt;g<0;)g+=360;for(;360<=g;)g-=360;var v=164<=g&&g<=345?.56+At(.2*Et(Pt*(g+168)/180)):.36+At(.4*Et(Pt*(g+35)/180)),m=s*s*s*s,y=_t(m/(m+1900)),w=p*(y*v+1-y),k=s-d,M=o-l,N=u-h,_=(f-i)/(t*b),x=k/(n*p);return _t(_*_+x*x+(M*M+N*N-k*k)/(w*w))},N.distance=function(r,e,t){void 0===t&&(t=\"lab\"),r=new A(r),e=new A(e);var n=r.get(t),a=e.get(t),f=0;for(var o in n){var u=(n[o]||0)-(a[o]||0);f+=u*u}return Math.sqrt(f)},N.limits=Nt.limits,N.valid=function(){for(var r=[],e=arguments.length;e--;)r[e]=arguments[e];try{return new(Function.prototype.bind.apply(A,[null].concat(r))),!0}catch(r){return!1}},N.scales=Ft,N.colors=C,N.brewer=Lt,N});\n\n</script>\n<script>\n\"use strict\";\n\nfunction main() {\n    const features = gFeatureCollection.features.map(f => new Feature(f));\n    const featureGraph = new FeatureGraph();\n    // - Insert nodes\n    features.filter(f => !f.isLine()).forEach(f => featureGraph.insertObservable(f));\n    // - Insert lines. Lines can be parents, so they must be inserted before parent-child lines\n    features.filter(f => f.isLine()).forEach(f => featureGraph.insertObservable(f));\n    // - Create and insert parent-child lines\n    features.filter(f => f.isChild()).forEach(f => {\n        const parentKey = featureGraph.getKey(f.getProperty('parent'), f.getProperty('treeKey', 'meta'));\n        const childKey = f.getProperty('treeKey', 'meta');\n        const parentChildLineFeature = featureGraph.getParentChildLineFeature(parentKey, childKey);\n        featureGraph.insertObservable(parentChildLineFeature);\n    });\n    // debug\n    window.gFeatures = features;\n    window.gFeatureGraph = featureGraph;\n    // debug\n    const controller = new FeatureController(featureGraph);\n    featureGraph.getObservables().forEach(ob => {\n        if (!ob.isConfigurationObject()) {\n            // - Here, the first observer is added to every visible feature\n            LeafletLayer.createAndGroupLayer(ob, controller);\n        }\n    });\n    const nav = new Nav();\n    setupNav(controller, nav);\n    const topTab = new TopTab();\n    createSearchModal(controller, nav, topTab);\n\n    /****************/\n    /* Setup layers */\n    /****************/\n\n    const maxZoom = 32;\n    var esri_satellite_layer = L.esri.basemapLayer('Imagery', {\n        maxZoom: maxZoom\n    });\n    const mapbox_layer = L.mapboxGL({\n        attribution: \"\",\n        // - Odd behavior: maxboxGL will let the user keep zooming in past maxZoom, but the tiles won't change. No other layers do this\n        maxZoom: maxZoom,\n        style: 'https://api.maptiler.com/maps/basic/style.json?key=WOwRKyy0L6AwPBuM4Ggj'\n    });\n    const esri_topography_layer = L.esri.basemapLayer('Streets', {\n        maxZoom: maxZoom\n    });\n    const blank_layer = L.tileLayer('', {\n        maxZoom: maxZoom\n    });\n    const baseMaps = {\n        'Satellite': esri_satellite_layer,\n        'Streets': mapbox_layer,\n        'Topo': esri_topography_layer,\n        'Blank': blank_layer\n    };\n    const overlayMaps = {\n        'Nodes': LeafletLayer.nodeLayers,\n        'Lines': LeafletLayer.lineLayers,\n        'Parent-Child Lines': LeafletLayer.parentChildLineLayers,\n    }\n    LeafletLayer.map = L.map('map', {\n        center: LeafletLayer.nodeLayers.getBounds().getCenter(),\n        // - This zoom level sensibly displays all circuits to start, even the ones with weird one-off players that skew where the center is\n        zoom: 14,\n        // - Provide the layers that the map should start with\n        layers: [esri_satellite_layer, LeafletLayer.nodeLayers, LeafletLayer.lineLayers, LeafletLayer.parentChildLineLayers],\n        // - Better performance for large datasets\n        renderer: L.canvas()\n    });\n    LeafletLayer.map.fitBounds(LeafletLayer.nodeLayers.getBounds());\n    addZoomToFitButon();\n    addClusterButton();\n    LeafletLayer.control = L.control.layers(baseMaps, overlayMaps, { position: 'topleft', collapsed: false });\n    LeafletLayer.control.addTo(LeafletLayer.map);\n    // - Disable the following annoying default Leaflet keyboard shortcuts:\n    //  - TODO: do a better job and stop the event(s) from propagating in text inputs instead\n    document.getElementById('map').onkeydown = function(e) {\n        if ([\n            '-',    // disable zoom-out for \"-\" key\n            '_',    // disable mega zoom-out for \"_\" key\n            '=',    // disable zoom-in for \"=\" key\n            '+',    // disable mega zoom-in for \"+\" key\n        ].includes(e.key)) {\n            e.stopPropagation();\n        }\n        //console.log(e.key);\n\t};\n    const modalInsert = document.getElementById('modalInsert');\n    modalInsert.addEventListener('click', hideModalInsert);\n    createHelpMenu();\n    createEditMenu(controller, nav, topTab);\n    if (gIsOnline && gShowFileMenu) {\n        createFileMenu(controller);\n    }\n    addMenuEventHandlers();\n}\n\n/**\n * @returns {undefined}\n */\nfunction addMenuEventHandlers() {\n    // - Add event listeners to only allow either the file or edit menu to be open\n    const fileMenu = document.getElementById('fileMenu');\n    let fileButton = null;\n    if (fileMenu !== null) {\n        fileButton = fileMenu.getElementsByTagName('button')[0];\n        fileButton.addEventListener('click', function() {\n            if (this.classList.contains('expanded')) {\n                if (editButton !== null && editButton.classList.contains('expanded')) {\n                    editButton.click();\n                }\n            }\n        });\n    }\n    const editMenu = document.getElementById('editMenu');\n    let editButton = null;\n    if (editMenu !== null) {\n        editButton = editMenu.getElementsByTagName('button')[0];\n        editButton.addEventListener('click', function() {\n            if (this.classList.contains('expanded')) {\n                if (fileButton !== null && fileButton.classList.contains('expanded')) {\n                    fileButton.click();\n                }\n            }\n        });\n    }\n    // - Save before rendering the interface to remove any previous error files, but only in \"online mode\"\n    if (gIsOnline) {\n        document.getElementById('saveDiv').click();\n    }\n}\n\n/**\n * @param {FeatureController} controller - a FeatureController instance\n * @param {Nav} nav - a Nav instance\n * @returns {undefined}\n */\nfunction setupNav(controller, nav) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    if (!(nav instanceof Nav)) {\n        throw TypeError('\"nav\" argument must be instanceof Nav.');\n    }\n    const header = document.getElementsByTagName('header')[0];\n    if (gIsOnline) {\n        nav.topNav.setHomepageName(`\"${gThisFeederName}\" from ${gThisModelName}`);\n    } else {\n        nav.topNav.setHomepageName('');\n    }\n    header.prepend(nav.topNavNavElement); \n    const main = document.getElementsByTagName('main')[0];\n    main.prepend(nav.sideNavArticleElement);\n    main.prepend(nav.sideNavDivElement);\n    main.prepend(nav.sideNavNavElement);\n}\n\n/**\n * @param {FeatureController} controller - a FeatureController instance\n * @param {Nav} nav - a Nav instance\n * @param {TopTab} topTab - a TopTap instance\n * @returns {undefined}\n */\nfunction createSearchModal(controller, nav, topTab) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    if (!(nav instanceof Nav)) {\n        throw TypeError('\"nav\" argument must be instanceof Nav.');\n    }\n    if (!(topTab instanceof TopTab)) {\n        throw TypeError('\"topTab\" argument must be instanceof TopTab.');\n    }\n    nav.sideNavNavElement.appendChild(topTab.divElement); \n    // - Add tab for searching existing features\n    const searchTab = document.createElement('div');\n    topTab.addTab('Search Objects', searchTab);\n    topTab.selectTab(topTab.getTab('Search Objects').tab);\n    let searchModal = new SearchModal(controller);\n    searchTab.appendChild(searchModal.getDOMElement());\n    let searchResultsDiv = document.createElement('div');\n    searchTab.appendChild(searchResultsDiv);\n    searchResultsDiv.appendChild(searchModal.getConfigSearchResultsDiv());\n    searchResultsDiv.appendChild(searchModal.getNodeSearchResultsDiv());\n    searchResultsDiv.appendChild(searchModal.getLineSearchResultsDiv());\n    // - Add tab for adding components\n    const componentTab = document.createElement('div');\n    topTab.addTab('Add New Objects', componentTab);\n    let components = gComponentsCollection.features.filter(f => f.properties.componentType === 'gridlabd');\n    const omdFeature = controller.observableGraph.getObservable('omd');\n    if (omdFeature.hasProperty('syntax', 'meta')) {\n        if (omdFeature.getProperty('syntax', 'meta') === 'DSS') {\n            components = gComponentsCollection.features.filter(f => f.properties.componentType === 'opendss');\n        }\n    }\n    components = components.map(f => {\n        const feature = new Feature(f);\n        if (feature.hasProperty('name') && feature.getProperty('name').toString().toLowerCase() === 'null') {\n            feature.setProperty('name', 'new');\n        }\n        return feature;\n    });\n    searchModal = new SearchModal(controller, components);\n    componentTab.appendChild(searchModal.getDOMElement());\n    searchResultsDiv = document.createElement('div');\n    componentTab.appendChild(searchResultsDiv);\n    searchResultsDiv.appendChild(searchModal.getConfigSearchResultsDiv()); \n    searchResultsDiv.appendChild(searchModal.getNodeSearchResultsDiv()); \n    searchResultsDiv.appendChild(searchModal.getLineSearchResultsDiv()); \n    // - Add map div\n    let div = document.createElement('div');\n    div.id = 'map';\n    nav.sideNavArticleElement.prepend(div);\n    // - Add legend insert\n    const legendInsert = document.createElement('div');\n    legendInsert.id = 'legendInsert';\n    document.getElementsByTagName('main')[0].appendChild(legendInsert);\n}\n\nfunction createHelpMenu() {\n    const div = document.createElement('div');\n    div.style.fontSize = '13px';\n    div.style.height = '39px';\n    div.style.width = '55px';\n    div.style.color = 'white';\n    const innerDiv = document.createElement('div');\n    div.appendChild(innerDiv);\n    innerDiv.style.display = 'flex';\n    innerDiv.style.alignItems = 'center';\n    innerDiv.style.height = '100%';\n    const anchor = document.createElement('a');\n    anchor.style.color = 'white'\n    anchor.href = 'https://github.com/dpinney/omf/wiki/Tools-~-gridEdit';\n    anchor.textContent = 'Help';\n    anchor.target = '_blank';\n    innerDiv.appendChild(anchor);\n    document.getElementById('menuInsert').appendChild(div);\n}\n\n/**\n * @param {FeatureController} controller - a FeatureController instance\n * @param {Nav} nav - a Nav instance\n * @param {TopTab} topTab - a TopTab instance\n * @returns {undefined}\n */\nfunction createEditMenu(controller, nav, topTab) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    if (!(nav instanceof Nav)) {\n        throw TypeError('\"nav\" argument must be instanceof Nav.');\n    }\n    if (!(topTab instanceof TopTab)) {\n        throw TypeError('\"topTab\" argument must be instanceof TopTab.');\n    }\n    const dropdownDiv = new DropdownDiv();\n    dropdownDiv.divElement.id = 'editMenu';\n    dropdownDiv.addStyleClasses(['menu'], 'divElement');\n    dropdownDiv.setButton('Edit', true);\n    document.getElementById('menuInsert').appendChild(dropdownDiv.divElement);\n    dropdownDiv.insertElement(getSearchDiv(nav, topTab));\n    dropdownDiv.insertElement(getAddComponentsDiv(nav, topTab));\n    if (gIsOnline) {\n        dropdownDiv.insertElement(getAmiDiv(controller));\n        dropdownDiv.insertElement(getAnonymizationDiv(controller));\n    }\n    dropdownDiv.insertElement(getAttachmentsDiv(controller));\n    dropdownDiv.insertElement(getRawDataDiv(controller));\n    if (gIsOnline) {\n        dropdownDiv.insertElement(getClimateDiv(controller));\n        dropdownDiv.insertElement(getScadaDiv(controller));\n    }\n    dropdownDiv.insertElement(getColorDiv(controller));\n    dropdownDiv.insertElement(getGeojsonDiv(controller));\n}\n\n/**\n * @param {FeatureController} controller - a FeatureController instance\n * @returns {undefined}\n */\nfunction createFileMenu(controller) {\n    if (!(controller instanceof FeatureController)) {\n        throw TypeError('\"controller\" argument must be instanceof FeatureController.');\n    }\n    const dropdownDiv = new DropdownDiv();\n    dropdownDiv.divElement.id = 'fileMenu';\n    dropdownDiv.addStyleClasses(['menu'], 'divElement');\n    dropdownDiv.setButton('File', true);\n    document.getElementById('menuInsert').appendChild(dropdownDiv.divElement);\n    dropdownDiv.insertElement(getSaveDiv(controller));\n    dropdownDiv.insertElement(getRenameDiv(controller));\n    dropdownDiv.insertElement(getLoadFeederDiv(controller));\n    dropdownDiv.insertElement(getBlankFeederDiv(controller));\n    dropdownDiv.insertElement(getWindmilDiv(controller));\n    dropdownDiv.insertElement(getGridlabdDiv(controller));\n    dropdownDiv.insertElement(getCymdistDiv(controller));\n    dropdownDiv.insertElement(getOpendssDiv(controller));\n}\n\n/**\n * @returns {undefined}\n */\nfunction hideModalInsert() {\n    const modalInsert = document.getElementById('modalInsert');\n    modalInsert.classList.remove('visible');\n}\n\n/**\n * @returns {undefined}\n */\nfunction addZoomToFitButon() {\n    const leafletHookDiv = document.querySelector('div.leaflet-top.leaflet-left');\n    const div = document.createElement('div');\n    div.classList.add('leaflet-control', 'leaflet-touch', 'leaflet-control-layers', 'leaflet-bar');\n    const button = document.createElement('button');\n    button.classList.add('leaflet-custom-control-button');\n    button.textContent = 'Zoom to fit';\n    button.addEventListener('click', function() {\n        LeafletLayer.map.fitBounds(LeafletLayer.nodeLayers.getBounds());\n    });\n    div.appendChild(button);\n    leafletHookDiv.appendChild(div);\n}\n\n/**\n * @returns {undefined}\n */\nfunction addClusterButton() {\n    const leafletHookDiv = document.querySelector('div.leaflet-top.leaflet-left');\n    const div = document.createElement('div');\n    div.classList.add('leaflet-control', 'leaflet-touch', 'leaflet-control-layers', 'leaflet-bar');\n    const button = document.createElement('button');\n    button.classList.add('leaflet-custom-control-button');\n    button.textContent = 'Toggle Node Grouping';\n    button.addEventListener('click', function() {\n        LeafletLayer.map.removeLayer(LeafletLayer.nodeLayers);\n        LeafletLayer.control.removeLayer(LeafletLayer.nodeLayers);\n        if (LeafletLayer.nodeLayers instanceof L.MarkerClusterGroup) {\n            LeafletLayer.nodeLayers = L.featureGroup(LeafletLayer.nodeLayers.getLayers());\n        } else {\n            const nodeLayers = LeafletLayer.nodeLayers.getLayers();\n            LeafletLayer.nodeLayers = L.markerClusterGroup();\n            nodeLayers.forEach(l => LeafletLayer.nodeLayers.addLayer(l));\n        }\n        LeafletLayer.control.addOverlay(LeafletLayer.nodeLayers, 'Nodes');\n        LeafletLayer.map.addLayer(LeafletLayer.nodeLayers);\n    });\n    div.appendChild(button);\n    leafletHookDiv.appendChild(div);\n}\n\n(function loadInterface() {\n    const modalInsert = document.createElement('div');\n    modalInsert.id = 'modalInsert';\n    if (gIsOnline) {\n        modalInsert.classList.add('visible');\n        modalInsert.replaceChildren(getLoadingModal().divElement);\n    }\n    document.getElementsByTagName('main')[0].appendChild(modalInsert);\n    setTimeout(() => main(), 1);\n})();\n</script>\n\n  </body>\n</html>",
    "traditionalGraphData": "{\"data\": [{\"alignmentgroup\": \"True\", \"hovertemplate\": \"plot_color=thermal_violation<br>bus=%{x}<br>max_kw=%{y}<extra></extra>\", \"legendgroup\": \"thermal_violation\", \"marker\": {\"color\": \"orange\", \"pattern\": {\"shape\": \"\"}}, \"name\": \"thermal_violation\", \"offsetgroup\": \"orange\", \"orientation\": \"v\", \"showlegend\": true, \"textposition\": \"auto\", \"x\": [\"684\", \"692\", \"645\", \"611\", \"646\", \"634\", \"652\", \"675\", \"670\"], \"xaxis\": \"x\", \"y\": [1, 1, 1, 1, 1, 1, 1, 1, 1], \"yaxis\": \"y\", \"type\": \"bar\"}], \"layout\": {\"template\": {\"data\": {\"barpolar\": [{\"marker\": {\"line\": {\"color\": \"white\", \"width\": 0.5}, \"pattern\": {\"fillmode\": \"overlay\", \"size\": 10, \"solidity\": 0.2}}, \"type\": \"barpolar\"}], \"bar\": [{\"error_x\": {\"color\": \"rgb(36,36,36)\"}, \"error_y\": {\"color\": \"rgb(36,36,36)\"}, \"marker\": {\"line\": {\"color\": \"white\", \"width\": 0.5}, \"pattern\": {\"fillmode\": \"overlay\", \"size\": 10, \"solidity\": 0.2}}, \"type\": \"bar\"}], \"carpet\": [{\"aaxis\": {\"endlinecolor\": \"rgb(36,36,36)\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"rgb(36,36,36)\"}, \"baxis\": {\"endlinecolor\": \"rgb(36,36,36)\", \"gridcolor\": \"white\", \"linecolor\": \"white\", \"minorgridcolor\": \"white\", \"startlinecolor\": \"rgb(36,36,36)\"}, \"type\": \"carpet\"}], \"choropleth\": [{\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}, \"type\": \"choropleth\"}], \"contourcarpet\": [{\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}, \"type\": \"contourcarpet\"}], \"contour\": [{\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}, \"colorscale\": [[0.0, \"#440154\"], [0.1111111111111111, \"#482878\"], [0.2222222222222222, \"#3e4989\"], [0.3333333333333333, \"#31688e\"], [0.4444444444444444, \"#26828e\"], [0.5555555555555556, \"#1f9e89\"], [0.6666666666666666, \"#35b779\"], [0.7777777777777778, \"#6ece58\"], [0.8888888888888888, \"#b5de2b\"], [1.0, \"#fde725\"]], \"type\": \"contour\"}], \"heatmapgl\": [{\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}, \"colorscale\": [[0.0, \"#440154\"], [0.1111111111111111, \"#482878\"], [0.2222222222222222, \"#3e4989\"], [0.3333333333333333, \"#31688e\"], [0.4444444444444444, \"#26828e\"], [0.5555555555555556, \"#1f9e89\"], [0.6666666666666666, \"#35b779\"], [0.7777777777777778, \"#6ece58\"], [0.8888888888888888, \"#b5de2b\"], [1.0, \"#fde725\"]], \"type\": \"heatmapgl\"}], \"heatmap\": [{\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}, \"colorscale\": [[0.0, \"#440154\"], [0.1111111111111111, \"#482878\"], [0.2222222222222222, \"#3e4989\"], [0.3333333333333333, \"#31688e\"], [0.4444444444444444, \"#26828e\"], [0.5555555555555556, \"#1f9e89\"], [0.6666666666666666, \"#35b779\"], [0.7777777777777778, \"#6ece58\"], [0.8888888888888888, \"#b5de2b\"], [1.0, \"#fde725\"]], \"type\": \"heatmap\"}], \"histogram2dcontour\": [{\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}, \"colorscale\": [[0.0, \"#440154\"], [0.1111111111111111, \"#482878\"], [0.2222222222222222, \"#3e4989\"], [0.3333333333333333, \"#31688e\"], [0.4444444444444444, \"#26828e\"], [0.5555555555555556, \"#1f9e89\"], [0.6666666666666666, \"#35b779\"], [0.7777777777777778, \"#6ece58\"], [0.8888888888888888, \"#b5de2b\"], [1.0, \"#fde725\"]], \"type\": \"histogram2dcontour\"}], \"histogram2d\": [{\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}, \"colorscale\": [[0.0, \"#440154\"], [0.1111111111111111, \"#482878\"], [0.2222222222222222, \"#3e4989\"], [0.3333333333333333, \"#31688e\"], [0.4444444444444444, \"#26828e\"], [0.5555555555555556, \"#1f9e89\"], [0.6666666666666666, \"#35b779\"], [0.7777777777777778, \"#6ece58\"], [0.8888888888888888, \"#b5de2b\"], [1.0, \"#fde725\"]], \"type\": \"histogram2d\"}], \"histogram\": [{\"marker\": {\"line\": {\"color\": \"white\", \"width\": 0.6}}, \"type\": \"histogram\"}], \"mesh3d\": [{\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}, \"type\": \"mesh3d\"}], \"parcoords\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}}, \"type\": \"parcoords\"}], \"pie\": [{\"automargin\": true, \"type\": \"pie\"}], \"scatter3d\": [{\"line\": {\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}}, \"marker\": {\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}}, \"type\": \"scatter3d\"}], \"scattercarpet\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}}, \"type\": \"scattercarpet\"}], \"scattergeo\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}}, \"type\": \"scattergeo\"}], \"scattergl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}}, \"type\": \"scattergl\"}], \"scattermapbox\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}}, \"type\": \"scattermapbox\"}], \"scatterpolargl\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}}, \"type\": \"scatterpolargl\"}], \"scatterpolar\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}}, \"type\": \"scatterpolar\"}], \"scatter\": [{\"fillpattern\": {\"fillmode\": \"overlay\", \"size\": 10, \"solidity\": 0.2}, \"type\": \"scatter\"}], \"scatterternary\": [{\"marker\": {\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}}, \"type\": \"scatterternary\"}], \"surface\": [{\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}, \"colorscale\": [[0.0, \"#440154\"], [0.1111111111111111, \"#482878\"], [0.2222222222222222, \"#3e4989\"], [0.3333333333333333, \"#31688e\"], [0.4444444444444444, \"#26828e\"], [0.5555555555555556, \"#1f9e89\"], [0.6666666666666666, \"#35b779\"], [0.7777777777777778, \"#6ece58\"], [0.8888888888888888, \"#b5de2b\"], [1.0, \"#fde725\"]], \"type\": \"surface\"}], \"table\": [{\"cells\": {\"fill\": {\"color\": \"rgb(237,237,237)\"}, \"line\": {\"color\": \"white\"}}, \"header\": {\"fill\": {\"color\": \"rgb(217,217,217)\"}, \"line\": {\"color\": \"white\"}}, \"type\": \"table\"}]}, \"layout\": {\"annotationdefaults\": {\"arrowhead\": 0, \"arrowwidth\": 1}, \"autotypenumbers\": \"strict\", \"coloraxis\": {\"colorbar\": {\"outlinewidth\": 1, \"tickcolor\": \"rgb(36,36,36)\", \"ticks\": \"outside\"}}, \"colorscale\": {\"diverging\": [[0.0, \"rgb(103,0,31)\"], [0.1, \"rgb(178,24,43)\"], [0.2, \"rgb(214,96,77)\"], [0.3, \"rgb(244,165,130)\"], [0.4, \"rgb(253,219,199)\"], [0.5, \"rgb(247,247,247)\"], [0.6, \"rgb(209,229,240)\"], [0.7, \"rgb(146,197,222)\"], [0.8, \"rgb(67,147,195)\"], [0.9, \"rgb(33,102,172)\"], [1.0, \"rgb(5,48,97)\"]], \"sequential\": [[0.0, \"#440154\"], [0.1111111111111111, \"#482878\"], [0.2222222222222222, \"#3e4989\"], [0.3333333333333333, \"#31688e\"], [0.4444444444444444, \"#26828e\"], [0.5555555555555556, \"#1f9e89\"], [0.6666666666666666, \"#35b779\"], [0.7777777777777778, \"#6ece58\"], [0.8888888888888888, \"#b5de2b\"], [1.0, \"#fde725\"]], \"sequentialminus\": [[0.0, \"#440154\"], [0.1111111111111111, \"#482878\"], [0.2222222222222222, \"#3e4989\"], [0.3333333333333333, \"#31688e\"], [0.4444444444444444, \"#26828e\"], [0.5555555555555556, \"#1f9e89\"], [0.6666666666666666, \"#35b779\"], [0.7777777777777778, \"#6ece58\"], [0.8888888888888888, \"#b5de2b\"], [1.0, \"#fde725\"]]}, \"colorway\": [\"#1F77B4\", \"#FF7F0E\", \"#2CA02C\", \"#D62728\", \"#9467BD\", \"#8C564B\", \"#E377C2\", \"#7F7F7F\", \"#BCBD22\", \"#17BECF\"], \"font\": {\"color\": \"rgb(36,36,36)\"}, \"geo\": {\"bgcolor\": \"white\", \"lakecolor\": \"white\", \"landcolor\": \"white\", \"showlakes\": true, \"showland\": true, \"subunitcolor\": \"white\"}, \"hoverlabel\": {\"align\": \"left\"}, \"hovermode\": \"closest\", \"mapbox\": {\"style\": \"light\"}, \"paper_bgcolor\": \"white\", \"plot_bgcolor\": \"white\", \"polar\": {\"angularaxis\": {\"gridcolor\": \"rgb(232,232,232)\", \"linecolor\": \"rgb(36,36,36)\", \"showgrid\": false, \"showline\": true, \"ticks\": \"outside\"}, \"bgcolor\": \"white\", \"radialaxis\": {\"gridcolor\": \"rgb(232,232,232)\", \"linecolor\": \"rgb(36,36,36)\", \"showgrid\": false, \"showline\": true, \"ticks\": \"outside\"}}, \"scene\": {\"xaxis\": {\"backgroundcolor\": \"white\", \"gridcolor\": \"rgb(232,232,232)\", \"gridwidth\": 2, \"linecolor\": \"rgb(36,36,36)\", \"showbackground\": true, \"showgrid\": false, \"showline\": true, \"ticks\": \"outside\", \"zeroline\": false, \"zerolinecolor\": \"rgb(36,36,36)\"}, \"yaxis\": {\"backgroundcolor\": \"white\", \"gridcolor\": \"rgb(232,232,232)\", \"gridwidth\": 2, \"linecolor\": \"rgb(36,36,36)\", \"showbackground\": true, \"showgrid\": false, \"showline\": true, \"ticks\": \"outside\", \"zeroline\": false, \"zerolinecolor\": \"rgb(36,36,36)\"}, \"zaxis\": {\"backgroundcolor\": \"white\", \"gridcolor\": \"rgb(232,232,232)\", \"gridwidth\": 2, \"linecolor\": \"rgb(36,36,36)\", \"showbackground\": true, \"showgrid\": false, \"showline\": true, \"ticks\": \"outside\", \"zeroline\": false, \"zerolinecolor\": \"rgb(36,36,36)\"}}, \"shapedefaults\": {\"fillcolor\": \"black\", \"line\": {\"width\": 0}, \"opacity\": 0.3}, \"ternary\": {\"aaxis\": {\"gridcolor\": \"rgb(232,232,232)\", \"linecolor\": \"rgb(36,36,36)\", \"showgrid\": false, \"showline\": true, \"ticks\": \"outside\"}, \"baxis\": {\"gridcolor\": \"rgb(232,232,232)\", \"linecolor\": \"rgb(36,36,36)\", \"showgrid\": false, \"showline\": true, \"ticks\": \"outside\"}, \"bgcolor\": \"white\", \"caxis\": {\"gridcolor\": \"rgb(232,232,232)\", \"linecolor\": \"rgb(36,36,36)\", \"showgrid\": false, \"showline\": true, \"ticks\": \"outside\"}}, \"title\": {\"x\": 0.05}, \"xaxis\": {\"automargin\": true, \"gridcolor\": \"rgb(232,232,232)\", \"linecolor\": \"rgb(36,36,36)\", \"showgrid\": false, \"showline\": true, \"ticks\": \"outside\", \"title\": {\"standoff\": 15}, \"zeroline\": false, \"zerolinecolor\": \"rgb(36,36,36)\"}, \"yaxis\": {\"automargin\": true, \"gridcolor\": \"rgb(232,232,232)\", \"linecolor\": \"rgb(36,36,36)\", \"showgrid\": false, \"showline\": true, \"ticks\": \"outside\", \"title\": {\"standoff\": 15}, \"zeroline\": false, \"zerolinecolor\": \"rgb(36,36,36)\"}}}, \"xaxis\": {\"anchor\": \"y\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"bus\"}, \"categoryorder\": \"array\", \"categoryarray\": [\"684\", \"692\", \"645\", \"611\", \"646\", \"634\", \"652\", \"675\", \"670\"]}, \"yaxis\": {\"anchor\": \"x\", \"domain\": [0.0, 1.0], \"title\": {\"text\": \"max_kw\"}}, \"legend\": {\"title\": {\"text\": \"plot_color\"}, \"tracegroupgap\": 0}, \"margin\": {\"t\": 60}, \"barmode\": \"group\"}}",
    "traditionalHCTableHeadings": [
        "bus",
        "max_kw",
        "reached_max",
        "thermal_violation",
        "voltage_violation"
    ],
    "traditionalHCTableValues": [
        [
            "684",
            1,
            true,
            true,
            false
        ],
        [
            "692",
            1,
            true,
            true,
            false
        ],
        [
            "645",
            1,
            true,
            true,
            false
        ],
        [
            "611",
            1,
            true,
            true,
            false
        ],
        [
            "646",
            1,
            true,
            true,
            false
        ],
        [
            "634",
            1,
            true,
            true,
            false
        ],
        [
            "652",
            1,
            true,
            true,
            false
        ],
        [
            "675",
            1,
            true,
            true,
            false
        ],
        [
            "670",
            1,
            true,
            true,
            false
        ]
    ],
    "traditionalRuntime": 0.16750597953796387,
    "traditionalHCResults": [
        {
            "bus": "684",
            "max_kw": 1,
            "reached_max": true,
            "thermal_violation": true,
            "voltage_violation": false
        },
        {
            "bus": "692",
            "max_kw": 1,
            "reached_max": true,
            "thermal_violation": true,
            "voltage_violation": false
        },
        {
            "bus": "645",
            "max_kw": 1,
            "reached_max": true,
            "thermal_violation": true,
            "voltage_violation": false
        },
        {
            "bus": "611",
            "max_kw": 1,
            "reached_max": true,
            "thermal_violation": true,
            "voltage_violation": false
        },
        {
            "bus": "646",
            "max_kw": 1,
            "reached_max": true,
            "thermal_violation": true,
            "voltage_violation": false
        },
        {
            "bus": "634",
            "max_kw": 1,
            "reached_max": true,
            "thermal_violation": true,
            "voltage_violation": false
        },
        {
            "bus": "652",
            "max_kw": 1,
            "reached_max": true,
            "thermal_violation": true,
            "voltage_violation": false
        },
        {
            "bus": "675",
            "max_kw": 1,
            "reached_max": true,
            "thermal_violation": true,
            "voltage_violation": false
        },
        {
            "bus": "670",
            "max_kw": 1,
            "reached_max": true,
            "thermal_violation": true,
            "voltage_violation": false
        }
    ],
    "stdout": "Success",
    "stderr": "",
    "htmlHash": "144445ec41955b2b4e14aaa00cb4e42a0ef77e8b4acafa0bceae928c7bf2ddba",
    "pythonHash": "971948610ce77b78090bb32db55a5949471b82c65d16224dfb91ee7964ff04b3",
    "oldVersion": false,
    "fileNames": [
        "geoJson_offline.html",
        "color_test.omd",
        "circuit.dss",
        "mohcaInputCustom.csv",
        "traditionalGraphTable.html",
        "circuit.dss.omd",
        "traditionalGraphData.html",
        "PPID.txt",
        "HOSTCAP.dss",
        "volts.csv",
        "color_by.csv",
        "overloads.csv",
        "allInputData.json",
        "allOutputData.json"
    ]
}